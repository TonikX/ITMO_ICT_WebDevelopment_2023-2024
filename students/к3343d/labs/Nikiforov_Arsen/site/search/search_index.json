{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b. \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 \u0410\u0440\u0441\u0435\u043d. \u0413\u0440\u0443\u043f\u043f\u0430 k3343d","title":"\u0413\u043b\u0430\u0432\u043d\u0430\u044f"},{"location":"lw1/","text":"\u0421\u0410\u041d\u041a\u0422-\u041f\u0415\u0422\u0415\u0420\u0411\u0423\u0420\u0413\u0421\u041a\u0418\u0419 \u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e \u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430: \u0412\u0435\u0431 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u041e\u0442\u0447\u0435\u0442 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161 \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043b: \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 \u0410\u0440\u0441\u0435\u043d \u0413\u0440\u0443\u043f\u043f\u0430: \u041a3343d \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043b: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0418\u0433\u043e\u0440\u0435\u0432\u0438\u0447 \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023 \u0433.","title":"Main"},{"location":"lw1/#-","text":"","title":"\u0421\u0410\u041d\u041a\u0422-\u041f\u0415\u0422\u0415\u0420\u0411\u0423\u0420\u0413\u0421\u041a\u0418\u0419 \u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e"},{"location":"lw1/#_1","text":"","title":"\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430: \u0412\u0435\u0431 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"lw1/#_2","text":"","title":"\u041e\u0442\u0447\u0435\u0442"},{"location":"lw1/#no1","text":"\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043b: \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 \u0410\u0440\u0441\u0435\u043d \u0413\u0440\u0443\u043f\u043f\u0430: \u041a3343d \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043b: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0418\u0433\u043e\u0440\u0435\u0432\u0438\u0447 \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023 \u0433.","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161"},{"location":"lw1/task1/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161 \u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \"Hello, server\". \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \"Hello, client\". \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 client.py import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f UDP client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u0410\u0434\u0440\u0435\u0441 \u0438 \u043f\u043e\u0440\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 server_address = ('localhost', 12345) # \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 message = \"Hello, server\" # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 client_socket.sendto(message.encode(), server_address) # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 data, _ = client_socket.recvfrom(1024) # \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {data.decode()}\") # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 client_socket.close() server.py import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f UDP server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 server_address = ('localhost', 12345) server_socket.bind(server_address) print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0438 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 12345...\") while True: # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u0435\u0433\u043e \u0430\u0434\u0440\u0435\u0441 #\u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u044d\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 data data, client_address = server_socket.recvfrom(1024) #\u044d\u0442\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u0430 1024 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u0439\u0442 \u043a\u043e\u0440\u043e\u0447\u0435 # \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 ({client_address}): {data.decode()}\") # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 response = \"Hello, client\" server_socket.sendto(response.encode(), client_address) \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (client.py) \u0421\u043e\u0437\u0434\u0430\u0435\u0442 UDP \u0441\u043e\u043a\u0435\u0442. \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \"Hello, server\" \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440. \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (server.py) \u0421\u043e\u0437\u0434\u0430\u0435\u0442 UDP \u0441\u043e\u043a\u0435\u0442 \u0438 \u043f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0435\u0433\u043e \u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443. \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \"Hello, client\" \u043a\u043b\u0438\u0435\u043d\u0442\u0443.","title":"task1"},{"location":"lw1/task1/#no1","text":"\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \"Hello, server\". \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \"Hello, client\". \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161"},{"location":"lw1/task1/#_1","text":"client.py import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f UDP client_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u0410\u0434\u0440\u0435\u0441 \u0438 \u043f\u043e\u0440\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 server_address = ('localhost', 12345) # \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 message = \"Hello, server\" # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 client_socket.sendto(message.encode(), server_address) # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 data, _ = client_socket.recvfrom(1024) # \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {data.decode()}\") # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 client_socket.close() server.py import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f UDP server_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 server_address = ('localhost', 12345) server_socket.bind(server_address) print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0438 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 12345...\") while True: # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u0435\u0433\u043e \u0430\u0434\u0440\u0435\u0441 #\u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u044d\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 data data, client_address = server_socket.recvfrom(1024) #\u044d\u0442\u043e \u043a\u043e\u043c\u0430\u043d\u0434\u0430 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u0430 1024 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u0439\u0442 \u043a\u043e\u0440\u043e\u0447\u0435 # \u0412\u044b\u0432\u043e\u0434\u0438\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 ({client_address}): {data.decode()}\") # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 response = \"Hello, client\" server_socket.sendto(response.encode(), client_address)","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"lw1/task1/#_2","text":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (client.py) \u0421\u043e\u0437\u0434\u0430\u0435\u0442 UDP \u0441\u043e\u043a\u0435\u0442. \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \"Hello, server\" \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440. \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (server.py) \u0421\u043e\u0437\u0434\u0430\u0435\u0442 UDP \u0441\u043e\u043a\u0435\u0442 \u0438 \u043f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0435\u0433\u043e \u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443. \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0412\u044b\u0432\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \"Hello, client\" \u043a\u043b\u0438\u0435\u043d\u0442\u0443.","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b"},{"location":"lw1/task2/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162 \u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439: a. \u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 b. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f. c. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438. d. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket . \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 client.py import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u0410\u0434\u0440\u0435\u0441 \u0438 \u043f\u043e\u0440\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 server_address = ('localhost', 12345) # \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 client_socket.connect(server_address) print(\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043e \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443...\") # \u0412\u0432\u043e\u0434\u0438\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u0442\u0435\u043e\u0440\u0435\u043c\u044b \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 (\u0434\u043b\u0438\u043d\u044b \u043a\u0430\u0442\u0435\u0442\u043e\u0432) \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b a = float(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430: \")) b = float(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430: \")) # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441\u0435\u0440\u0432\u0435\u0440\u0443 message = f\"{a},{b}\" client_socket.send(message.encode()) # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 response = client_socket.recv(1024) print(f\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {response.decode()}\") # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c client_socket.close() server.py import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0430\u0434\u0440\u0435\u0441 \u0438 \u043f\u043e\u0440\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u0441\u043b\u0443\u0448\u0430\u0442\u044c server_address = ('localhost', 12345) # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 server_socket.bind(server_address) # \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u0441\u043b\u0443\u0448\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b (\u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c 5 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439) server_socket.listen(5) print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0438 \u0436\u0434\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432...\") while True: # \u041e\u0436\u0438\u0434\u0430\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 client_socket, client_address = server_socket.accept() print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c {client_address}\") # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 data = client_socket.recv(1024) print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430: {data.decode()}\") # \u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 (\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u0442\u0435\u043e\u0440\u0435\u043c\u044b \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430) params = data.decode().split(',') a = float(params[0]) b = float(params[1]) # \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c \u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0443 (\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0442\u0435\u043e\u0440\u0435\u043c\u044b \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430) c = (a**2 + b**2)**0.5 # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443 response = f\"\u0413\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0430 (c) \u0440\u0430\u0432\u043d\u0430: {c}\" client_socket.send(response.encode()) # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c client_socket.close() \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u041a\u043e\u0434 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u043f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0442\u0435\u043e\u0440\u0435\u043c\u044b \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 - \u0434\u043b\u0438\u043d\u044b \u043a\u0430\u0442\u0435\u0442\u043e\u0432), \u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u044d\u0442\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0443). \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c (client.py) \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u043e\u043a\u0435\u0442 \u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c. \u0417\u0430\u0442\u0435\u043c \u043e\u043d\u0430 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u0438\u043d\u044b \u043a\u0430\u0442\u0435\u0442\u043e\u0432, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0445 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440, \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0443) \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0435\u0433\u043e. \u0421\u0435\u0440\u0432\u0435\u0440\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c (server.py) \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u043e\u043a\u0435\u0442 \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432. \u041a\u043e\u0433\u0434\u0430 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f, \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 (\u0434\u043b\u0438\u043d\u044b \u043a\u0430\u0442\u0435\u0442\u043e\u0432), \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0443, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435. \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435:","title":"task2"},{"location":"lw1/task2/#no2","text":"\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439: a. \u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 b. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f. c. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438. d. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket . \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162"},{"location":"lw1/task2/#_1","text":"client.py import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430 client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u0410\u0434\u0440\u0435\u0441 \u0438 \u043f\u043e\u0440\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 server_address = ('localhost', 12345) # \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 client_socket.connect(server_address) print(\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043e \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443...\") # \u0412\u0432\u043e\u0434\u0438\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u0442\u0435\u043e\u0440\u0435\u043c\u044b \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 (\u0434\u043b\u0438\u043d\u044b \u043a\u0430\u0442\u0435\u0442\u043e\u0432) \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b a = float(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430: \")) b = float(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043a\u0430\u0442\u0435\u0442\u0430: \")) # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441\u0435\u0440\u0432\u0435\u0440\u0443 message = f\"{a},{b}\" client_socket.send(message.encode()) # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 response = client_socket.recv(1024) print(f\"\u041e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: {response.decode()}\") # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c client_socket.close() server.py import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0430\u0434\u0440\u0435\u0441 \u0438 \u043f\u043e\u0440\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u0441\u043b\u0443\u0448\u0430\u0442\u044c server_address = ('localhost', 12345) # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u043a \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 server_socket.bind(server_address) # \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u0441\u043b\u0443\u0448\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b (\u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c 5 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439) server_socket.listen(5) print(\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u0438 \u0436\u0434\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432...\") while True: # \u041e\u0436\u0438\u0434\u0430\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 client_socket, client_address = server_socket.accept() print(f\"\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c {client_address}\") # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 data = client_socket.recv(1024) print(f\"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u043e \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430: {data.decode()}\") # \u0420\u0430\u0437\u0431\u0438\u0440\u0430\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 (\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0434\u043b\u044f \u0442\u0435\u043e\u0440\u0435\u043c\u044b \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430) params = data.decode().split(',') a = float(params[0]) b = float(params[1]) # \u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c \u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0443 (\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0442\u0435\u043e\u0440\u0435\u043c\u044b \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430) c = (a**2 + b**2)**0.5 # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0443 response = f\"\u0413\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0430 (c) \u0440\u0430\u0432\u043d\u0430: {c}\" client_socket.send(response.encode()) # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c client_socket.close()","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"lw1/task2/#_2","text":"\u041a\u043e\u0434 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u043f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044e \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0442\u0435\u043e\u0440\u0435\u043c\u044b \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 - \u0434\u043b\u0438\u043d\u044b \u043a\u0430\u0442\u0435\u0442\u043e\u0432), \u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u044d\u0442\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 (\u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0443). \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c (client.py) \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u043e\u043a\u0435\u0442 \u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c. \u0417\u0430\u0442\u0435\u043c \u043e\u043d\u0430 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u0438\u043d\u044b \u043a\u0430\u0442\u0435\u0442\u043e\u0432, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0445 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440, \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 (\u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0443) \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0435\u0433\u043e. \u0421\u0435\u0440\u0432\u0435\u0440\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c (server.py) \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u0441\u043e\u043a\u0435\u0442 \u0438 \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432. \u041a\u043e\u0433\u0434\u0430 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f, \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 (\u0434\u043b\u0438\u043d\u044b \u043a\u0430\u0442\u0435\u0442\u043e\u0432), \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0433\u0438\u043f\u043e\u0442\u0435\u043d\u0443\u0437\u0443, \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0438 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435. \u041f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435:","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b"},{"location":"lw1/task3/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163 \u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438: http://zetcode.com/python/socket/ \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket \u0420\u0435\u0448\u0435\u043d\u0438\u0435 server.py import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c IP-\u0430\u0434\u0440\u0435\u0441 \u0438 \u043f\u043e\u0440\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u0441\u043b\u0443\u0448\u0430\u0442\u044c host = \"127.0.0.1\" # IP-\u0430\u0434\u0440\u0435\u0441 localhost port = 8080 # \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0440\u0442 # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 server_socket.bind((host, port)) # \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u0442\u044c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f server_socket.listen(1) # 1 - \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 print(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u043d\u0430 http://{host}:{port}/\") while True: # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 client_socket, client_address = server_socket.accept() # \u0427\u0438\u0442\u0430\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 request = client_socket.recv(1024).decode() # \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c HTTP-\u043e\u0442\u0432\u0435\u0442 response = \"\"\"HTTP/1.1 200 OK Content-Type: text/html \"\"\" # \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0438 \u0447\u0438\u0442\u0430\u0435\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430 \"index.html\" with open(\"index.html\", \"r\") as file: response += file.read() # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 client_socket.sendall(response.encode()) # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c client_socket.close() \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u043a\u043e\u0434: \u041a\u043e\u0434 \u0432 server.py \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 HTTP-\u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u043e\u0440\u0442. \u041a\u043e\u0433\u0434\u0430 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f, \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 index.html . \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u0443\u044e \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b server.py \u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f IP-\u0430\u0434\u0440\u0435\u0441 \u0438 \u043f\u043e\u0440\u0442 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u044f. \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u043a\u0435\u0442 \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443. \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439. \u0412 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0446\u0438\u043a\u043b\u0435: \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0427\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0437\u0430\u043f\u0440\u043e\u0441 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442\u0441\u044f HTTP-\u043e\u0442\u0432\u0435\u0442 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u044b\u043c \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \"index.html\". \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c. index.html \u043f\u0440\u043e\u0441\u0442\u0430\u044f HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u043c \u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u043c. <!DOCTYPE html> <html> <head> <title>MESSAGE LAB1</title> </head> <body> <h1>NIKIFOROV ARSEN</h1> <p>HTML-PAGE FROM MY SERVER</p> </body> </html> \u0417\u0430\u043f\u0443\u0441\u043a \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0447\u0435\u0440\u0435\u0437 \u043f\u043e\u0440\u0442 8080 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 html","title":"task3"},{"location":"lw1/task3/#no3","text":"\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438: http://zetcode.com/python/socket/ \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163"},{"location":"lw1/task3/#_1","text":"server.py import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c IP-\u0430\u0434\u0440\u0435\u0441 \u0438 \u043f\u043e\u0440\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u0441\u043b\u0443\u0448\u0430\u0442\u044c host = \"127.0.0.1\" # IP-\u0430\u0434\u0440\u0435\u0441 localhost port = 8080 # \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0440\u0442 # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443 server_socket.bind((host, port)) # \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u043c \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u0442\u044c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f server_socket.listen(1) # 1 - \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0436\u0438\u0434\u0430\u044e\u0449\u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 print(f\"\u0421\u0435\u0440\u0432\u0435\u0440 \u0441\u043b\u0443\u0448\u0430\u0435\u0442 \u043d\u0430 http://{host}:{port}/\") while True: # \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 client_socket, client_address = server_socket.accept() # \u0427\u0438\u0442\u0430\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 request = client_socket.recv(1024).decode() # \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c HTTP-\u043e\u0442\u0432\u0435\u0442 response = \"\"\"HTTP/1.1 200 OK Content-Type: text/html \"\"\" # \u041e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0438 \u0447\u0438\u0442\u0430\u0435\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430 \"index.html\" with open(\"index.html\", \"r\") as file: response += file.read() # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 client_socket.sendall(response.encode()) # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c client_socket.close() \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u043a\u043e\u0434: \u041a\u043e\u0434 \u0432 server.py \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 HTTP-\u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u043e\u0440\u0442. \u041a\u043e\u0433\u0434\u0430 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f, \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 index.html . \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0443\u0432\u0438\u0434\u0435\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u0443\u044e \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0442\u0435\u043a\u0441\u0442\u043e\u043c.","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"lw1/task3/#_2","text":"server.py \u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u043a\u0435\u0442 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f IP-\u0430\u0434\u0440\u0435\u0441 \u0438 \u043f\u043e\u0440\u0442 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u044f. \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u043a\u0435\u0442 \u043a \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u0430\u0434\u0440\u0435\u0441\u0443 \u0438 \u043f\u043e\u0440\u0442\u0443. \u041d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439. \u0412 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0446\u0438\u043a\u043b\u0435: \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0427\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0437\u0430\u043f\u0440\u043e\u0441 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442\u0441\u044f HTTP-\u043e\u0442\u0432\u0435\u0442 \u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u044b\u043c \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 \"index.html\". \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c. index.html \u043f\u0440\u043e\u0441\u0442\u0430\u044f HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u043c \u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u043c. <!DOCTYPE html> <html> <head> <title>MESSAGE LAB1</title> </head> <body> <h1>NIKIFOROV ARSEN</h1> <p>HTML-PAGE FROM MY SERVER</p> </body> </html> \u0417\u0430\u043f\u0443\u0441\u043a \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0447\u0435\u0440\u0435\u0437 \u043f\u043e\u0440\u0442 8080 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 html","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b"},{"location":"lw1/task4/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21164 \u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438: https://docs.python.org/3/library/threading.html https://webdevblog.ru/vvedenie-v-potoki-v-python/ \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading. \u0414\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e UDP, thearding \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441 TCP \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0418 \u043f\u0440\u0438\u0435\u043c \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432\u0441\u0435\u043c \u044e\u0437\u0435\u0440\u0430\u043c \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0432 \u043f\u043e\u0442\u043e\u043a\u0430\u0445. \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u044e\u0437\u0435\u0440\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0442\u043e\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 client.py import socket import threading class Client: def __init__(self, host='127.0.0.1', port=55555): self.nickname = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0430\u0448 \u043d\u0438\u043a\u043d\u0435\u0439\u043c: \") self.client = socket.socket(socket.AF_INET, socket.SOCK_STREAM) self.client.connect((host, port)) def receive(self): while True: try: message = self.client.recv(1024).decode('utf-8') if message == 'NICK': self.client.send(self.nickname.encode('utf-8')) else: print(message) except: print(\"\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430!\") self.client.close() break def write(self): while True: message = input(\"\") if message.lower() == 'quit': # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \"quit\" \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430 self.client.send('quit'.encode('utf-8')) break else: message_to_send = f'{self.nickname}: {message}' self.client.send(message_to_send.encode('utf-8')) def run(self): receive_thread = threading.Thread(target=self.receive) receive_thread.start() write_thread = threading.Thread(target=self.write) write_thread.start() client = Client() client.run() server.py import threading import socket class Server: def __init__(self, host = '127.0.0.1', port = 55555): self.host = host self.port = port self.server = socket.socket(socket.AF_INET, socket.SOCK_STREAM) self.server.bind((self.host, self.port)) self.server.listen() self.clients = [] # \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 self.nicknames = [] # \u0421\u043f\u0438\u0441\u043e\u043a \u043d\u0438\u043a\u043d\u0435\u0439\u043c\u043e\u0432 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 def broadcast(self, message): # \u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c for client in self.clients: client.send(message) def handle(self, client): while True: try: message = client.recv(1024) # \u041f\u0440\u0438\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (\u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c 1024 \u0431\u0430\u0439\u0442\u0430) self.broadcast(message) # \u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c except: # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439, \u0435\u0441\u043b\u0438 \u043a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f index = self.clients.index(client) self.clients.remove(client) client.close() nickname = self.nicknames[index] self.nicknames.remove(nickname) self.broadcast(f'{nickname} left the chat!'.encode('ascii')) break def receive(self): while True: client, address = self.server.accept() # \u041f\u0440\u0438\u043d\u044f\u0442\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u0435\u0433\u043e \u0430\u0434\u0440\u0435\u0441\u0430 print(f'Connected with {str(address)}') client.send('NICK'.encode('ascii')) # \u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0438\u043a\u043d\u0435\u0439\u043c\u0430 \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 nickname = client.recv(1024).decode('ascii') # \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u0438\u043a\u043d\u0435\u0439\u043c\u0430 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 self.nicknames.append(nickname) self.clients.append(client) print(f'Nickname of the client is {nickname}!') self.broadcast(f'{nickname} joined the chat!'.encode('ascii')) # \u041e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0435 \u043e \u0432\u0445\u043e\u0434\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 client.send('Connected to the server!'.encode('ascii')) # \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 thread = threading.Thread(target=self.handle, args=(client,)) thread.start() # \u0417\u0430\u043f\u0443\u0441\u043a \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u043f\u043e\u0442\u043e\u043a\u0435 def run(self): print(\"Server started...\") self.receive() # \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 server = Server() server.run() \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u043a\u043e\u0434: \u041a\u043b\u0438\u0435\u043d\u0442 \u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u043c\u0435\u043d\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0441\u043e\u043a\u0435\u0442\u044b. \u041a\u043b\u0438\u0435\u043d\u0442\u044b \u043c\u043e\u0433\u0443\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0434\u0440\u0443\u0433\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c. \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0440\u0430\u0441\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c\u0438. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b client.py: \u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a: socket (\u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u0435\u0442\u044c\u044e), threading (\u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c). \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 Client \u0434\u043b\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0412 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c, \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0438\u043a\u043d\u0435\u0439\u043c. receive - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. write - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440. run - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043e\u0446\u0435\u043d\u043e\u043a (server.py): \u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a: threading (\u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c), socket (\u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u0435\u0442\u044c\u044e). \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 Server \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0440\u0442\u0430 \u0438 \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0441\u043f\u0438\u0441\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438 \u0438\u0445 \u043d\u0438\u043a\u043d\u0435\u0439\u043c\u043e\u0432. broadcast - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432\u0441\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c. handle - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. receive - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u0440\u0438\u043d\u044f\u0442\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439.","title":"task4"},{"location":"lw1/task4/#no4","text":"\u0417\u0430\u0434\u0430\u0447\u0430: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u0441\u0441\u044b\u043b\u043a\u0438: https://docs.python.org/3/library/threading.html https://webdevblog.ru/vvedenie-v-potoki-v-python/ \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading. \u0414\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e UDP, thearding \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441 TCP \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0418 \u043f\u0440\u0438\u0435\u043c \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432\u0441\u0435\u043c \u044e\u0437\u0435\u0440\u0430\u043c \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0432 \u043f\u043e\u0442\u043e\u043a\u0430\u0445. \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u044e\u0437\u0435\u0440\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0442\u043e\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21164"},{"location":"lw1/task4/#_1","text":"client.py import socket import threading class Client: def __init__(self, host='127.0.0.1', port=55555): self.nickname = input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0432\u0430\u0448 \u043d\u0438\u043a\u043d\u0435\u0439\u043c: \") self.client = socket.socket(socket.AF_INET, socket.SOCK_STREAM) self.client.connect((host, port)) def receive(self): while True: try: message = self.client.recv(1024).decode('utf-8') if message == 'NICK': self.client.send(self.nickname.encode('utf-8')) else: print(message) except: print(\"\u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430!\") self.client.close() break def write(self): while True: message = input(\"\") if message.lower() == 'quit': # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \"quit\" \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430 self.client.send('quit'.encode('utf-8')) break else: message_to_send = f'{self.nickname}: {message}' self.client.send(message_to_send.encode('utf-8')) def run(self): receive_thread = threading.Thread(target=self.receive) receive_thread.start() write_thread = threading.Thread(target=self.write) write_thread.start() client = Client() client.run() server.py import threading import socket class Server: def __init__(self, host = '127.0.0.1', port = 55555): self.host = host self.port = port self.server = socket.socket(socket.AF_INET, socket.SOCK_STREAM) self.server.bind((self.host, self.port)) self.server.listen() self.clients = [] # \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 self.nicknames = [] # \u0421\u043f\u0438\u0441\u043e\u043a \u043d\u0438\u043a\u043d\u0435\u0439\u043c\u043e\u0432 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 def broadcast(self, message): # \u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c for client in self.clients: client.send(message) def handle(self, client): while True: try: message = client.recv(1024) # \u041f\u0440\u0438\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 (\u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c 1024 \u0431\u0430\u0439\u0442\u0430) self.broadcast(message) # \u0420\u0430\u0441\u0441\u044b\u043b\u043a\u0430 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c except: # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439, \u0435\u0441\u043b\u0438 \u043a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u043b\u0441\u044f index = self.clients.index(client) self.clients.remove(client) client.close() nickname = self.nicknames[index] self.nicknames.remove(nickname) self.broadcast(f'{nickname} left the chat!'.encode('ascii')) break def receive(self): while True: client, address = self.server.accept() # \u041f\u0440\u0438\u043d\u044f\u0442\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0438 \u0435\u0433\u043e \u0430\u0434\u0440\u0435\u0441\u0430 print(f'Connected with {str(address)}') client.send('NICK'.encode('ascii')) # \u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0438\u043a\u043d\u0435\u0439\u043c\u0430 \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 nickname = client.recv(1024).decode('ascii') # \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u0438\u043a\u043d\u0435\u0439\u043c\u0430 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 self.nicknames.append(nickname) self.clients.append(client) print(f'Nickname of the client is {nickname}!') self.broadcast(f'{nickname} joined the chat!'.encode('ascii')) # \u041e\u043f\u043e\u0432\u0435\u0449\u0435\u043d\u0438\u0435 \u043e \u0432\u0445\u043e\u0434\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 client.send('Connected to the server!'.encode('ascii')) # \u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 thread = threading.Thread(target=self.handle, args=(client,)) thread.start() # \u0417\u0430\u043f\u0443\u0441\u043a \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c \u043f\u043e\u0442\u043e\u043a\u0435 def run(self): print(\"Server started...\") self.receive() # \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 server = Server() server.run() \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u043a\u043e\u0434: \u041a\u043b\u0438\u0435\u043d\u0442 \u0438 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u043c\u0435\u043d\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0441\u043e\u043a\u0435\u0442\u044b. \u041a\u043b\u0438\u0435\u043d\u0442\u044b \u043c\u043e\u0433\u0443\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0442 \u0434\u0440\u0443\u0433\u0438\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c. \u0421\u0435\u0440\u0432\u0435\u0440 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0440\u0430\u0441\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c\u0438.","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"lw1/task4/#_2","text":"client.py: \u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a: socket (\u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u0435\u0442\u044c\u044e), threading (\u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c). \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 Client \u0434\u043b\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0412 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c, \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0438\u043a\u043d\u0435\u0439\u043c. receive - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. write - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440. run - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043e\u0446\u0435\u043d\u043e\u043a (server.py): \u0418\u043c\u043f\u043e\u0440\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a: threading (\u043c\u043d\u043e\u0433\u043e\u043f\u043e\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c), socket (\u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u0435\u0442\u044c\u044e). \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430 Server \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0412 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0440\u0442\u0430 \u0438 \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0441\u043f\u0438\u0441\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438 \u0438\u0445 \u043d\u0438\u043a\u043d\u0435\u0439\u043c\u043e\u0432. broadcast - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432\u0441\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c. handle - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. receive - \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u0440\u0438\u043d\u044f\u0442\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439.","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b"},{"location":"lw1/task5/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21165 \u0417\u0430\u0434\u0430\u0447\u0430: \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0435\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0437\u0434\u0435\u0441\u044c . \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u043c\u0430\u043d\u0443\u0430\u043b \u043f\u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043f\u043e \u044d\u0442\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u0435 . \u0417\u0430\u0434\u0430\u0447\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 server.py import http.server import urllib.parse grades = {} class MyHttpRequestHandler(http.server.SimpleHTTPRequestHandler): def do_GET(self): if self.path == '/': self.send_response(200) self.send_header(\"Content-type\", \"text/html\") self.end_headers() html = \"\"\" <!DOCTYPE html> <html> <head> <title>Add Grade</title> </head> <body> <h1>Add Grade</h1> <form method=\"POST\" action=\"/add_grade\"> <label for=\"subject\">Subject:</label><br> <input type=\"text\" id=\"subject\" name=\"subject\"><br> <label for=\"grade\">Grade:</label><br> <input type=\"number\" id=\"grade\" name=\"grade\" min=\"1\" max=\"5\"><br><br> <input type=\"submit\" value=\"Submit\"> </form> <p><a href=\"/grades\">Grades Overview</a></p> </body> </html> \"\"\" self.wfile.write(bytes(html, \"utf8\")) return elif self.path == '/grades': self.send_response(200) self.send_header(\"Content-type\", \"text/html\") self.end_headers() # \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c HTML-\u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0434\u043b\u044f \u043e\u0431\u0437\u043e\u0440\u0430 \u043e\u0446\u0435\u043d\u043e\u043a html = \"\"\" <html> <head> <title>Grades Overview</title> </head> <body> <h1>Grades Overview</h1> <table border=\"1\"> <tr><th>Subject</th> <th>Grades</th></tr> \"\"\" for subject, subject_grades in grades.items(): # \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430 \u0438 \u0435\u0433\u043e \u043e\u0446\u0435\u043d\u043e\u043a html += f\"<tr><td>{subject}</td><td>{', '.join(map(str, subject_grades))}</td></tr>\" html += \"</table><p><a href='/'>Add Grade</a></p></body></html>\" self.wfile.write(bytes(html, \"utf8\")) return def do_POST(self): content_length = int(self.headers['Content-Length']) post_data = self.rfile.read(content_length).decode('utf-8') params = urllib.parse.parse_qs(post_data) subject = params['subject'][0] grade = params['grade'][0] try: grade = int(grade) if grade < 1 or grade > 5: raise ValueError(\"Grade out of range\") if subject not in grades: grades[subject] = [] grades[subject].append(grade) self.send_response(303) self.send_header('Location', '/') self.end_headers() except ValueError: self.send_response(400) self.end_headers() self.wfile.write(bytes(\"Bad request. Grade must be between 1 and 5.\", \"utf8\")) handler_object = MyHttpRequestHandler my_server = http.server.HTTPServer((\"localhost\", 8080), handler_object) print(\"Server is running on localhost:8080...\") my_server.serve_forever() \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u043a\u043e\u0434: \u0421\u043e\u0437\u0434\u0430\u0435\u0442 HTTP-\u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 GET \u0438 POST \u0437\u0430\u043f\u0440\u043e\u0441\u044b. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a GET \u0437\u0430\u043f\u0440\u043e\u0441\u0430: \u041e\u0442\u0434\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0446\u0435\u043d\u043e\u043a, \u0435\u0441\u043b\u0438 \u043f\u0443\u0442\u044c \u0440\u0430\u0432\u0435\u043d '/'. \u041e\u0442\u0434\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0431\u0437\u043e\u0440\u043e\u043c \u043e\u0446\u0435\u043d\u043e\u043a, \u0435\u0441\u043b\u0438 \u043f\u0443\u0442\u044c \u0440\u0430\u0432\u0435\u043d '/grades'. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a POST \u0437\u0430\u043f\u0440\u043e\u0441\u0430: \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b (\u043f\u0440\u0435\u0434\u043c\u0435\u0442 \u0438 \u043e\u0446\u0435\u043d\u043a\u0430). \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u043e\u0446\u0435\u043d\u043a\u0443 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e grades. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f 303 (See Other) \u0441 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0446\u0435\u043d\u043e\u043a. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0446\u0435\u043d\u043e\u043a \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 HTML-\u0444\u043e\u0440\u043c\u0443, \u0433\u0434\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u043e\u0434\u0438\u0442 \u043f\u0440\u0435\u0434\u043c\u0435\u0442 \u0438 \u043e\u0446\u0435\u043d\u043a\u0443. \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u043e\u043c POST \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 \"/add_grade\" \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043e\u0446\u0435\u043d\u043e\u043a \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0431\u0437\u043e\u0440\u043e\u043c \u043e\u0446\u0435\u043d\u043e\u043a \u0432 \u0432\u0438\u0434\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 grades (\u043e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u043c) \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.","title":"task5"},{"location":"lw1/task5/#no5","text":"\u0417\u0430\u0434\u0430\u0447\u0430: \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0435\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0437\u0434\u0435\u0441\u044c . \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u043c\u0430\u043d\u0443\u0430\u043b \u043f\u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043f\u043e \u044d\u0442\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u0435 . \u0417\u0430\u0434\u0430\u0447\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21165"},{"location":"lw1/task5/#_1","text":"server.py import http.server import urllib.parse grades = {} class MyHttpRequestHandler(http.server.SimpleHTTPRequestHandler): def do_GET(self): if self.path == '/': self.send_response(200) self.send_header(\"Content-type\", \"text/html\") self.end_headers() html = \"\"\" <!DOCTYPE html> <html> <head> <title>Add Grade</title> </head> <body> <h1>Add Grade</h1> <form method=\"POST\" action=\"/add_grade\"> <label for=\"subject\">Subject:</label><br> <input type=\"text\" id=\"subject\" name=\"subject\"><br> <label for=\"grade\">Grade:</label><br> <input type=\"number\" id=\"grade\" name=\"grade\" min=\"1\" max=\"5\"><br><br> <input type=\"submit\" value=\"Submit\"> </form> <p><a href=\"/grades\">Grades Overview</a></p> </body> </html> \"\"\" self.wfile.write(bytes(html, \"utf8\")) return elif self.path == '/grades': self.send_response(200) self.send_header(\"Content-type\", \"text/html\") self.end_headers() # \u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u043c HTML-\u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0434\u043b\u044f \u043e\u0431\u0437\u043e\u0440\u0430 \u043e\u0446\u0435\u043d\u043e\u043a html = \"\"\" <html> <head> <title>Grades Overview</title> </head> <body> <h1>Grades Overview</h1> <table border=\"1\"> <tr><th>Subject</th> <th>Grades</th></tr> \"\"\" for subject, subject_grades in grades.items(): # \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430 \u0438 \u0435\u0433\u043e \u043e\u0446\u0435\u043d\u043e\u043a html += f\"<tr><td>{subject}</td><td>{', '.join(map(str, subject_grades))}</td></tr>\" html += \"</table><p><a href='/'>Add Grade</a></p></body></html>\" self.wfile.write(bytes(html, \"utf8\")) return def do_POST(self): content_length = int(self.headers['Content-Length']) post_data = self.rfile.read(content_length).decode('utf-8') params = urllib.parse.parse_qs(post_data) subject = params['subject'][0] grade = params['grade'][0] try: grade = int(grade) if grade < 1 or grade > 5: raise ValueError(\"Grade out of range\") if subject not in grades: grades[subject] = [] grades[subject].append(grade) self.send_response(303) self.send_header('Location', '/') self.end_headers() except ValueError: self.send_response(400) self.end_headers() self.wfile.write(bytes(\"Bad request. Grade must be between 1 and 5.\", \"utf8\")) handler_object = MyHttpRequestHandler my_server = http.server.HTTPServer((\"localhost\", 8080), handler_object) print(\"Server is running on localhost:8080...\") my_server.serve_forever() \u0427\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u043a\u043e\u0434: \u0421\u043e\u0437\u0434\u0430\u0435\u0442 HTTP-\u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 GET \u0438 POST \u0437\u0430\u043f\u0440\u043e\u0441\u044b. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a GET \u0437\u0430\u043f\u0440\u043e\u0441\u0430: \u041e\u0442\u0434\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0446\u0435\u043d\u043e\u043a, \u0435\u0441\u043b\u0438 \u043f\u0443\u0442\u044c \u0440\u0430\u0432\u0435\u043d '/'. \u041e\u0442\u0434\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0431\u0437\u043e\u0440\u043e\u043c \u043e\u0446\u0435\u043d\u043e\u043a, \u0435\u0441\u043b\u0438 \u043f\u0443\u0442\u044c \u0440\u0430\u0432\u0435\u043d '/grades'. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a POST \u0437\u0430\u043f\u0440\u043e\u0441\u0430: \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b (\u043f\u0440\u0435\u0434\u043c\u0435\u0442 \u0438 \u043e\u0446\u0435\u043d\u043a\u0430). \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u043e\u0446\u0435\u043d\u043a\u0443 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e grades. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u0434 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f 303 (See Other) \u0441 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0446\u0435\u043d\u043e\u043a.","title":"\u0420\u0435\u0448\u0435\u043d\u0438\u0435"},{"location":"lw1/task5/#_2","text":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0446\u0435\u043d\u043e\u043a \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 HTML-\u0444\u043e\u0440\u043c\u0443, \u0433\u0434\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u043e\u0434\u0438\u0442 \u043f\u0440\u0435\u0434\u043c\u0435\u0442 \u0438 \u043e\u0446\u0435\u043d\u043a\u0443. \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u043e\u043c POST \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 \"/add_grade\" \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438. \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043e\u0446\u0435\u043d\u043e\u043a \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0431\u0437\u043e\u0440\u043e\u043c \u043e\u0446\u0435\u043d\u043e\u043a \u0432 \u0432\u0438\u0434\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 grades (\u043e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u043c) \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b"},{"location":"lw2/","text":"\u0421\u0410\u041d\u041a\u0422-\u041f\u0415\u0422\u0415\u0420\u0411\u0423\u0420\u0413\u0421\u041a\u0418\u0419 \u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e \u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430: \u0412\u0435\u0431 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u041e\u0442\u0447\u0435\u0442 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162 \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043b: \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 \u0410\u0440\u0441\u0435\u043d \u0413\u0440\u0443\u043f\u043f\u0430: \u041a3343d \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043b: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0418\u0433\u043e\u0440\u0435\u0432\u0438\u0447 \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023 \u0433.","title":"Main"},{"location":"lw2/#-","text":"","title":"\u0421\u0410\u041d\u041a\u0422-\u041f\u0415\u0422\u0415\u0420\u0411\u0423\u0420\u0413\u0421\u041a\u0418\u0419 \u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e"},{"location":"lw2/#_1","text":"","title":"\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430: \u0412\u0435\u0431 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"lw2/#_2","text":"","title":"\u041e\u0442\u0447\u0435\u0442"},{"location":"lw2/#no2","text":"\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043b: \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 \u0410\u0440\u0441\u0435\u043d \u0413\u0440\u0443\u043f\u043f\u0430: \u041a3343d \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043b: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0418\u0433\u043e\u0440\u0435\u0432\u0438\u0447 \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023 \u0433.","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162"},{"location":"lw2/admin/","text":"admin.py \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043a\u043e\u0434\u0435: from django.contrib import admin - \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043c\u043e\u0434\u0443\u043b\u044c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043d\u0435\u043b\u0438 Django. from .models import Tour, Reservation, Review - \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Tour, Reservation \u0438 Review \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0417\u0430\u0442\u0435\u043c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e admin.site.register() \u044d\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0432 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043d\u0435\u043b\u0438 Django. \u042d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0432\u044b \u043c\u043e\u0433\u043b\u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u044d\u0442\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0447\u0435\u0440\u0435\u0437 \u0432\u0435\u0431-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043d\u0435\u043b\u0438 Django. \u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u043d\u0443\u0436\u0435\u043d \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0432\u0430\u0448\u0435\u0433\u043e \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Django, \u0433\u0434\u0435 \u0432\u044b \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043e \u0442\u0443\u0440\u0430\u0445 (Tour), \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u0445 (Reservation) \u0438 \u043e\u0442\u0437\u044b\u0432\u0430\u0445 (Review). from django.contrib import admin from .models import Tour, Reservation, Review admin.site.register(Tour) admin.site.register(Reservation) admin.site.register(Review)","title":"Admin"},{"location":"lw2/admin/#adminpy","text":"\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043a\u043e\u0434\u0435: from django.contrib import admin - \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043c\u043e\u0434\u0443\u043b\u044c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043d\u0435\u043b\u0438 Django. from .models import Tour, Reservation, Review - \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Tour, Reservation \u0438 Review \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0417\u0430\u0442\u0435\u043c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e admin.site.register() \u044d\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0432 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043d\u0435\u043b\u0438 Django. \u042d\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0432\u044b \u043c\u043e\u0433\u043b\u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u044d\u0442\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0447\u0435\u0440\u0435\u0437 \u0432\u0435\u0431-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u043f\u0430\u043d\u0435\u043b\u0438 Django. \u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u043d\u0443\u0436\u0435\u043d \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0432\u0430\u0448\u0435\u0433\u043e \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Django, \u0433\u0434\u0435 \u0432\u044b \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043e \u0442\u0443\u0440\u0430\u0445 (Tour), \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\u0445 (Reservation) \u0438 \u043e\u0442\u0437\u044b\u0432\u0430\u0445 (Review). from django.contrib import admin from .models import Tour, Reservation, Review admin.site.register(Tour) admin.site.register(Reservation) admin.site.register(Review)","title":"admin.py"},{"location":"lw2/forms/","text":"forms.py \u0412 \u044d\u0442\u043e\u043c \u0444\u0430\u0439\u043b\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u044b, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u0434\u0430\u043d\u043d\u044b\u0445. ReservationForm - \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0443\u0440\u0430. SoldTourForm - \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0442\u0443\u0440\u0430. ReviewForm - \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. RegistrationForm - \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u042d\u0442\u0438 \u0444\u043e\u0440\u043c\u044b \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0447\u0435\u0440\u0435\u0437 \u0432\u0435\u0431-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 Django. from django import forms from .models import Reservation, Review, SoldTour from django.contrib.auth.forms import UserCreationForm from django.contrib.auth.models import User class ReservationForm(forms.ModelForm): \"\"\" \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0443\u0440\u0430. \"\"\" class Meta: model = Reservation fields = ['tour', 'is_confirmed'] class SoldTourForm(forms.ModelForm): \"\"\" \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0442\u0443\u0440\u0430. \"\"\" class Meta: model = SoldTour fields = [] class ReviewForm(forms.ModelForm): \"\"\" \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \"\"\" class Meta: model = Review fields = ['text', 'rating'] class RegistrationForm(UserCreationForm): \"\"\" \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \"\"\" class Meta: model = User fields = ['username', 'password1', 'password2'] class ReservationForm(forms.ModelForm): \"\"\" \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \"\"\" class Meta: model = Reservation fields = [] class ReviewForm(forms.ModelForm): \"\"\" \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \"\"\" class Meta: model = Review fields = ['text', 'rating']","title":"Forms"},{"location":"lw2/forms/#formspy","text":"\u0412 \u044d\u0442\u043e\u043c \u0444\u0430\u0439\u043b\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u044b, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e \u0434\u0430\u043d\u043d\u044b\u0445. ReservationForm - \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0443\u0440\u0430. SoldTourForm - \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0442\u0443\u0440\u0430. ReviewForm - \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. RegistrationForm - \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u042d\u0442\u0438 \u0444\u043e\u0440\u043c\u044b \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0447\u0435\u0440\u0435\u0437 \u0432\u0435\u0431-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0438 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 Django. from django import forms from .models import Reservation, Review, SoldTour from django.contrib.auth.forms import UserCreationForm from django.contrib.auth.models import User class ReservationForm(forms.ModelForm): \"\"\" \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0442\u0443\u0440\u0430. \"\"\" class Meta: model = Reservation fields = ['tour', 'is_confirmed'] class SoldTourForm(forms.ModelForm): \"\"\" \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0442\u0443\u0440\u0430. \"\"\" class Meta: model = SoldTour fields = [] class ReviewForm(forms.ModelForm): \"\"\" \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \"\"\" class Meta: model = Review fields = ['text', 'rating'] class RegistrationForm(UserCreationForm): \"\"\" \u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \"\"\" class Meta: model = User fields = ['username', 'password1', 'password2'] class ReservationForm(forms.ModelForm): \"\"\" \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \"\"\" class Meta: model = Reservation fields = [] class ReviewForm(forms.ModelForm): \"\"\" \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \"\"\" class Meta: model = Review fields = ['text', 'rating']","title":"forms.py"},{"location":"lw2/reservation/","text":"\u041c\u043e\u0434\u0435\u043b\u044c Reservation \u041c\u043e\u0434\u0435\u043b\u044c Reservation \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438. \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f: user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0441\u0434\u0435\u043b\u0430\u0432\u0448\u0435\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. tour: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e Tour \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u0442\u0443\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b\u043b \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d. reservation_date: \u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 (\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438). is_confirmed: from django.db import models from django.contrib.auth.models import User class Reservation(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE) tour = models.ForeignKey(Tour, on_delete=models.CASCADE) reservation_date = models.DateField(auto_now_add=True) is_confirmed = models.BooleanField(default=False) def __str__(self): return f\"{self.user.username} - {self.tour.title}\"","title":"Reservation"},{"location":"lw2/reservation/#reservation","text":"\u041c\u043e\u0434\u0435\u043b\u044c Reservation \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438. \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f: user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0441\u0434\u0435\u043b\u0430\u0432\u0448\u0435\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. tour: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e Tour \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u0442\u0443\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b\u043b \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d. reservation_date: \u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 (\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438). is_confirmed: from django.db import models from django.contrib.auth.models import User class Reservation(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE) tour = models.ForeignKey(Tour, on_delete=models.CASCADE) reservation_date = models.DateField(auto_now_add=True) is_confirmed = models.BooleanField(default=False) def __str__(self): return f\"{self.user.username} - {self.tour.title}\"","title":"\u041c\u043e\u0434\u0435\u043b\u044c Reservation"},{"location":"lw2/review/","text":"\u041c\u043e\u0434\u0435\u043b\u044c Review \u041c\u043e\u0434\u0435\u043b\u044c Review \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u0442\u0437\u044b\u0432\u044b \u043e \u0442\u0443\u0440\u0430\u0445. \u041e\u043d\u0430 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f: tour: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e Tour \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u0442\u0443\u0440, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043e\u0442\u0437\u044b\u0432. user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043e\u0441\u0442\u0430\u0432\u0438\u0432\u0448\u0435\u0433\u043e \u043e\u0442\u0437\u044b\u0432. review_date: \u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430 (\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438). text: \u0422\u0435\u043a\u0441\u0442 \u043e\u0442\u0437\u044b\u0432\u0430. rating: \u0420\u0435\u0439\u0442\u0438\u043d\u0433 \u043e\u0442\u0437\u044b\u0432\u0430 \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 1 \u0434\u043e 10. from django.db import models from django.contrib.auth.models import User class Review(models.Model): tour = models.ForeignKey(Tour, on_delete=models.CASCADE) user = models.ForeignKey(User, on_delete=models.CASCADE) review_date = models.DateField(auto_now_add=True) text = models.TextField() rating = models.IntegerField(choices=[(i, i) for i in range(1, 11)]) def __str__(self): return f\"{self.user.username} - {self.tour.title} - {self.review_date}\"","title":"Review"},{"location":"lw2/review/#review","text":"\u041c\u043e\u0434\u0435\u043b\u044c Review \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u0442\u0437\u044b\u0432\u044b \u043e \u0442\u0443\u0440\u0430\u0445. \u041e\u043d\u0430 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f: tour: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e Tour \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u0442\u0443\u0440, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043e\u0442\u0437\u044b\u0432. user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043e\u0441\u0442\u0430\u0432\u0438\u0432\u0448\u0435\u0433\u043e \u043e\u0442\u0437\u044b\u0432. review_date: \u0414\u0430\u0442\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430 (\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438). text: \u0422\u0435\u043a\u0441\u0442 \u043e\u0442\u0437\u044b\u0432\u0430. rating: \u0420\u0435\u0439\u0442\u0438\u043d\u0433 \u043e\u0442\u0437\u044b\u0432\u0430 \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 1 \u0434\u043e 10. from django.db import models from django.contrib.auth.models import User class Review(models.Model): tour = models.ForeignKey(Tour, on_delete=models.CASCADE) user = models.ForeignKey(User, on_delete=models.CASCADE) review_date = models.DateField(auto_now_add=True) text = models.TextField() rating = models.IntegerField(choices=[(i, i) for i in range(1, 11)]) def __str__(self): return f\"{self.user.username} - {self.tour.title} - {self.review_date}\"","title":"\u041c\u043e\u0434\u0435\u043b\u044c Review"},{"location":"lw2/soldtour/","text":"\u041c\u043e\u0434\u0435\u043b\u044c SoldTour \u041c\u043e\u0434\u0435\u043b\u044c SoldTour \u043e\u0442\u0440\u0430\u0436\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430\u0445. \u041e\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f: tour: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e Tour \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u0442\u0443\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b\u043b \u043f\u0440\u043e\u0434\u0430\u043d. buyer: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044f \u0442\u0443\u0440\u0430. sale_date: \u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0442\u0443\u0440\u0430 (\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438). price: \u0426\u0435\u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. from django.db import models from django.contrib.auth.models import User class SoldTour(models.Model): tour = models.ForeignKey(Tour, on_delete=models.CASCADE) buyer = models.ForeignKey(User, on_delete=models.CASCADE) sale_date = models.DateTimeField(auto_now_add=True) price = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True) def __str__(self): return f\"{self.buyer.username} - {self.tour.title}\"","title":"SoldTour"},{"location":"lw2/soldtour/#soldtour","text":"\u041c\u043e\u0434\u0435\u043b\u044c SoldTour \u043e\u0442\u0440\u0430\u0436\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430\u0445. \u041e\u043d\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f: tour: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e Tour \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u0442\u0443\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b\u043b \u043f\u0440\u043e\u0434\u0430\u043d. buyer: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044f \u0442\u0443\u0440\u0430. sale_date: \u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0442\u0443\u0440\u0430 (\u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438). price: \u0426\u0435\u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. from django.db import models from django.contrib.auth.models import User class SoldTour(models.Model): tour = models.ForeignKey(Tour, on_delete=models.CASCADE) buyer = models.ForeignKey(User, on_delete=models.CASCADE) sale_date = models.DateTimeField(auto_now_add=True) price = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True) def __str__(self): return f\"{self.buyer.username} - {self.tour.title}\"","title":"\u041c\u043e\u0434\u0435\u043b\u044c SoldTour"},{"location":"lw2/templates/","text":"\u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f templates \u0432 Django \u0412 Django, \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f templates \u0438\u0433\u0440\u0430\u0435\u0442 \u0432\u0430\u0436\u043d\u0443\u044e \u0440\u043e\u043b\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u043d\u0435\u0439 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u044b HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446. \u042d\u0442\u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043b\u043e\u0433\u0438\u043a\u043e\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439. \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 templates: \u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043b\u043e\u0433\u0438\u043a\u0438 \u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f: \u0420\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u0435 HTML-\u043a\u043e\u0434\u0430 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u0430\u0445 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (\u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u0445) \u043e\u0442 \u0435\u0433\u043e \u0432\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f (\u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432). \u041f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u0434\u0430: \u0428\u0430\u0431\u043b\u043e\u043d\u044b \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b HTML \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u0442\u0440\u0430\u043d\u0438\u0446. \u042d\u0442\u043e \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0435\u0434\u0438\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u0438\u0435 \u0432 \u0434\u0438\u0437\u0430\u0439\u043d\u0435. \u041b\u0435\u0433\u043a\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438: \u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435 HTML-\u043a\u043e\u0434\u0430 \u043e\u0442 Python-\u043a\u043e\u0434\u0430 \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0441\u043e\u043f\u0440\u043e\u0432\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0442\u0430\u043a \u043a\u0430\u043a \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0434\u0438\u0437\u0430\u0439\u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0432\u043d\u0435\u0441\u0435\u043d\u044b, \u043d\u0435 \u0437\u0430\u0442\u0440\u0430\u0433\u0438\u0432\u0430\u044f \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0443.","title":"Templates"},{"location":"lw2/templates/#templates-django","text":"\u0412 Django, \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f templates \u0438\u0433\u0440\u0430\u0435\u0442 \u0432\u0430\u0436\u043d\u0443\u044e \u0440\u043e\u043b\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u043d\u0435\u0439 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u044b HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446. \u042d\u0442\u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043b\u043e\u0433\u0438\u043a\u043e\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439.","title":"\u0414\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u044f templates \u0432 Django"},{"location":"lw2/templates/#templates","text":"","title":"\u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 templates:"},{"location":"lw2/templates/#_1","text":"\u0420\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u0438\u0435 HTML-\u043a\u043e\u0434\u0430 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u0430\u0445 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f (\u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0432 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u0445) \u043e\u0442 \u0435\u0433\u043e \u0432\u0438\u0437\u0443\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f (\u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432).","title":"\u0420\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043b\u043e\u0433\u0438\u043a\u0438 \u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f:"},{"location":"lw2/templates/#_2","text":"\u0428\u0430\u0431\u043b\u043e\u043d\u044b \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b HTML \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u0442\u0440\u0430\u043d\u0438\u0446. \u042d\u0442\u043e \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0435\u0434\u0438\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u0438\u0435 \u0432 \u0434\u0438\u0437\u0430\u0439\u043d\u0435.","title":"\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u0434\u0430:"},{"location":"lw2/templates/#_3","text":"\u041e\u0442\u0434\u0435\u043b\u0435\u043d\u0438\u0435 HTML-\u043a\u043e\u0434\u0430 \u043e\u0442 Python-\u043a\u043e\u0434\u0430 \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0441\u043e\u043f\u0440\u043e\u0432\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0442\u0430\u043a \u043a\u0430\u043a \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0434\u0438\u0437\u0430\u0439\u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0432\u043d\u0435\u0441\u0435\u043d\u044b, \u043d\u0435 \u0437\u0430\u0442\u0440\u0430\u0433\u0438\u0432\u0430\u044f \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0443.","title":"\u041b\u0435\u0433\u043a\u043e\u0441\u0442\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438:"},{"location":"lw2/tour/","text":"\u041c\u043e\u0434\u0435\u043b\u044c Tour \u041c\u043e\u0434\u0435\u043b\u044c Tour \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. \u0417\u0434\u0435\u0441\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f: title: \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. agency: \u0410\u0433\u0435\u043d\u0442\u0441\u0442\u0432\u043e, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0435 \u0442\u0443\u0440. description: \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. period: \u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0442\u0443\u0440\u0430. payment_conditions: \u0423\u0441\u043b\u043e\u0432\u0438\u044f \u043e\u043f\u043b\u0430\u0442\u044b \u0442\u0443\u0440\u0430. price: \u0426\u0435\u043d\u0430 \u0442\u0443\u0440\u0430. country: \u0421\u0442\u0440\u0430\u043d\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u0442\u0443\u0440. from django.db import models from django.contrib.auth.models import User class Tour(models.Model): title = models.CharField(max_length=100) agency = models.CharField(max_length=100) description = models.TextField() period = models.CharField(max_length=50) payment_conditions = models.TextField() price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True) country = models.CharField(max_length=50, null=True, blank=True) def __str__(self): return self.title","title":"Tour"},{"location":"lw2/tour/#tour","text":"\u041c\u043e\u0434\u0435\u043b\u044c Tour \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. \u0417\u0434\u0435\u0441\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f: title: \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. agency: \u0410\u0433\u0435\u043d\u0442\u0441\u0442\u0432\u043e, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0435 \u0442\u0443\u0440. description: \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. period: \u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0442\u0443\u0440\u0430. payment_conditions: \u0423\u0441\u043b\u043e\u0432\u0438\u044f \u043e\u043f\u043b\u0430\u0442\u044b \u0442\u0443\u0440\u0430. price: \u0426\u0435\u043d\u0430 \u0442\u0443\u0440\u0430. country: \u0421\u0442\u0440\u0430\u043d\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u0442\u0443\u0440. from django.db import models from django.contrib.auth.models import User class Tour(models.Model): title = models.CharField(max_length=100) agency = models.CharField(max_length=100) description = models.TextField() period = models.CharField(max_length=50) payment_conditions = models.TextField() price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True) country = models.CharField(max_length=50, null=True, blank=True) def __str__(self): return self.title","title":"\u041c\u043e\u0434\u0435\u043b\u044c Tour"},{"location":"lw2/tourreservation/","text":"\u041c\u043e\u0434\u0435\u043b\u044c TourReservation \u041c\u043e\u0434\u0435\u043b\u044c TourReservation: \u041c\u043e\u0434\u0435\u043b\u044c TourReservation \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u043e\u0432. \u041e\u043d\u0430 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f: tour: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e Tour \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u0442\u0443\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b\u043b \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d. user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0441\u0434\u0435\u043b\u0430\u0432\u0448\u0435\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. is_confirmed: \u0424\u043b\u0430\u0433, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. from django.db import models from django.contrib.auth.models import User class TourReservation(models.Model): tour = models.ForeignKey(Tour, on_delete=models.CASCADE) user = models.ForeignKey(User, on_delete=models.CASCADE) is_confirmed = models.BooleanField(default=False)","title":"TourReservation"},{"location":"lw2/tourreservation/#tourreservation","text":"\u041c\u043e\u0434\u0435\u043b\u044c TourReservation: \u041c\u043e\u0434\u0435\u043b\u044c TourReservation \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0442\u0443\u0440\u043e\u0432. \u041e\u043d\u0430 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u043e\u043b\u044f: tour: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e Tour \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u0442\u0443\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u044b\u043b \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d. user: \u0421\u0432\u044f\u0437\u044c \u0441 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0441\u0434\u0435\u043b\u0430\u0432\u0448\u0435\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. is_confirmed: \u0424\u043b\u0430\u0433, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. from django.db import models from django.contrib.auth.models import User class TourReservation(models.Model): tour = models.ForeignKey(Tour, on_delete=models.CASCADE) user = models.ForeignKey(User, on_delete=models.CASCADE) is_confirmed = models.BooleanField(default=False)","title":"\u041c\u043e\u0434\u0435\u043b\u044c TourReservation"},{"location":"lw2/urls/","text":"urls.py \u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0432 Django \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043a\u043e\u0434\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Django \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0443\u043b\u044f path \u0438\u0437 django.urls . \u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u044e\u0442 URL-\u0430\u0434\u0440\u0435\u0441\u0430 \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 (views), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u044d\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0430. from django.urls import path from .views import ( add_review, tour_list, register, user_login, reserve_tour, review_tour, user_reservations, confirm_reservation, tour_detail, reject_reservation, buy_tour, sold_tours, sell_tour, home, menu ) from django.contrib.auth import views as auth_views urlpatterns = [ path('add_review/<int:tour_id>/', add_review, name='add_review_with_id'), path('add_review/', add_review, name='add_review_without_id'), path('', tour_list, name='tour_list'), path('register/', register, name='register'), path('reserve_tour/<int:tour_id>/', reserve_tour, name='reserve_tour'), path('review_tour/<int:tour_id>/', review_tour, name='review_tour'), path('user_reservations/', user_reservations, name='user_reservations'), path('login/', user_login, name='login'), path('confirm_reservation/<int:reservation_id>/', confirm_reservation, name='confirm_reservation'), path('reject_reservation/<int:reservation_id>/', reject_reservation, name='reject_reservation'), path('tour_detail/<int:tour_id>/', tour_detail, name='tour_detail'), path('sell_tour/<int:tour_id>/', sell_tour, name='sell_tour'), path('buy_tour/<int:tour_id>/', buy_tour, name='buy_tour'), path('sold_tours/', sold_tours, name='sold_tours'), path('logout/', auth_views.LogoutView.as_view(), name='logout'), ]","title":"URLs"},{"location":"lw2/urls/#urlspy","text":"","title":"urls.py"},{"location":"lw2/urls/#django","text":"\u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u043a\u043e\u0434\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f Django \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0443\u043b\u044f path \u0438\u0437 django.urls . \u041c\u0430\u0440\u0448\u0440\u0443\u0442\u044b \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u044e\u0442 URL-\u0430\u0434\u0440\u0435\u0441\u0430 \u0441 \u0444\u0443\u043d\u043a\u0446\u0438\u044f\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 (views), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u044d\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0430. from django.urls import path from .views import ( add_review, tour_list, register, user_login, reserve_tour, review_tour, user_reservations, confirm_reservation, tour_detail, reject_reservation, buy_tour, sold_tours, sell_tour, home, menu ) from django.contrib.auth import views as auth_views urlpatterns = [ path('add_review/<int:tour_id>/', add_review, name='add_review_with_id'), path('add_review/', add_review, name='add_review_without_id'), path('', tour_list, name='tour_list'), path('register/', register, name='register'), path('reserve_tour/<int:tour_id>/', reserve_tour, name='reserve_tour'), path('review_tour/<int:tour_id>/', review_tour, name='review_tour'), path('user_reservations/', user_reservations, name='user_reservations'), path('login/', user_login, name='login'), path('confirm_reservation/<int:reservation_id>/', confirm_reservation, name='confirm_reservation'), path('reject_reservation/<int:reservation_id>/', reject_reservation, name='reject_reservation'), path('tour_detail/<int:tour_id>/', tour_detail, name='tour_detail'), path('sell_tour/<int:tour_id>/', sell_tour, name='sell_tour'), path('buy_tour/<int:tour_id>/', buy_tour, name='buy_tour'), path('sold_tours/', sold_tours, name='sold_tours'), path('logout/', auth_views.LogoutView.as_view(), name='logout'), ]","title":"\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u0432 Django"},{"location":"lw2/views/","text":"views.md \u041a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u0424\u0443\u043d\u043a\u0446\u0438\u044f add_review \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0437\u044b\u0432 \u043a \u0442\u0443\u0440\u0443. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u043e\u0442\u0437\u044b\u0432\u0430 (Review) \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430 \u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b. \u0417\u0430\u0442\u0435\u043c \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0435. \u0415\u0441\u043b\u0438 tour_id \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0443\u0441\u0442\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. get_object_or_404: \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u043b\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 404, \u0435\u0441\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d. Tour, Review: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445. render_to_string: \u0434\u043b\u044f \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438. \u0424\u0443\u043d\u043a\u0446\u0438\u044f menu \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043c\u0435\u043d\u044e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u041f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043c\u0435\u043d\u044e. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: render: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u0424\u0443\u043d\u043a\u0446\u0438\u044f home \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0434\u043e\u043c\u0430\u0448\u043d\u044e\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0432\u0445\u043e\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u0438\u043b\u0438 \u0432\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0432\u044b\u0431\u043e\u0440\u0430 \u0432 \u0444\u043e\u0440\u043c\u0435. \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - GET, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u0432\u0445\u043e\u0434\u0430. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441 \u0444\u043e\u0440\u043c\u043e\u0439 \u0438 \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. UserCreationForm, AuthenticationForm: \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0432\u0445\u043e\u0434\u0430. Tour: \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u044f user_login \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438, \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0432\u0435\u0440\u043d\u044b, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0432\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432\u0445\u043e\u0434\u0430 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439. \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - GET, \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0432\u0445\u043e\u0434\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. AuthenticationForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u044f buy_tour \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043a\u0443\u043f\u043a\u0443 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 SoldTour \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430 \u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0446\u0435\u043d\u0443 \u0438 \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u0442 \u0442\u0443\u0440 \u043a\u0430\u043a \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0439. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u043f\u043e\u043a\u0443\u043f\u043a\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, SoldTour: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. redirect: \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u044f tour_list \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0443\u0440\u043e\u0432 \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432 \u0438 \u0444\u043e\u0440\u043c\u043e\u0439 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Review: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u0430. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReviewForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u044f reserve_tour \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Reservation: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReservationForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 sell_tour, sold_tours, tour_detail \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 \u0442\u0443\u0440\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u043e\u0432 \u0438 \u0434\u0435\u0442\u0430\u043b\u0438 \u0442\u0443\u0440\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0435\u0439 SoldTour \u0438 Tour. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 user_reservations, edit_reservation, delete_reservation, confirm_reservation, reject_reservation \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0443\u0434\u0430\u043b\u044f\u0442\u044c, \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0442\u044c \u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u044f\u0442\u044c \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0435\u0439 TourReservation \u0438 Reservation. \u0424\u0443\u043d\u043a\u0446\u0438\u044f tour_detail \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0434\u0435\u0442\u0430\u043b\u044f\u043c\u0438 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Review: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u0430. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReviewForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u044f register \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432\u0445\u043e\u0434\u0430. \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - GET, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: RegistrationForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u044f reserve_tour \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Reservation: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReservationForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 review_tour, user_reservations \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430 \u043a \u0442\u0443\u0440\u0443 \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0435\u0439 Review \u0438 Reservation. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 edit_reservation, delete_reservation, confirm_reservation, reject_reservation \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435, \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438 Reservation. \u0424\u0443\u043d\u043a\u0446\u0438\u044f sell_tour \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0442\u0443\u0440\u0430. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0443\u0440\u0430\u043c\u0438 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u043f\u0440\u043e\u0434\u0430\u0436\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: SoldTourForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0442\u0443\u0440\u0430. redirect: \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u044f sold_tours \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0443\u0440\u0430\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: SoldTour: \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. render: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 confirm_reservation, reject_reservation \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u044e\u0442 \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u044f\u044e\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0418\u0437\u043c\u0435\u043d\u044f\u044e\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0444\u043b\u0430\u0433 \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: redirect: \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u044f tour_detail \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0434\u0435\u0442\u0430\u043b\u044f\u043c\u0438 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Review: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u0430. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReviewForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u044f reserve_tour \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Reservation: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReservationForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 user_reservations, edit_reservation, delete_reservation \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438 Reservation. from django.shortcuts import render, redirect, get_object_or_404 from django.contrib.auth.decorators import login_required from django.contrib.auth import login as auth_login, authenticate from django.contrib import messages from .models import Tour, Reservation, Review, SoldTour, TourReservation from .forms import ReservationForm, ReviewForm, SoldTourForm, RegistrationForm from django.contrib.auth.forms import AuthenticationForm from django.contrib.auth.forms import UserCreationForm from django.template.loader import render_to_string def add_review(request, tour_id=None): if request.method == 'POST': if tour_id is not None: tour = get_object_or_404(Tour, pk=tour_id) review_text = request.POST.get('review_text', '') review = Review.objects.create(tour=tour, user=request.user, text=review_text) reviews_html = render_to_string('reviews.html', {'reviews': tour.review_set.all()}) return render(request, 'reviews.html', {'reviews': tour.review_set.all()}) else: return render(request, 'reviews.html', {'reviews': []}) else: return render(request, 'reviews.html', {'reviews': []}) def menu(request): return render(request, 'menu.html') def home(request): if request.method == 'POST': if 'register' in request.POST: form = UserCreationForm(request.POST) if form.is_valid(): form.save() return redirect('login') elif 'login' in request.POST: form = AuthenticationForm(request, request.POST) if form.is_valid(): user = form.get_user() auth_login(request, user) return redirect('tour_list') else: form = UserCreationForm() if 'register' in request.GET else AuthenticationForm() tours = Tour.objects.all() form_name = 'register' if isinstance(form, UserCreationForm) else 'login' return render(request, 'home.html', {'form': form, 'tours': tours, 'form_name': form_name}) def user_login(request): if request.method == 'POST': form = AuthenticationForm(request, request.POST) if form.is_valid(): user = form.get_user() auth_login(request, user) return redirect('user_login') else: form = AuthenticationForm() return render(request, 'login.html', {'form': form}) @login_required def buy_tour(request, tour_id): if request.method == 'POST': # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 POST-\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043b\u044f \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0442\u0443\u0440\u0430 tour = Tour.objects.get(id=tour_id) user = request.user price = tour.price SoldTour.objects.create(tour=tour, buyer=user, price=price) # \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0440\u0435\u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0442\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0442\u0443\u0440\u0430\u043c\u0438 \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 return redirect('tour_list') def tour_list(request): tours = Tour.objects.all() if request.method == 'POST': form = ReviewForm(request.POST) if form.is_valid(): review = form.save(commit=False) review.user = request.user review.tour = Tour.objects.get(id=request.POST.get('tour_id')) review.save() return redirect('tour_list') else: form = ReviewForm() return render(request, 'tour_list.html', {'tours': tours, 'form': form}) def reserve_tour(request, tour_id): tour = Tour.objects.get(pk=tour_id) if request.method == 'POST': form = ReservationForm(request.POST) if form.is_valid(): reservation = form.save(commit=False) reservation.user = request.user reservation.tour = tour reservation.save() messages.success(request, 'Tour reserved successfully!') return redirect('tour_list') else: form = ReservationForm() return render(request, 'myapp/reserve_tour.html', {'form': form, 'tour': tour}) def buy_tour(request, tour_id): tour = Tour.objects.get(pk=tour_id) if request.method == 'POST': form = SoldTourForm(request.POST) if form.is_valid(): sold_tour = form.save(commit=False) sold_tour.buyer = request.user sold_tour.tour = tour # \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\u044b, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 100.00 sold_tour.price = 100.00 sold_tour.save() # \u041f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0442\u0443\u0440 \u043a\u0430\u043a \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0439 tour.is_sold = True tour.save() messages.success(request, 'Tour purchased successfully!') return redirect('tour_list') else: form = SoldTourForm() return render(request, 'myapp/buy_tour.html', {'form': form, 'tour': tour}) def sell_tour(request, tour_id): if request.method == 'POST': form = SoldTourForm(request.POST) if form.is_valid(): sold_tour = form.save(commit=False) sold_tour.user = request.user sold_tour.tour_id = tour_id sold_tour.save() return redirect('sold_tours') # \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0443\u0440\u0430\u043c\u0438 else: form = SoldTourForm() return render(request, 'sell_tour.html', {'form': form}) def sold_tours(request): sold_tours = SoldTour.objects.filter(buyer=request.user) return render(request, 'myapp/sold_tours.html', {'sold_tours': sold_tours}) def tour_detail(request, tour_id): tour = Tour.objects.get(pk=tour_id) reviews = Review.objects.filter(tour=tour) if request.method == 'POST': form = ReviewForm(request.POST) if form.is_valid(): review = form.save(commit=False) review.tour = tour review.user = request.user review.save() messages.success(request, 'Review added successfully!') return redirect('tour_detail', tour_id=tour_id) else: form = ReviewForm() context = { 'tour': tour, 'reviews': reviews, 'form': form, } return render(request, 'myapp/tour_detail.html', context) def reserve_tour(request, tour_id): tour = Tour.objects.get(pk=tour_id) if request.method == 'POST': form = ReservationForm(request.POST) if form.is_valid(): reservation = form.save(commit=False) reservation.tour = tour reservation.user = request.user reservation.save() return redirect('user_reservations') else: form = ReservationForm() return render(request, 'myapp/reserve_tour.html', {'form': form, 'tour': tour}) def user_reservations(request): user = request.user reservations = TourReservation.objects.filter(user=user) return render(request, 'user_reservations.html', {'reservations': reservations}) def edit_reservation(request, reservation_id): reservation = get_object_or_404(Reservation, id=reservation_id, user=request.user) if request.method == 'POST': form = ReservationForm(request.POST, instance=reservation) if form.is_valid(): form.save() return redirect('user_reservations') else: form = ReservationForm(instance=reservation) return render(request, 'edit_reservation.html', {'form': form, 'reservation': reservation}) def delete_reservation(request, reservation_id): reservation = get_object_or_404(Reservation, id=reservation_id, user=request.user) if request.method == 'POST': reservation.delete() return redirect('user_reservations') return render(request, 'delete_reservation.html', {'reservation': reservation}) def confirm_reservation(request, reservation_id): reservation = Reservation.objects.get(pk=reservation_id) reservation.is_confirmed = True reservation.save() return redirect('tour_list') def reject_reservation(request, reservation_id): reservation = Reservation.objects.get(pk=reservation_id) reservation.delete() return redirect('tour_list') def reserve_tour(request, tour_id): if request.method == 'POST': tour = Tour.objects.get(pk=tour_id) reservation = Reservation(tour=tour, user=request.user) reservation.save() return redirect('tour_list') tour = Tour.objects.get(pk=tour_id) return render(request, 'reserve_tour.html', {'tour': tour}) def register(request): if request.method == 'POST': form = RegistrationForm(request.POST) if form.is_valid(): form.save() return redirect('login') else: form = RegistrationForm() return render(request, 'registration/register.html', {'form': form}) def register(request): if request.method == 'POST': form = RegistrationForm(request.POST) if form.is_valid(): form.save() username = form.cleaned_data.get('username') password = form.cleaned_data.get('password1') user = authenticate(username=username, password=password) login(request, user) messages.success(request, 'Registration successful!') return redirect('home') else: form = RegistrationForm() return render(request, 'registration/register.html', {'form': form}) @login_required def reserve_tour(request, tour_id): tour = Tour.objects.get(pk=tour_id) if request.method == 'POST': form = ReservationForm(request.POST) if form.is_valid(): reservation = form.save(commit=False) reservation.user = request.user reservation.tour = tour reservation.save() messages.success(request, 'Tour reserved successfully!') return redirect('tour_list') else: form = ReservationForm() return render(request, 'reserve_tour.html', {'form': form, 'tour': tour}) @login_required def review_tour(request, tour_id): tour = Tour.objects.get(pk=tour_id) if request.method == 'POST': form = ReviewForm(request.POST) if form.is_valid(): review = form.save(commit=False) review.user = request.user review.tour = tour review.save() messages.success(request, 'Review added successfully!') return redirect('tour_list') else: form = ReviewForm() return render(request, 'review_tour.html', {'form': form, 'tour': tour}) @login_required def user_reservations(request): reservations = Reservation.objects.filter(user=request.user) return render(request, 'user_reservations.html', {'reservations': reservations})","title":"Views"},{"location":"lw2/views/#viewsmd","text":"\u041a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u0424\u0443\u043d\u043a\u0446\u0438\u044f add_review \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0437\u044b\u0432 \u043a \u0442\u0443\u0440\u0443. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u043e\u0442\u0437\u044b\u0432\u0430 (Review) \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430 \u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u0438\u0437 \u0444\u043e\u0440\u043c\u044b. \u0417\u0430\u0442\u0435\u043c \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0435\u0435. \u0415\u0441\u043b\u0438 tour_id \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0443\u0441\u0442\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. get_object_or_404: \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u043b\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 404, \u0435\u0441\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d. Tour, Review: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445. render_to_string: \u0434\u043b\u044f \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f HTML-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438. \u0424\u0443\u043d\u043a\u0446\u0438\u044f menu \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043c\u0435\u043d\u044e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u041f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043c\u0435\u043d\u044e. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: render: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u0424\u0443\u043d\u043a\u0446\u0438\u044f home \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0434\u043e\u043c\u0430\u0448\u043d\u044e\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0432\u0445\u043e\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u0438\u043b\u0438 \u0432\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0432\u044b\u0431\u043e\u0440\u0430 \u0432 \u0444\u043e\u0440\u043c\u0435. \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - GET, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u0432\u0445\u043e\u0434\u0430. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441 \u0444\u043e\u0440\u043c\u043e\u0439 \u0438 \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. UserCreationForm, AuthenticationForm: \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0432\u0445\u043e\u0434\u0430. Tour: \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u044f user_login \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438, \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0432\u0435\u0440\u043d\u044b, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0432\u0445\u043e\u0434 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432\u0445\u043e\u0434\u0430 \u0441 \u0444\u043e\u0440\u043c\u043e\u0439. \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - GET, \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0432\u0445\u043e\u0434\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. AuthenticationForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u044f buy_tour \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043a\u0443\u043f\u043a\u0443 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 SoldTour \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430 \u0438 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0446\u0435\u043d\u0443 \u0438 \u043f\u043e\u043c\u0435\u0447\u0430\u0435\u0442 \u0442\u0443\u0440 \u043a\u0430\u043a \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0439. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u043f\u043e\u043a\u0443\u043f\u043a\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, SoldTour: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. redirect: \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u044f tour_list \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0443\u0440\u043e\u0432 \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432 \u0438 \u0444\u043e\u0440\u043c\u043e\u0439 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Review: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u0430. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReviewForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u044f reserve_tour \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Reservation: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReservationForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 sell_tour, sold_tours, tour_detail \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 \u0442\u0443\u0440\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u043e\u0432 \u0438 \u0434\u0435\u0442\u0430\u043b\u0438 \u0442\u0443\u0440\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0435\u0439 SoldTour \u0438 Tour. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 user_reservations, edit_reservation, delete_reservation, confirm_reservation, reject_reservation \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0443\u0434\u0430\u043b\u044f\u0442\u044c, \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0442\u044c \u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u044f\u0442\u044c \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0435\u0439 TourReservation \u0438 Reservation. \u0424\u0443\u043d\u043a\u0446\u0438\u044f tour_detail \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0434\u0435\u0442\u0430\u043b\u044f\u043c\u0438 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Review: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u0430. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReviewForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u044f register \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0432\u0445\u043e\u0434\u0430. \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - GET, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: RegistrationForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u044f reserve_tour \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Reservation: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReservationForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 review_tour, user_reservations \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430 \u043a \u0442\u0443\u0440\u0443 \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0435\u0439 Review \u0438 Reservation. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 edit_reservation, delete_reservation, confirm_reservation, reject_reservation \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435, \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438 Reservation. \u0424\u0443\u043d\u043a\u0446\u0438\u044f sell_tour \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0442\u0443\u0440\u0430. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0443\u0440\u0430\u043c\u0438 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u043f\u0440\u043e\u0434\u0430\u0436\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: SoldTourForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0430\u0436\u0438 \u0442\u0443\u0440\u0430. redirect: \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u044f sold_tours \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0443\u0440\u0430\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: SoldTour: \u043c\u043e\u0434\u0435\u043b\u044c \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0443\u0440\u0430. render: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 confirm_reservation, reject_reservation \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u044e\u0442 \u0438\u043b\u0438 \u043e\u0442\u043a\u043b\u043e\u043d\u044f\u044e\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0418\u0437\u043c\u0435\u043d\u044f\u044e\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0444\u043b\u0430\u0433 \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: redirect: \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u044f tour_detail \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0434\u0435\u0442\u0430\u043b\u0438 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0434\u0435\u0442\u0430\u043b\u044f\u043c\u0438 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Review: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u043e\u0442\u0437\u044b\u0432\u0430. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReviewForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u0430. \u0424\u0443\u043d\u043a\u0446\u0438\u044f reserve_tour \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0443\u0440\u0430. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 - POST, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0442\u0443\u0440\u043e\u0432 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0433\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: Tour, Reservation: \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u0430 \u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. render, redirect: \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0438 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f. ReservationForm: \u0444\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f. \u0424\u0443\u043d\u043a\u0446\u0438\u0438 user_reservations, edit_reservation, delete_reservation \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438 Reservation. from django.shortcuts import render, redirect, get_object_or_404 from django.contrib.auth.decorators import login_required from django.contrib.auth import login as auth_login, authenticate from django.contrib import messages from .models import Tour, Reservation, Review, SoldTour, TourReservation from .forms import ReservationForm, ReviewForm, SoldTourForm, RegistrationForm from django.contrib.auth.forms import AuthenticationForm from django.contrib.auth.forms import UserCreationForm from django.template.loader import render_to_string def add_review(request, tour_id=None): if request.method == 'POST': if tour_id is not None: tour = get_object_or_404(Tour, pk=tour_id) review_text = request.POST.get('review_text', '') review = Review.objects.create(tour=tour, user=request.user, text=review_text) reviews_html = render_to_string('reviews.html', {'reviews': tour.review_set.all()}) return render(request, 'reviews.html', {'reviews': tour.review_set.all()}) else: return render(request, 'reviews.html', {'reviews': []}) else: return render(request, 'reviews.html', {'reviews': []}) def menu(request): return render(request, 'menu.html') def home(request): if request.method == 'POST': if 'register' in request.POST: form = UserCreationForm(request.POST) if form.is_valid(): form.save() return redirect('login') elif 'login' in request.POST: form = AuthenticationForm(request, request.POST) if form.is_valid(): user = form.get_user() auth_login(request, user) return redirect('tour_list') else: form = UserCreationForm() if 'register' in request.GET else AuthenticationForm() tours = Tour.objects.all() form_name = 'register' if isinstance(form, UserCreationForm) else 'login' return render(request, 'home.html', {'form': form, 'tours': tours, 'form_name': form_name}) def user_login(request): if request.method == 'POST': form = AuthenticationForm(request, request.POST) if form.is_valid(): user = form.get_user() auth_login(request, user) return redirect('user_login') else: form = AuthenticationForm() return render(request, 'login.html', {'form': form}) @login_required def buy_tour(request, tour_id): if request.method == 'POST': # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 POST-\u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0434\u043b\u044f \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0442\u0443\u0440\u0430 tour = Tour.objects.get(id=tour_id) user = request.user price = tour.price SoldTour.objects.create(tour=tour, buyer=user, price=price) # \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0440\u0435\u0434\u0438\u0440\u0435\u043a\u0442\u0438\u0442\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u0442\u0443\u0440\u0430\u043c\u0438 \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 return redirect('tour_list') def tour_list(request): tours = Tour.objects.all() if request.method == 'POST': form = ReviewForm(request.POST) if form.is_valid(): review = form.save(commit=False) review.user = request.user review.tour = Tour.objects.get(id=request.POST.get('tour_id')) review.save() return redirect('tour_list') else: form = ReviewForm() return render(request, 'tour_list.html', {'tours': tours, 'form': form}) def reserve_tour(request, tour_id): tour = Tour.objects.get(pk=tour_id) if request.method == 'POST': form = ReservationForm(request.POST) if form.is_valid(): reservation = form.save(commit=False) reservation.user = request.user reservation.tour = tour reservation.save() messages.success(request, 'Tour reserved successfully!') return redirect('tour_list') else: form = ReservationForm() return render(request, 'myapp/reserve_tour.html', {'form': form, 'tour': tour}) def buy_tour(request, tour_id): tour = Tour.objects.get(pk=tour_id) if request.method == 'POST': form = SoldTourForm(request.POST) if form.is_valid(): sold_tour = form.save(commit=False) sold_tour.buyer = request.user sold_tour.tour = tour # \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0446\u0435\u043d\u044b, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 100.00 sold_tour.price = 100.00 sold_tour.save() # \u041f\u043e\u043c\u0435\u0447\u0430\u0435\u043c \u0442\u0443\u0440 \u043a\u0430\u043a \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u0439 tour.is_sold = True tour.save() messages.success(request, 'Tour purchased successfully!') return redirect('tour_list') else: form = SoldTourForm() return render(request, 'myapp/buy_tour.html', {'form': form, 'tour': tour}) def sell_tour(request, tour_id): if request.method == 'POST': form = SoldTourForm(request.POST) if form.is_valid(): sold_tour = form.save(commit=False) sold_tour.user = request.user sold_tour.tour_id = tour_id sold_tour.save() return redirect('sold_tours') # \u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441 \u043f\u0440\u043e\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0442\u0443\u0440\u0430\u043c\u0438 else: form = SoldTourForm() return render(request, 'sell_tour.html', {'form': form}) def sold_tours(request): sold_tours = SoldTour.objects.filter(buyer=request.user) return render(request, 'myapp/sold_tours.html', {'sold_tours': sold_tours}) def tour_detail(request, tour_id): tour = Tour.objects.get(pk=tour_id) reviews = Review.objects.filter(tour=tour) if request.method == 'POST': form = ReviewForm(request.POST) if form.is_valid(): review = form.save(commit=False) review.tour = tour review.user = request.user review.save() messages.success(request, 'Review added successfully!') return redirect('tour_detail', tour_id=tour_id) else: form = ReviewForm() context = { 'tour': tour, 'reviews': reviews, 'form': form, } return render(request, 'myapp/tour_detail.html', context) def reserve_tour(request, tour_id): tour = Tour.objects.get(pk=tour_id) if request.method == 'POST': form = ReservationForm(request.POST) if form.is_valid(): reservation = form.save(commit=False) reservation.tour = tour reservation.user = request.user reservation.save() return redirect('user_reservations') else: form = ReservationForm() return render(request, 'myapp/reserve_tour.html', {'form': form, 'tour': tour}) def user_reservations(request): user = request.user reservations = TourReservation.objects.filter(user=user) return render(request, 'user_reservations.html', {'reservations': reservations}) def edit_reservation(request, reservation_id): reservation = get_object_or_404(Reservation, id=reservation_id, user=request.user) if request.method == 'POST': form = ReservationForm(request.POST, instance=reservation) if form.is_valid(): form.save() return redirect('user_reservations') else: form = ReservationForm(instance=reservation) return render(request, 'edit_reservation.html', {'form': form, 'reservation': reservation}) def delete_reservation(request, reservation_id): reservation = get_object_or_404(Reservation, id=reservation_id, user=request.user) if request.method == 'POST': reservation.delete() return redirect('user_reservations') return render(request, 'delete_reservation.html', {'reservation': reservation}) def confirm_reservation(request, reservation_id): reservation = Reservation.objects.get(pk=reservation_id) reservation.is_confirmed = True reservation.save() return redirect('tour_list') def reject_reservation(request, reservation_id): reservation = Reservation.objects.get(pk=reservation_id) reservation.delete() return redirect('tour_list') def reserve_tour(request, tour_id): if request.method == 'POST': tour = Tour.objects.get(pk=tour_id) reservation = Reservation(tour=tour, user=request.user) reservation.save() return redirect('tour_list') tour = Tour.objects.get(pk=tour_id) return render(request, 'reserve_tour.html', {'tour': tour}) def register(request): if request.method == 'POST': form = RegistrationForm(request.POST) if form.is_valid(): form.save() return redirect('login') else: form = RegistrationForm() return render(request, 'registration/register.html', {'form': form}) def register(request): if request.method == 'POST': form = RegistrationForm(request.POST) if form.is_valid(): form.save() username = form.cleaned_data.get('username') password = form.cleaned_data.get('password1') user = authenticate(username=username, password=password) login(request, user) messages.success(request, 'Registration successful!') return redirect('home') else: form = RegistrationForm() return render(request, 'registration/register.html', {'form': form}) @login_required def reserve_tour(request, tour_id): tour = Tour.objects.get(pk=tour_id) if request.method == 'POST': form = ReservationForm(request.POST) if form.is_valid(): reservation = form.save(commit=False) reservation.user = request.user reservation.tour = tour reservation.save() messages.success(request, 'Tour reserved successfully!') return redirect('tour_list') else: form = ReservationForm() return render(request, 'reserve_tour.html', {'form': form, 'tour': tour}) @login_required def review_tour(request, tour_id): tour = Tour.objects.get(pk=tour_id) if request.method == 'POST': form = ReviewForm(request.POST) if form.is_valid(): review = form.save(commit=False) review.user = request.user review.tour = tour review.save() messages.success(request, 'Review added successfully!') return redirect('tour_list') else: form = ReviewForm() return render(request, 'review_tour.html', {'form': form, 'tour': tour}) @login_required def user_reservations(request): reservations = Reservation.objects.filter(user=request.user) return render(request, 'user_reservations.html', {'reservations': reservations})","title":"views.md"},{"location":"lw3/","text":"\u0421\u0410\u041d\u041a\u0422-\u041f\u0415\u0422\u0415\u0420\u0411\u0423\u0420\u0413\u0421\u041a\u0418\u0419 \u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e \u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430: \u0412\u0435\u0431 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u041e\u0442\u0447\u0435\u0442 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163 \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043b: \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 \u0410\u0440\u0441\u0435\u043d \u0413\u0440\u0443\u043f\u043f\u0430: \u041a3343d \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043b: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0418\u0433\u043e\u0440\u0435\u0432\u0438\u0447 \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023 \u0433.","title":"Main"},{"location":"lw3/#-","text":"","title":"\u0421\u0410\u041d\u041a\u0422-\u041f\u0415\u0422\u0415\u0420\u0411\u0423\u0420\u0413\u0421\u041a\u0418\u0419 \u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e"},{"location":"lw3/#_1","text":"","title":"\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430: \u0412\u0435\u0431 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"lw3/#_2","text":"","title":"\u041e\u0442\u0447\u0435\u0442"},{"location":"lw3/#no3","text":"\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043b: \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 \u0410\u0440\u0441\u0435\u043d \u0413\u0440\u0443\u043f\u043f\u0430: \u041a3343d \u041f\u0440\u043e\u0432\u0435\u0440\u0438\u043b: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0418\u0433\u043e\u0440\u0435\u0432\u0438\u0447 \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023 \u0433.","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163"},{"location":"lw3/models/","text":"models.py \u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043d \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u0445. Warrior (\u0412\u043e\u0438\u043d): \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u0438\u0445 \u0438\u043c\u044f, \u0443\u0440\u043e\u0432\u0435\u043d\u044c, \u0440\u0430\u0441\u0441\u0430 (\u0441\u0442\u0443\u0434\u0435\u043d\u0442, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a, \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c), \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u0435 CharField \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u044b, CharField \u0434\u043b\u044f \u0438\u043c\u0435\u043d\u0438, IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0438 \u043c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f. Profession (\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f): \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0432\u043e\u0438\u043d\u043e\u0432, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0438 TextField \u0434\u043b\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f. Skill (\u0423\u043c\u0435\u043d\u0438\u0435): \u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0443\u043c\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u043b\u0430\u0434\u0435\u044e\u0442 \u0432\u043e\u0438\u043d\u044b. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f. SkillOfWarrior (\u0423\u043c\u0435\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430): \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0432\u043e\u0438\u043d\u043e\u0432 \u0441 \u0438\u0445 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u0438 \u0441 \u0432\u043e\u0438\u043d\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u042d\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u0445\u0435\u043c\u0443 \u0411\u0414 \u0434\u043b\u044f \u043c\u043e\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0433\u0434\u0435 \u0432\u043e\u0438\u043d\u044b \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. from django.db import models class Warrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430 \"\"\" race_types = ( ('s', 'student'), ('d', 'developer'), ('t', 'teamlead'), ) race = models.CharField(max_length=1, choices=race_types, verbose_name='\u0440\u0430\u0441\u0430') name = models.CharField(max_length=120, verbose_name='\u0418\u043c\u044f') level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c', default=0) skills = models.ManyToManyField('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u044f', through='SkillOfWarrior', related_name='warrior_skils') profession = models.ForeignKey('Profession', on_delete=models.CASCADE, verbose_name='\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f', blank=True, null=True) class Profession(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435') description = models.TextField(verbose_name='\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435') class Skill(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435') def __str__(self): return self.title class SkillOfWarrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \u0432\u043e\u0439\u043d\u0430 \"\"\" skill = models.ForeignKey('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u0435', on_delete=models.CASCADE) warrior = models.ForeignKey('Warrior', verbose_name='\u0412\u043e\u0438\u043d', on_delete=models.CASCADE) level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f')","title":"Models"},{"location":"lw3/models/#modelspy","text":"\u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043d \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u0445.","title":"models.py"},{"location":"lw3/models/#warrior","text":"\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u0438\u0445 \u0438\u043c\u044f, \u0443\u0440\u043e\u0432\u0435\u043d\u044c, \u0440\u0430\u0441\u0441\u0430 (\u0441\u0442\u0443\u0434\u0435\u043d\u0442, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a, \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c), \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u0435 CharField \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u044b, CharField \u0434\u043b\u044f \u0438\u043c\u0435\u043d\u0438, IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0438 \u043c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f.","title":"Warrior (\u0412\u043e\u0438\u043d):"},{"location":"lw3/models/#profession","text":"\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0432\u043e\u0438\u043d\u043e\u0432, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0438 TextField \u0434\u043b\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f.","title":"Profession (\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f):"},{"location":"lw3/models/#skill","text":"\u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0443\u043c\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u043b\u0430\u0434\u0435\u044e\u0442 \u0432\u043e\u0438\u043d\u044b. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f.","title":"Skill (\u0423\u043c\u0435\u043d\u0438\u0435):"},{"location":"lw3/models/#skillofwarrior","text":"\u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0432\u043e\u0438\u043d\u043e\u0432 \u0441 \u0438\u0445 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u0438 \u0441 \u0432\u043e\u0438\u043d\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u042d\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u0445\u0435\u043c\u0443 \u0411\u0414 \u0434\u043b\u044f \u043c\u043e\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0433\u0434\u0435 \u0432\u043e\u0438\u043d\u044b \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. from django.db import models class Warrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430 \"\"\" race_types = ( ('s', 'student'), ('d', 'developer'), ('t', 'teamlead'), ) race = models.CharField(max_length=1, choices=race_types, verbose_name='\u0440\u0430\u0441\u0430') name = models.CharField(max_length=120, verbose_name='\u0418\u043c\u044f') level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c', default=0) skills = models.ManyToManyField('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u044f', through='SkillOfWarrior', related_name='warrior_skils') profession = models.ForeignKey('Profession', on_delete=models.CASCADE, verbose_name='\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f', blank=True, null=True) class Profession(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435') description = models.TextField(verbose_name='\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435') class Skill(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435') def __str__(self): return self.title class SkillOfWarrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \u0432\u043e\u0439\u043d\u0430 \"\"\" skill = models.ForeignKey('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u0435', on_delete=models.CASCADE) warrior = models.ForeignKey('Warrior', verbose_name='\u0412\u043e\u0438\u043d', on_delete=models.CASCADE) level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f')","title":"SkillOfWarrior (\u0423\u043c\u0435\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430):"},{"location":"lw3/readme/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API. \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3 \u043f\u043e \u043a\u0443\u0440\u0441\u0443 \"ITMO ICT Web Development\" \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0435 Django REST, \u0441 \u0430\u043a\u0446\u0435\u043d\u0442\u043e\u043c \u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API. \u041f\u0440\u043e\u0435\u043a\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044f \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0438 \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0417\u0430\u043f\u0443\u0441\u043a swagger http://localhost:8000/doc/swagger/","title":"Readme"},{"location":"lw3/readme/#3-django-rest-api","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3 \u043f\u043e \u043a\u0443\u0440\u0441\u0443 \"ITMO ICT Web Development\" \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0435 Django REST, \u0441 \u0430\u043a\u0446\u0435\u043d\u0442\u043e\u043c \u043d\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API. \u041f\u0440\u043e\u0435\u043a\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044f \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u0441\u0442\u044c \u0438 \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0432\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0417\u0430\u043f\u0443\u0441\u043a swagger http://localhost:8000/doc/swagger/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API."},{"location":"lw3/serializer/","text":"warriors_app/serializers.py \u042d\u0442\u043e\u0442 \u0444\u0430\u0439\u043b \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e (\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442, \u043f\u0440\u0438\u0433\u043e\u0434\u043d\u044b\u0439 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u043f\u043e \u0441\u0435\u0442\u0438) \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043c\u043e\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0432 Django REST Framework. ProfessionCreateSerializer from rest_framework import serializers from .models import Profession class ProfessionCreateSerializer(serializers.ModelSerializer): class Meta: model = Profession fields = \"__all__\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u042d\u0442\u043e\u0442 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0438 Profession \u0432 \u0444\u043e\u0440\u043c\u0430\u0442, \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 API. \u041e\u043d \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0432\u0441\u0435 \u043f\u043e\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438. WarriorWithProfessionSerializer from rest_framework import serializers from .models import Profession from .models import Warrior, Skill, SkillOfWarrior, Profession class ProfessionCreateSerializer(serializers.ModelSerializer): class Meta: model = Profession fields = \"__all__\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u042d\u0442\u043e\u0442 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 Warrior \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 Profession. \u041f\u043e\u043b\u0435 profession \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u043c \u0432 ProfessionCreateSerializer. WarriorWithSkillsSerializer class WarriorWithProfessionSerializer(serializers.ModelSerializer): profession = ProfessionCreateSerializer() class Meta: model = Warrior fields = \"__all__\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u042d\u0442\u043e\u0442 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u043d\u0430\u0432\u044b\u043a\u0438 \u0432\u043e\u0438\u043d\u0430, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a, \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0438 Warrior \u0432 \u0444\u043e\u0440\u043c\u0430\u0442, \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0434\u043b\u044f API. WarriorWithSkillsSerializer class WarriorWithSkillsSerializer(serializers.ModelSerializer): skills = serializers.StringRelatedField(many=True) class Meta: model = Warrior fields = \"__all__\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u042d\u0442\u043e\u0442 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0438 Warrior \u0432 \u0444\u043e\u0440\u043c\u0430\u0442, \u043f\u0440\u0438\u0433\u043e\u0434\u043d\u044b\u0439 \u0434\u043b\u044f API. \u041f\u043e\u043b\u0435 skills \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a, \u0438 \u043e\u043d\u043e \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0443\u043c\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u043b\u0430\u0434\u0435\u0435\u0442 \u0432\u043e\u0438\u043d.","title":"Serializer"},{"location":"lw3/serializer/#warriors_appserializerspy","text":"\u042d\u0442\u043e\u0442 \u0444\u0430\u0439\u043b \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e (\u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442, \u043f\u0440\u0438\u0433\u043e\u0434\u043d\u044b\u0439 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u043f\u043e \u0441\u0435\u0442\u0438) \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043c\u043e\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0432 Django REST Framework.","title":"warriors_app/serializers.py"},{"location":"lw3/serializer/#professioncreateserializer","text":"from rest_framework import serializers from .models import Profession class ProfessionCreateSerializer(serializers.ModelSerializer): class Meta: model = Profession fields = \"__all__\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u042d\u0442\u043e\u0442 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0438 Profession \u0432 \u0444\u043e\u0440\u043c\u0430\u0442, \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 API. \u041e\u043d \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0432\u0441\u0435 \u043f\u043e\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438.","title":"ProfessionCreateSerializer"},{"location":"lw3/serializer/#warriorwithprofessionserializer","text":"from rest_framework import serializers from .models import Profession from .models import Warrior, Skill, SkillOfWarrior, Profession class ProfessionCreateSerializer(serializers.ModelSerializer): class Meta: model = Profession fields = \"__all__\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u042d\u0442\u043e\u0442 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 Warrior \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 Profession. \u041f\u043e\u043b\u0435 profession \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u043c \u0432 ProfessionCreateSerializer.","title":"WarriorWithProfessionSerializer"},{"location":"lw3/serializer/#warriorwithskillsserializer","text":"class WarriorWithProfessionSerializer(serializers.ModelSerializer): profession = ProfessionCreateSerializer() class Meta: model = Warrior fields = \"__all__\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u042d\u0442\u043e\u0442 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u043d\u0430\u0432\u044b\u043a\u0438 \u0432\u043e\u0438\u043d\u0430, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a, \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0438 Warrior \u0432 \u0444\u043e\u0440\u043c\u0430\u0442, \u0443\u0434\u043e\u0431\u043d\u044b\u0439 \u0434\u043b\u044f API.","title":"WarriorWithSkillsSerializer"},{"location":"lw3/serializer/#warriorwithskillsserializer_1","text":"class WarriorWithSkillsSerializer(serializers.ModelSerializer): skills = serializers.StringRelatedField(many=True) class Meta: model = Warrior fields = \"__all__\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \u042d\u0442\u043e\u0442 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0438 Warrior \u0432 \u0444\u043e\u0440\u043c\u0430\u0442, \u043f\u0440\u0438\u0433\u043e\u0434\u043d\u044b\u0439 \u0434\u043b\u044f API. \u041f\u043e\u043b\u0435 skills \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a, \u0438 \u043e\u043d\u043e \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0443\u043c\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u043b\u0430\u0434\u0435\u0435\u0442 \u0432\u043e\u0438\u043d.","title":"WarriorWithSkillsSerializer"},{"location":"lw3/swagger/","text":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 Swagger \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 Django \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c drf-yasg \u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435 Swagger - \u044d\u0442\u043e \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f API. \u0414\u043b\u044f \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438 Swagger \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 Django \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Django REST Framework (DRF), \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0430\u043a\u0435\u0442 drf-yasg , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044e Swagger \u0434\u043b\u044f DRF. \u0428\u0430\u0433 1: \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 drf-yasg \u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c drf-yasg \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b: pip install drf-yasg \u0428\u0430\u0433 2: \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0432 \u0444\u0430\u0439\u043b\u0435 urls.py \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0438 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c schema_view: from rest_framework import permissions from drf_yasg.views import get_schema_view from drf_yasg import openapi schema_view = get_schema_view( openapi.Info( title=\"API\", default_version='v2', description=\"Description\", terms_of_service=\"https://www.google.com/policies/terms/\", contact=openapi.Contact(email=\"hardbeat34@gmail.com\"), license=openapi.License(name=\"BSD License\"), ), public=True, permission_classes=(permissions.AllowAny,), ) \u0428\u0430\u0433 3: \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0440\u043e\u0443\u0442\u0438\u043d\u0433\u0430 \u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0443\u0442\u0438 \u0434\u043b\u044f Swagger \u0438 redoc: from django.urls import path urlpatterns = [ # \u0414\u0440\u0443\u0433\u0438\u0435 \u043f\u0443\u0442\u0438... path('doc/swagger/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'), path('doc/redoc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'), ] \u0422\u0435\u043f\u0435\u0440\u044c Swagger \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043f\u043e URL-\u0430\u0434\u0440\u0435\u0441\u0443 /doc/swagger/, \u0430 Redoc - \u043f\u043e URL-\u0430\u0434\u0440\u0435\u0441\u0443 /doc/redoc/. \u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u043e\u0435\u043a\u0442 Django \u0438\u043c\u0435\u0435\u0442 \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 Swagger \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f API. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f drf-yasg, \u044f \u0441\u043e\u0437\u0434\u0430\u043b \u043a\u0440\u0430\u0441\u0438\u0432\u0443\u044e \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043a \u0441\u0432\u043e\u0435\u043c\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0443.","title":"Swagger"},{"location":"lw3/swagger/#swagger-django-drf-yasg","text":"","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 Swagger \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 Django \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c drf-yasg"},{"location":"lw3/swagger/#_1","text":"Swagger - \u044d\u0442\u043e \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f API. \u0414\u043b\u044f \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438 Swagger \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 Django \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Django REST Framework (DRF), \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0430\u043a\u0435\u0442 drf-yasg , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044e Swagger \u0434\u043b\u044f DRF.","title":"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435"},{"location":"lw3/swagger/#1-drf-yasg","text":"\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043c drf-yasg \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b: pip install drf-yasg","title":"\u0428\u0430\u0433 1: \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 drf-yasg"},{"location":"lw3/swagger/#2-urlspy","text":"\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0438 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c schema_view: from rest_framework import permissions from drf_yasg.views import get_schema_view from drf_yasg import openapi schema_view = get_schema_view( openapi.Info( title=\"API\", default_version='v2', description=\"Description\", terms_of_service=\"https://www.google.com/policies/terms/\", contact=openapi.Contact(email=\"hardbeat34@gmail.com\"), license=openapi.License(name=\"BSD License\"), ), public=True, permission_classes=(permissions.AllowAny,), )","title":"\u0428\u0430\u0433 2: \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0432 \u0444\u0430\u0439\u043b\u0435 urls.py"},{"location":"lw3/swagger/#3","text":"\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u043f\u0443\u0442\u0438 \u0434\u043b\u044f Swagger \u0438 redoc: from django.urls import path urlpatterns = [ # \u0414\u0440\u0443\u0433\u0438\u0435 \u043f\u0443\u0442\u0438... path('doc/swagger/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'), path('doc/redoc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'), ] \u0422\u0435\u043f\u0435\u0440\u044c Swagger \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043f\u043e URL-\u0430\u0434\u0440\u0435\u0441\u0443 /doc/swagger/, \u0430 Redoc - \u043f\u043e URL-\u0430\u0434\u0440\u0435\u0441\u0443 /doc/redoc/.","title":"\u0428\u0430\u0433 3: \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0440\u043e\u0443\u0442\u0438\u043d\u0433\u0430"},{"location":"lw3/swagger/#_2","text":"\u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u043e\u0435\u043a\u0442 Django \u0438\u043c\u0435\u0435\u0442 \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 Swagger \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f API. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f drf-yasg, \u044f \u0441\u043e\u0437\u0434\u0430\u043b \u043a\u0440\u0430\u0441\u0438\u0432\u0443\u044e \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u0443\u044e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043a \u0441\u0432\u043e\u0435\u043c\u0443 \u043f\u0440\u043e\u0435\u043a\u0442\u0443.","title":"\u0417\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435"},{"location":"lw3/lab3/admin/","text":"admin.py \u041e\u0431\u0437\u043e\u0440 admin.py \u0412 \u0444\u0430\u0439\u043b\u0435 admin.py \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 Django \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439. \u042d\u0442\u043e \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u0431\u044b\u043b\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0432 \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u0444\u043e\u0440\u043c \u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u0435\u0439. \u0418\u043c\u043f\u043e\u0440\u0442\u044b from django.contrib import admin from django import forms from .models import Room, Client, ClientInfo, Employee, Floor, Day, EmployeeFloor, EmployeeDay from .models import CustomUser \u0417\u0434\u0435\u0441\u044c \u043c\u044b \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u043c\u043e\u0434\u0435\u043b\u0438. admin \u0438 forms \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0438 \u0444\u043e\u0440\u043c. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Room class RoomAdminForm(forms.ModelForm): class Meta: model = Room fields = '__all__' widgets = { 'room_type': forms.Select(choices=Room.ROOM_TYPES) } \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Room . \u041c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u043f\u043e\u043b\u044f ( fields = '__all__' ) \u0438 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c \u0432\u0438\u0434\u0436\u0435\u0442 \u0434\u043b\u044f \u043f\u043e\u043b\u044f room_type . \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 class RoomAdmin(admin.ModelAdmin): form = RoomAdminForm admin.site.register(CustomUser) admin.site.register(Room, RoomAdmin) admin.site.register(Client) admin.site.register(ClientInfo) admin.site.register(Employee) admin.site.register(Floor) admin.site.register(Day) admin.site.register(EmployeeFloor) admin.site.register(EmployeeDay) \u0417\u0434\u0435\u0441\u044c \u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c \u043d\u0430\u0448\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435 Django. \u0414\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Room \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0444\u043e\u0440\u043c\u0430 RoomAdminForm .","title":"Admin"},{"location":"lw3/lab3/admin/#adminpy","text":"","title":"admin.py"},{"location":"lw3/lab3/admin/#adminpy_1","text":"\u0412 \u0444\u0430\u0439\u043b\u0435 admin.py \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 Django \u0434\u043b\u044f \u043d\u0430\u0448\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439. \u042d\u0442\u043e \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u0431\u044b\u043b\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0432 \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u0444\u043e\u0440\u043c \u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u0435\u0439.","title":"\u041e\u0431\u0437\u043e\u0440 admin.py"},{"location":"lw3/lab3/admin/#_1","text":"from django.contrib import admin from django import forms from .models import Room, Client, ClientInfo, Employee, Floor, Day, EmployeeFloor, EmployeeDay from .models import CustomUser \u0417\u0434\u0435\u0441\u044c \u043c\u044b \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438 \u0438 \u043c\u043e\u0434\u0435\u043b\u0438. admin \u0438 forms \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u0438 \u0444\u043e\u0440\u043c.","title":"\u0418\u043c\u043f\u043e\u0440\u0442\u044b"},{"location":"lw3/lab3/admin/#room","text":"class RoomAdminForm(forms.ModelForm): class Meta: model = Room fields = '__all__' widgets = { 'room_type': forms.Select(choices=Room.ROOM_TYPES) } \u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Room . \u041c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u043f\u043e\u043b\u044f ( fields = '__all__' ) \u0438 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c \u0432\u0438\u0434\u0436\u0435\u0442 \u0434\u043b\u044f \u043f\u043e\u043b\u044f room_type .","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Room"},{"location":"lw3/lab3/admin/#_2","text":"class RoomAdmin(admin.ModelAdmin): form = RoomAdminForm admin.site.register(CustomUser) admin.site.register(Room, RoomAdmin) admin.site.register(Client) admin.site.register(ClientInfo) admin.site.register(Employee) admin.site.register(Floor) admin.site.register(Day) admin.site.register(EmployeeFloor) admin.site.register(EmployeeDay) \u0417\u0434\u0435\u0441\u044c \u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u043c \u043d\u0430\u0448\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435 Django. \u0414\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 Room \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0444\u043e\u0440\u043c\u0430 RoomAdminForm .","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439"},{"location":"lw3/lab3/models/","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 Django CustomUser CustomUser \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f Django ( AbstractUser ), \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u043d\u043e\u0432\u043e\u0435 \u043f\u043e\u043b\u0435 phone \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043d\u043e\u0433\u043e \u043d\u043e\u043c\u0435\u0440\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. class CustomUser(AbstractUser): phone = models.CharField(max_length=15, blank=True) AbstractUser \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u043f\u043e\u043b\u044f, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, email, \u043f\u0430\u0440\u043e\u043b\u044c. phone : \u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043d\u043e\u043c\u0435\u0440\u0430 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430, max_length=15 \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u043b\u0438\u043d\u043d\u0435\u0435 15 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. Floor Floor \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u044d\u0442\u0430\u0436 \u0432 \u0437\u0434\u0430\u043d\u0438\u0438 \u043e\u0442\u0435\u043b\u044f. \u0418\u043c\u0435\u0435\u0442 \u043e\u0434\u043d\u043e \u043f\u043e\u043b\u0435 number , \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u044d\u0442\u0430\u0436\u0430. class Floor(models.Model): number = models.IntegerField() def __str__(self): return f\"Floor {self.number}\" number : \u0426\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043d\u043e\u043c\u0435\u0440\u0430 \u044d\u0442\u0430\u0436\u0430. \u041c\u0435\u0442\u043e\u0434 __str__ : \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \"Floor {number}\", \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u044d\u0442\u0430\u0436\u0430 \u0432 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u043c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0435 Django. Room Room \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043c\u043d\u0430\u0442\u0443 \u0432 \u043e\u0442\u0435\u043b\u0435. \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0438\u043f\u0435 \u043a\u043e\u043c\u043d\u0430\u0442\u044b, \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438, \u044d\u0442\u0430\u0436\u0435 \u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0435. class Room(models.Model): # \u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0442\u0438\u043f\u043e\u0432 \u043a\u043e\u043c\u043d\u0430\u0442 ROOM_TYPES = ( ('single', 'Single'), ('double', 'Double'), ('suite', 'Suite'), ) # \u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u0432 \u043a\u043e\u043c\u043d\u0430\u0442\u044b ROOM_STATUSES = ( ('available', 'Available'), ('occupied', 'Occupied'), ('cleaning', 'Cleaning'), ) room_type = models.CharField(max_length=100, choices=ROOM_TYPES) cost = models.DecimalField(max_digits=10, decimal_places=2) floor = models.ForeignKey(Floor, on_delete=models.CASCADE, related_name='rooms') status = models.CharField(max_length=100, choices=ROOM_STATUSES) def __str__(self): return f\"{self.get_room_type_display()} on Floor {self.floor.number}\" room_type : \u0422\u0438\u043f \u043a\u043e\u043c\u043d\u0430\u0442\u044b \u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430\u043c\u0438. cost : \u0414\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u043a\u043e\u043c\u043d\u0430\u0442\u044b. floor : \u0412\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447 \u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044c Floor , \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043a \u043a\u0430\u043a\u043e\u043c\u0443 \u044d\u0442\u0430\u0436\u0443 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a\u043e\u043c\u043d\u0430\u0442\u0430. status : \u0421\u0442\u0430\u0442\u0443\u0441 \u043a\u043e\u043c\u043d\u0430\u0442\u044b (\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430, \u0437\u0430\u043d\u044f\u0442\u0430, \u0443\u0431\u043e\u0440\u043a\u0430). ClientInfo, Client, Employee, Day, EmployeeFloor, EmployeeDay \u042d\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0430\u0441\u043f\u0435\u043a\u0442\u044b \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0435\u043b\u0435\u043c. ClientInfo : \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0435, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0438\u043c\u044f, \u0444\u0430\u043c\u0438\u043b\u0438\u044e, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e, \u0433\u043e\u0440\u043e\u0434 \u0438 \u0434\u0430\u0442\u0443 \u0437\u0430\u0435\u0437\u0434\u0430. Client : \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 ( ClientInfo ) \u0441 \u043a\u043e\u043c\u043d\u0430\u0442\u043e\u0439 ( Room ). Employee : \u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0430 \u043e\u0442\u0435\u043b\u044f. Day : \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438. EmployeeFloor : \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043a\u0430\u043a\u0438\u0435 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u043d\u0430 \u043a\u0430\u043a\u0438\u0445 \u044d\u0442\u0430\u0436\u0430\u0445. EmployeeDay : \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043a\u0430\u043a\u0438\u0435 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u0432 \u043a\u0430\u043a\u0438\u0435 \u0434\u043d\u0438. class ClientInfo(models.Model): passport_number = models.CharField(max_length=50) first_name = models.CharField(max_length=100) last_name = models.CharField(max_length=100) patronymic = models.CharField(max_length=100, blank=True) city = models.CharField(max_length=100) check_in_date = models.DateTimeField() def __str__(self): return f\"{self.first_name} {self.last_name}\" class Client(models.Model): client_info = models.ForeignKey(ClientInfo, on_delete=models.CASCADE) room = models.ForeignKey(Room, on_delete=models.SET_NULL, null=True, related_name='clients') def __str__(self): return f\"Client {self.client_info.first_name} {self.client_info.last_name}\" class Employee(models.Model): first_name = models.CharField(max_length=100) last_name = models.CharField(max_length=100) patronymic = models.CharField(max_length=100, blank=True) def __str__(self): return f\"{self.first_name} {self.last_name}\" class Day(models.Model): name = models.CharField(max_length=100) def __str__(self): return self.name class EmployeeFloor(models.Model): employee = models.ForeignKey(Employee, on_delete=models.CASCADE) floor = models.ForeignKey(Floor, on_delete=models.CASCADE) def __str__(self): return f\"{self.employee.first_name} {self.employee.last_name} on Floor {self.floor.number}\" class EmployeeDay(models.Model): employee = models.ForeignKey(Employee, on_delete=models.CASCADE) day = models.ForeignKey(Day, on_delete=models.CASCADE) def __str__(self): return f\"{self.employee.first_name} {self.employee.last_name} on {self.day.name}\" \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434 __str__ \u0434\u043b\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u0443\u0434\u043e\u0431\u043e\u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u0412 \u043c\u043e\u0434\u0435\u043b\u044f\u0445 Client , EmployeeFloor , EmployeeDay \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u0438 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438.","title":"Models"},{"location":"lw3/lab3/models/#django","text":"","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 Django"},{"location":"lw3/lab3/models/#customuser","text":"CustomUser \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f Django ( AbstractUser ), \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u043d\u043e\u0432\u043e\u0435 \u043f\u043e\u043b\u0435 phone \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043d\u043e\u0433\u043e \u043d\u043e\u043c\u0435\u0440\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. class CustomUser(AbstractUser): phone = models.CharField(max_length=15, blank=True) AbstractUser \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u043f\u043e\u043b\u044f, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, email, \u043f\u0430\u0440\u043e\u043b\u044c. phone : \u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043d\u043e\u043c\u0435\u0440\u0430 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430, max_length=15 \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u043b\u0438\u043d\u043d\u0435\u0435 15 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.","title":"CustomUser"},{"location":"lw3/lab3/models/#floor","text":"Floor \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u044d\u0442\u0430\u0436 \u0432 \u0437\u0434\u0430\u043d\u0438\u0438 \u043e\u0442\u0435\u043b\u044f. \u0418\u043c\u0435\u0435\u0442 \u043e\u0434\u043d\u043e \u043f\u043e\u043b\u0435 number , \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u044d\u0442\u0430\u0436\u0430. class Floor(models.Model): number = models.IntegerField() def __str__(self): return f\"Floor {self.number}\" number : \u0426\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043d\u043e\u043c\u0435\u0440\u0430 \u044d\u0442\u0430\u0436\u0430. \u041c\u0435\u0442\u043e\u0434 __str__ : \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \"Floor {number}\", \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u044d\u0442\u0430\u0436\u0430 \u0432 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u043c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0435 Django.","title":"Floor"},{"location":"lw3/lab3/models/#room","text":"Room \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043a\u043e\u043c\u043d\u0430\u0442\u0443 \u0432 \u043e\u0442\u0435\u043b\u0435. \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0438\u043f\u0435 \u043a\u043e\u043c\u043d\u0430\u0442\u044b, \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438, \u044d\u0442\u0430\u0436\u0435 \u0438 \u0441\u0442\u0430\u0442\u0443\u0441\u0435. class Room(models.Model): # \u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0442\u0438\u043f\u043e\u0432 \u043a\u043e\u043c\u043d\u0430\u0442 ROOM_TYPES = ( ('single', 'Single'), ('double', 'Double'), ('suite', 'Suite'), ) # \u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u0432 \u043a\u043e\u043c\u043d\u0430\u0442\u044b ROOM_STATUSES = ( ('available', 'Available'), ('occupied', 'Occupied'), ('cleaning', 'Cleaning'), ) room_type = models.CharField(max_length=100, choices=ROOM_TYPES) cost = models.DecimalField(max_digits=10, decimal_places=2) floor = models.ForeignKey(Floor, on_delete=models.CASCADE, related_name='rooms') status = models.CharField(max_length=100, choices=ROOM_STATUSES) def __str__(self): return f\"{self.get_room_type_display()} on Floor {self.floor.number}\" room_type : \u0422\u0438\u043f \u043a\u043e\u043c\u043d\u0430\u0442\u044b \u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430\u043c\u0438. cost : \u0414\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 \u0434\u043b\u044f \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u0438 \u043a\u043e\u043c\u043d\u0430\u0442\u044b. floor : \u0412\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447 \u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u044c Floor , \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043a \u043a\u0430\u043a\u043e\u043c\u0443 \u044d\u0442\u0430\u0436\u0443 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a\u043e\u043c\u043d\u0430\u0442\u0430. status : \u0421\u0442\u0430\u0442\u0443\u0441 \u043a\u043e\u043c\u043d\u0430\u0442\u044b (\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430, \u0437\u0430\u043d\u044f\u0442\u0430, \u0443\u0431\u043e\u0440\u043a\u0430).","title":"Room"},{"location":"lw3/lab3/models/#clientinfo-client-employee-day-employeefloor-employeeday","text":"\u042d\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0430\u0441\u043f\u0435\u043a\u0442\u044b \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0435\u043b\u0435\u043c. ClientInfo : \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0435, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0438\u043c\u044f, \u0444\u0430\u043c\u0438\u043b\u0438\u044e, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e, \u0433\u043e\u0440\u043e\u0434 \u0438 \u0434\u0430\u0442\u0443 \u0437\u0430\u0435\u0437\u0434\u0430. Client : \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 ( ClientInfo ) \u0441 \u043a\u043e\u043c\u043d\u0430\u0442\u043e\u0439 ( Room ). Employee : \u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0430 \u043e\u0442\u0435\u043b\u044f. Day : \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438. EmployeeFloor : \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043a\u0430\u043a\u0438\u0435 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u043d\u0430 \u043a\u0430\u043a\u0438\u0445 \u044d\u0442\u0430\u0436\u0430\u0445. EmployeeDay : \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u043a\u0430\u043a\u0438\u0435 \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u0432 \u043a\u0430\u043a\u0438\u0435 \u0434\u043d\u0438. class ClientInfo(models.Model): passport_number = models.CharField(max_length=50) first_name = models.CharField(max_length=100) last_name = models.CharField(max_length=100) patronymic = models.CharField(max_length=100, blank=True) city = models.CharField(max_length=100) check_in_date = models.DateTimeField() def __str__(self): return f\"{self.first_name} {self.last_name}\" class Client(models.Model): client_info = models.ForeignKey(ClientInfo, on_delete=models.CASCADE) room = models.ForeignKey(Room, on_delete=models.SET_NULL, null=True, related_name='clients') def __str__(self): return f\"Client {self.client_info.first_name} {self.client_info.last_name}\" class Employee(models.Model): first_name = models.CharField(max_length=100) last_name = models.CharField(max_length=100) patronymic = models.CharField(max_length=100, blank=True) def __str__(self): return f\"{self.first_name} {self.last_name}\" class Day(models.Model): name = models.CharField(max_length=100) def __str__(self): return self.name class EmployeeFloor(models.Model): employee = models.ForeignKey(Employee, on_delete=models.CASCADE) floor = models.ForeignKey(Floor, on_delete=models.CASCADE) def __str__(self): return f\"{self.employee.first_name} {self.employee.last_name} on Floor {self.floor.number}\" class EmployeeDay(models.Model): employee = models.ForeignKey(Employee, on_delete=models.CASCADE) day = models.ForeignKey(Day, on_delete=models.CASCADE) def __str__(self): return f\"{self.employee.first_name} {self.employee.last_name} on {self.day.name}\" \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u043e\u0434 __str__ \u0434\u043b\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u0443\u0434\u043e\u0431\u043e\u0447\u0438\u0442\u0430\u0435\u043c\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u0412 \u043c\u043e\u0434\u0435\u043b\u044f\u0445 Client , EmployeeFloor , EmployeeDay \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u0438 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438.","title":"ClientInfo, Client, Employee, Day, EmployeeFloor, EmployeeDay"},{"location":"lw3/lab3/serializers/","text":"models.py \u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043d \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u0445. Warrior (\u0412\u043e\u0438\u043d): \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u0438\u0445 \u0438\u043c\u044f, \u0443\u0440\u043e\u0432\u0435\u043d\u044c, \u0440\u0430\u0441\u0441\u0430 (\u0441\u0442\u0443\u0434\u0435\u043d\u0442, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a, \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c), \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u0435 CharField \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u044b, CharField \u0434\u043b\u044f \u0438\u043c\u0435\u043d\u0438, IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0438 \u043c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f. Profession (\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f): \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0432\u043e\u0438\u043d\u043e\u0432, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0438 TextField \u0434\u043b\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f. Skill (\u0423\u043c\u0435\u043d\u0438\u0435): \u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0443\u043c\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u043b\u0430\u0434\u0435\u044e\u0442 \u0432\u043e\u0438\u043d\u044b. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f. SkillOfWarrior (\u0423\u043c\u0435\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430): \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0432\u043e\u0438\u043d\u043e\u0432 \u0441 \u0438\u0445 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u0438 \u0441 \u0432\u043e\u0438\u043d\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u042d\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u0445\u0435\u043c\u0443 \u0411\u0414 \u0434\u043b\u044f \u043c\u043e\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0433\u0434\u0435 \u0432\u043e\u0438\u043d\u044b \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. from django.db import models class Warrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430 \"\"\" race_types = ( ('s', 'student'), ('d', 'developer'), ('t', 'teamlead'), ) race = models.CharField(max_length=1, choices=race_types, verbose_name='\u0440\u0430\u0441\u0430') name = models.CharField(max_length=120, verbose_name='\u0418\u043c\u044f') level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c', default=0) skills = models.ManyToManyField('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u044f', through='SkillOfWarrior', related_name='warrior_skils') profession = models.ForeignKey('Profession', on_delete=models.CASCADE, verbose_name='\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f', blank=True, null=True) class Profession(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435') description = models.TextField(verbose_name='\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435') class Skill(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435') def __str__(self): return self.title class SkillOfWarrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \u0432\u043e\u0439\u043d\u0430 \"\"\" skill = models.ForeignKey('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u0435', on_delete=models.CASCADE) warrior = models.ForeignKey('Warrior', verbose_name='\u0412\u043e\u0438\u043d', on_delete=models.CASCADE) level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f')","title":"Serializers"},{"location":"lw3/lab3/serializers/#modelspy","text":"\u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043d \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u0445.","title":"models.py"},{"location":"lw3/lab3/serializers/#warrior","text":"\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u0438\u0445 \u0438\u043c\u044f, \u0443\u0440\u043e\u0432\u0435\u043d\u044c, \u0440\u0430\u0441\u0441\u0430 (\u0441\u0442\u0443\u0434\u0435\u043d\u0442, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a, \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c), \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u0435 CharField \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u044b, CharField \u0434\u043b\u044f \u0438\u043c\u0435\u043d\u0438, IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0438 \u043c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f.","title":"Warrior (\u0412\u043e\u0438\u043d):"},{"location":"lw3/lab3/serializers/#profession","text":"\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0432\u043e\u0438\u043d\u043e\u0432, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0438 TextField \u0434\u043b\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f.","title":"Profession (\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f):"},{"location":"lw3/lab3/serializers/#skill","text":"\u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0443\u043c\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u043b\u0430\u0434\u0435\u044e\u0442 \u0432\u043e\u0438\u043d\u044b. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f.","title":"Skill (\u0423\u043c\u0435\u043d\u0438\u0435):"},{"location":"lw3/lab3/serializers/#skillofwarrior","text":"\u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0432\u043e\u0438\u043d\u043e\u0432 \u0441 \u0438\u0445 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u0438 \u0441 \u0432\u043e\u0438\u043d\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u042d\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u0445\u0435\u043c\u0443 \u0411\u0414 \u0434\u043b\u044f \u043c\u043e\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0433\u0434\u0435 \u0432\u043e\u0438\u043d\u044b \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. from django.db import models class Warrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430 \"\"\" race_types = ( ('s', 'student'), ('d', 'developer'), ('t', 'teamlead'), ) race = models.CharField(max_length=1, choices=race_types, verbose_name='\u0440\u0430\u0441\u0430') name = models.CharField(max_length=120, verbose_name='\u0418\u043c\u044f') level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c', default=0) skills = models.ManyToManyField('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u044f', through='SkillOfWarrior', related_name='warrior_skils') profession = models.ForeignKey('Profession', on_delete=models.CASCADE, verbose_name='\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f', blank=True, null=True) class Profession(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435') description = models.TextField(verbose_name='\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435') class Skill(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435') def __str__(self): return self.title class SkillOfWarrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \u0432\u043e\u0439\u043d\u0430 \"\"\" skill = models.ForeignKey('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u0435', on_delete=models.CASCADE) warrior = models.ForeignKey('Warrior', verbose_name='\u0412\u043e\u0438\u043d', on_delete=models.CASCADE) level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f')","title":"SkillOfWarrior (\u0423\u043c\u0435\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430):"},{"location":"lw3/lab3/urls/","text":"models.py \u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043d \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u0445. Warrior (\u0412\u043e\u0438\u043d): \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u0438\u0445 \u0438\u043c\u044f, \u0443\u0440\u043e\u0432\u0435\u043d\u044c, \u0440\u0430\u0441\u0441\u0430 (\u0441\u0442\u0443\u0434\u0435\u043d\u0442, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a, \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c), \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u0435 CharField \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u044b, CharField \u0434\u043b\u044f \u0438\u043c\u0435\u043d\u0438, IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0438 \u043c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f. Profession (\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f): \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0432\u043e\u0438\u043d\u043e\u0432, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0438 TextField \u0434\u043b\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f. Skill (\u0423\u043c\u0435\u043d\u0438\u0435): \u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0443\u043c\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u043b\u0430\u0434\u0435\u044e\u0442 \u0432\u043e\u0438\u043d\u044b. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f. SkillOfWarrior (\u0423\u043c\u0435\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430): \u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0432\u043e\u0438\u043d\u043e\u0432 \u0441 \u0438\u0445 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u0438 \u0441 \u0432\u043e\u0438\u043d\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u042d\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u0445\u0435\u043c\u0443 \u0411\u0414 \u0434\u043b\u044f \u043c\u043e\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0433\u0434\u0435 \u0432\u043e\u0438\u043d\u044b \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. from django.db import models class Warrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430 \"\"\" race_types = ( ('s', 'student'), ('d', 'developer'), ('t', 'teamlead'), ) race = models.CharField(max_length=1, choices=race_types, verbose_name='\u0440\u0430\u0441\u0430') name = models.CharField(max_length=120, verbose_name='\u0418\u043c\u044f') level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c', default=0) skills = models.ManyToManyField('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u044f', through='SkillOfWarrior', related_name='warrior_skils') profession = models.ForeignKey('Profession', on_delete=models.CASCADE, verbose_name='\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f', blank=True, null=True) class Profession(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435') description = models.TextField(verbose_name='\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435') class Skill(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435') def __str__(self): return self.title class SkillOfWarrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \u0432\u043e\u0439\u043d\u0430 \"\"\" skill = models.ForeignKey('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u0435', on_delete=models.CASCADE) warrior = models.ForeignKey('Warrior', verbose_name='\u0412\u043e\u0438\u043d', on_delete=models.CASCADE) level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f')","title":"URL Routes"},{"location":"lw3/lab3/urls/#modelspy","text":"\u042d\u0442\u043e\u0442 \u043a\u043e\u0434 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043d \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0438\u0445 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u0445.","title":"models.py"},{"location":"lw3/lab3/urls/#warrior","text":"\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u043e\u0438\u043d\u0430\u0445, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u0438\u0445 \u0438\u043c\u044f, \u0443\u0440\u043e\u0432\u0435\u043d\u044c, \u0440\u0430\u0441\u0441\u0430 (\u0441\u0442\u0443\u0434\u0435\u043d\u0442, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a, \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c), \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u0435 CharField \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u044b, CharField \u0434\u043b\u044f \u0438\u043c\u0435\u043d\u0438, IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u0421\u0432\u044f\u0437\u0430\u043d \u0441 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0438 \u043c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f.","title":"Warrior (\u0412\u043e\u0438\u043d):"},{"location":"lw3/lab3/urls/#profession","text":"\u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f\u0445 \u0432\u043e\u0438\u043d\u043e\u0432, \u0442\u0430\u043a\u0443\u044e \u043a\u0430\u043a \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0438 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0438 TextField \u0434\u043b\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f.","title":"Profession (\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f):"},{"location":"lw3/lab3/urls/#skill","text":"\u041e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u0443\u043c\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u043b\u0430\u0434\u0435\u044e\u0442 \u0432\u043e\u0438\u043d\u044b. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 CharField \u0434\u043b\u044f \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f.","title":"Skill (\u0423\u043c\u0435\u043d\u0438\u0435):"},{"location":"lw3/lab3/urls/#skillofwarrior","text":"\u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0432\u043e\u0438\u043d\u043e\u0432 \u0441 \u0438\u0445 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u0438 \u0441 \u0432\u043e\u0438\u043d\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 IntegerField \u0434\u043b\u044f \u0443\u0440\u043e\u0432\u043d\u044f. \u042d\u0442\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u0445\u0435\u043c\u0443 \u0411\u0414 \u0434\u043b\u044f \u043c\u043e\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0433\u0434\u0435 \u0432\u043e\u0438\u043d\u044b \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f. from django.db import models class Warrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430 \"\"\" race_types = ( ('s', 'student'), ('d', 'developer'), ('t', 'teamlead'), ) race = models.CharField(max_length=1, choices=race_types, verbose_name='\u0440\u0430\u0441\u0430') name = models.CharField(max_length=120, verbose_name='\u0418\u043c\u044f') level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c', default=0) skills = models.ManyToManyField('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u044f', through='SkillOfWarrior', related_name='warrior_skils') profession = models.ForeignKey('Profession', on_delete=models.CASCADE, verbose_name='\u041f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044f', blank=True, null=True) class Profession(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u0438 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435') description = models.TextField(verbose_name='\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435') class Skill(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \"\"\" title = models.CharField(max_length=120, verbose_name='\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435') def __str__(self): return self.title class SkillOfWarrior(models.Model): \"\"\" \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u043c\u0435\u043d\u0438\u0439 \u0432\u043e\u0439\u043d\u0430 \"\"\" skill = models.ForeignKey('Skill', verbose_name='\u0423\u043c\u0435\u043d\u0438\u0435', on_delete=models.CASCADE) warrior = models.ForeignKey('Warrior', verbose_name='\u0412\u043e\u0438\u043d', on_delete=models.CASCADE) level = models.IntegerField(verbose_name='\u0423\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u044f \u0443\u043c\u0435\u043d\u0438\u044f')","title":"SkillOfWarrior (\u0423\u043c\u0435\u043d\u0438\u0435 \u0432\u043e\u0439\u043d\u0430):"},{"location":"lw3/lab3/views/","text":"views.py \u041e\u0431\u0437\u043e\u0440 views.py \u0424\u0430\u0439\u043b views.py \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041e\u043d \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u043a\u0430\u043a \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0435, \u0442\u0430\u043a \u0438 \u043a\u043b\u0430\u0441\u0441\u043e\u0432\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u0418\u043c\u043f\u043e\u0440\u0442\u044b from django.shortcuts import render, redirect from django.contrib.auth.decorators import login_required from django.contrib.auth.forms import UserCreationForm, AuthenticationForm from django.contrib.auth import login, authenticate from .models import Room, Client, Employee, Floor, Day, EmployeeFloor, EmployeeDay, ClientInfo from rest_framework import viewsets from .serializers import RoomSerializer, ClientSerializer, EmployeeSerializer, FloorSerializer, DaySerializer, EmployeeFloorSerializer, EmployeeDaySerializer, ClientInfoSerializer \u042d\u0442\u0438 \u0438\u043c\u043f\u043e\u0440\u0442\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u043a\u043b\u0430\u0441\u0441\u044b Django \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438, \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0435\u0439 \u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438. \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f @login_required(login_url='/login/') def home(request): return render(request, 'hotel_api/home.html') \u042d\u0442\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 home \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c. \u041e\u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0433\u043b\u0430\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 def login_view(request): if request.method == 'POST': form = AuthenticationForm(request, data=request.POST) if form.is_valid(): user = form.get_user() login(request, user) return redirect('home') else: form = AuthenticationForm() return render(request, 'registration/login.html', {'form': form}) def register_view(request): if request.method == 'POST': form = UserCreationForm(request.POST) if form.is_valid(): user = form.save() login(request, user) return redirect('home') else: form = UserCreationForm() return render(request, 'registration/register.html', {'form': form}) \u042d\u0442\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0432\u0445\u043e\u0434 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f API class RoomViewSet(viewsets.ModelViewSet): queryset = Room.objects.all() serializer_class = RoomSerializer class ClientViewSet(viewsets.ModelViewSet): queryset = Client.objects.all() serializer_class = ClientSerializer class EmployeeViewSet(viewsets.ModelViewSet): queryset = Employee.objects.all() serializer_class = EmployeeSerializer class FloorViewSet(viewsets.ModelViewSet): queryset = Floor.objects.all() serializer_class = FloorSerializer class DayViewSet(viewsets.ModelViewSet): queryset = Day.objects.all() serializer_class = DaySerializer class EmployeeFloorViewSet(viewsets.ModelViewSet): queryset = EmployeeFloor.objects.all() serializer_class = EmployeeFloorSerializer class EmployeeDayViewSet(viewsets.ModelViewSet): queryset = EmployeeDay.objects.all() serializer_class = EmployeeDaySerializer class ClientInfoViewSet(viewsets.ModelViewSet): queryset = ClientInfo.objects.all() serializer_class = ClientInfoSerializer \u041a\u043b\u0430\u0441\u0441 RoomViewSet \u0438 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0435\u043c\u0443 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0447\u0430\u0441\u0442\u044c\u044e REST API, \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0449\u0435\u0439 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043d\u0430\u0434 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438. \u0414\u0440\u0443\u0433\u0438\u0435 \u043f\u0440\u0435\u0434 \u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f def rooms_list(request): room_type_query = request.GET.get('room_type', '').strip() room_status_query = request.GET.get('room_status', '').strip() rooms = Room.objects.all() if room_type_query: rooms = rooms.filter(room_type__iexact=room_type_query) if room_status_query: rooms = rooms.filter(status__iexact=room_status_query) context = { 'rooms': rooms, 'selected_type': room_type_query, 'selected_status': room_status_query, } return render(request, 'hotel_api/rooms_list.html', context) def clients_list(request): clients = Client.objects.all() return render(request, 'hotel_api/client_list.html', {'clients': clients}) def employees_list(request): employees = Employee.objects.all() return render(request, 'hotel_api/employee_list.html', {'employees': employees}) def bookings_list(request): # \u041b\u043e\u0433\u0438\u043a\u0430 \u0434\u043b\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 return render(request, 'hotel_api/bookings_list.html') def floors_list(request): floors = Floor.objects.all() return render(request, 'hotel_api/floor_list.html', {'floors': floors}) def staff_management(request): # \u041b\u043e\u0433\u0438\u043a\u0430 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u043e\u043c return render(request, 'hotel_api/staff_management.html') def reports(request): return render(request, 'hotel_api/reports.html') def settings(request): return render(request, 'hotel_api/settings.html') def client_info_list(request): client_info = ClientInfo.objects.all() return render(request, 'hotel_api/client_info_list.html', {'client_info': client_info}) def days_list(request): days = Day.objects.all() return render(request, 'hotel_api/days_list.html', {'days': days}) def employee_floors_list(request): employee_floors = EmployeeFloor.objects.all() return render(request, 'hotel_api/employee_floors_list.html', {'employee_floors': employee_floors}) def employee_days_list(request): employee_days = EmployeeDay.objects.all() return render(request, 'hotel_api/employee_days_list.html', {'employee_days': employee_days}) \u042d\u0442\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u0437\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u0430\u043c\u0438 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043a\u043e\u043c\u043d\u0430\u0442\u044b \u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u044b.","title":"Views"},{"location":"lw3/lab3/views/#viewspy","text":"","title":"views.py"},{"location":"lw3/lab3/views/#viewspy_1","text":"\u0424\u0430\u0439\u043b views.py \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041e\u043d \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u043a\u0430\u043a \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0435, \u0442\u0430\u043a \u0438 \u043a\u043b\u0430\u0441\u0441\u043e\u0432\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f.","title":"\u041e\u0431\u0437\u043e\u0440 views.py"},{"location":"lw3/lab3/views/#_1","text":"from django.shortcuts import render, redirect from django.contrib.auth.decorators import login_required from django.contrib.auth.forms import UserCreationForm, AuthenticationForm from django.contrib.auth import login, authenticate from .models import Room, Client, Employee, Floor, Day, EmployeeFloor, EmployeeDay, ClientInfo from rest_framework import viewsets from .serializers import RoomSerializer, ClientSerializer, EmployeeSerializer, FloorSerializer, DaySerializer, EmployeeFloorSerializer, EmployeeDaySerializer, ClientInfoSerializer \u042d\u0442\u0438 \u0438\u043c\u043f\u043e\u0440\u0442\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u043a\u043b\u0430\u0441\u0441\u044b Django \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438, \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0435\u0439 \u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438.","title":"\u0418\u043c\u043f\u043e\u0440\u0442\u044b"},{"location":"lw3/lab3/views/#_2","text":"@login_required(login_url='/login/') def home(request): return render(request, 'hotel_api/home.html') \u042d\u0442\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 home \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c. \u041e\u043d\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0433\u043b\u0430\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f"},{"location":"lw3/lab3/views/#_3","text":"def login_view(request): if request.method == 'POST': form = AuthenticationForm(request, data=request.POST) if form.is_valid(): user = form.get_user() login(request, user) return redirect('home') else: form = AuthenticationForm() return render(request, 'registration/login.html', {'form': form}) def register_view(request): if request.method == 'POST': form = UserCreationForm(request.POST) if form.is_valid(): user = form.save() login(request, user) return redirect('home') else: form = UserCreationForm() return render(request, 'registration/register.html', {'form': form}) \u042d\u0442\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0432\u0445\u043e\u0434 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438"},{"location":"lw3/lab3/views/#api","text":"class RoomViewSet(viewsets.ModelViewSet): queryset = Room.objects.all() serializer_class = RoomSerializer class ClientViewSet(viewsets.ModelViewSet): queryset = Client.objects.all() serializer_class = ClientSerializer class EmployeeViewSet(viewsets.ModelViewSet): queryset = Employee.objects.all() serializer_class = EmployeeSerializer class FloorViewSet(viewsets.ModelViewSet): queryset = Floor.objects.all() serializer_class = FloorSerializer class DayViewSet(viewsets.ModelViewSet): queryset = Day.objects.all() serializer_class = DaySerializer class EmployeeFloorViewSet(viewsets.ModelViewSet): queryset = EmployeeFloor.objects.all() serializer_class = EmployeeFloorSerializer class EmployeeDayViewSet(viewsets.ModelViewSet): queryset = EmployeeDay.objects.all() serializer_class = EmployeeDaySerializer class ClientInfoViewSet(viewsets.ModelViewSet): queryset = ClientInfo.objects.all() serializer_class = ClientInfoSerializer \u041a\u043b\u0430\u0441\u0441 RoomViewSet \u0438 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0435 \u0435\u043c\u0443 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0447\u0430\u0441\u0442\u044c\u044e REST API, \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0449\u0435\u0439 CRUD-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043d\u0430\u0434 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438.","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f API"},{"location":"lw3/lab3/views/#_4","text":"\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f def rooms_list(request): room_type_query = request.GET.get('room_type', '').strip() room_status_query = request.GET.get('room_status', '').strip() rooms = Room.objects.all() if room_type_query: rooms = rooms.filter(room_type__iexact=room_type_query) if room_status_query: rooms = rooms.filter(status__iexact=room_status_query) context = { 'rooms': rooms, 'selected_type': room_type_query, 'selected_status': room_status_query, } return render(request, 'hotel_api/rooms_list.html', context) def clients_list(request): clients = Client.objects.all() return render(request, 'hotel_api/client_list.html', {'clients': clients}) def employees_list(request): employees = Employee.objects.all() return render(request, 'hotel_api/employee_list.html', {'employees': employees}) def bookings_list(request): # \u041b\u043e\u0433\u0438\u043a\u0430 \u0434\u043b\u044f \u0441\u043f\u0438\u0441\u043a\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439 return render(request, 'hotel_api/bookings_list.html') def floors_list(request): floors = Floor.objects.all() return render(request, 'hotel_api/floor_list.html', {'floors': floors}) def staff_management(request): # \u041b\u043e\u0433\u0438\u043a\u0430 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u043e\u043c return render(request, 'hotel_api/staff_management.html') def reports(request): return render(request, 'hotel_api/reports.html') def settings(request): return render(request, 'hotel_api/settings.html') def client_info_list(request): client_info = ClientInfo.objects.all() return render(request, 'hotel_api/client_info_list.html', {'client_info': client_info}) def days_list(request): days = Day.objects.all() return render(request, 'hotel_api/days_list.html', {'days': days}) def employee_floors_list(request): employee_floors = EmployeeFloor.objects.all() return render(request, 'hotel_api/employee_floors_list.html', {'employee_floors': employee_floors}) def employee_days_list(request): employee_days = EmployeeDay.objects.all() return render(request, 'hotel_api/employee_days_list.html', {'employee_days': employee_days}) \u042d\u0442\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u0437\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u0430\u043c\u0438 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043a\u043e\u043c\u043d\u0430\u0442\u044b \u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u044b.","title":"\u0414\u0440\u0443\u0433\u0438\u0435 \u043f\u0440\u0435\u0434"},{"location":"pw3/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u043d\u044f\u0442\u0438\u0435 \u21163.1 \u0417\u0430\u0434\u0430\u0447\u0430 1 \u0428\u0430\u0433 1: cd C:\\Users\\apce1\\Desktop\\\u0423\u0427\u0415\u0411\u0410\\\u0412\u0435\u0431-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\\ITMO_ICT_WebDevelopment_2023-2024\\students\\\u043a3343d\\practical_works\\Nikiforov_Arsen\\pw3 \u0428\u0430\u0433 2: manage.py shell \u0428\u0430\u0433 3: \u0438\u043c\u043f\u043e\u0440\u0442 from your_app.models import Warrior, Skill, SkillOfWarrior \u0428\u0430\u0433 4: \u043d\u043e\u0432\u044b\u0439 \u0432\u043e\u0438\u043d short_warrior = Warrior(race=\"s\", name=\"\u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432\", level=20) short_warrior.save() \u0428\u0430\u0433 5: \u043d\u043e\u0432\u044b\u0439 \u043d\u0430\u0432\u044b\u043a new_skill = Skill.objects.create(title=\"\u0412\u0437\u043b\u043e\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430\") \u0428\u0430\u0433 6: \u041f\u0440\u0438\u0432\u044f\u0437\u0430\u043b \u043d\u043e\u0432\u044b\u0439 \u043d\u0430\u0432\u044b\u043a \u043a \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0432\u043e\u0438\u043d\u0443 skill_related = SkillOfWarrior.objects.create(skill=new_skill, warrior=short_warrior, level=15) \u0428\u0430\u0433 7: \u0412\u044b\u0432\u043e\u0434 \u0438\u043d\u0444\u044b from myapp.models import Warrior warriors = Warrior.objects.all() for warrior in warriors: print(warrior.name, warrior.race, warrior.level) \u0442\u0435\u043e\u0440\u0438\u044f: SkillOfWarrior.objects.create: \u042d\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 SkillOfWarrior. SkillOfWarrior.objects - \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 SkillOfWarrior. \u041c\u0435\u0442\u043e\u0434 create \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445. skill=new_skill: \u042d\u0442\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044e skill \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Skill. \u041c\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u043e\u0432\u044b\u0439 \u043d\u0430\u0432\u044b\u043a (new_skill) \u0438 \u0442\u0435\u043f\u0435\u0440\u044c \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0435\u0433\u043e \u0441 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c SkillOfWarrior. warrior=short_warrior: \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c\u0443, \u044d\u0442\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044e warrior \u043e\u0431\u044a\u0435\u043a\u0442\u0430 short_warrior. \u041c\u044b \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0432\u043e\u0438\u043d\u043e\u043c (short_warrior). level=15: \u042d\u0442\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044e level \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f 15. \u041c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043d\u0430\u0432\u044b\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043c\u043e\u0434\u0435\u043b\u0438 SkillOfWarrior, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043d\u0430\u0432\u044b\u043a (new_skill) \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432\u043e\u0438\u043d\u043e\u043c (short_warrior) \u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043d\u0430\u0432\u044b\u043a\u0430 (level=15). \u041f\u0440\u0438\u043c\u0435\u0440: >>> short_warrior = Warrior(race=\"s\", name=\"\u0410\u0440\u0441\u0435\u043d \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432\", level=100) >>> short_warrior.save() >>> new_skill = Skill.objects.create(title=\"\u0412\u0437\u043b\u043e\u043c \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0435\u043d\u0442\u0430\u0433\u043e\u043d\u0430\") >>> skill_related = SkillOfWarrior.objects.create(skill=new_skill, warrior=short_warrior, level=800) >>> from myapp.models import Warrior >>> warriors = Warrior.objects.all() >>> for warrior in warriors: ... print(warrior.name, warrior.race, warrior.level) ... \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432 s 20 \u0410\u0440\u0441\u0435\u043d \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 s 100 >>> tall_warrior = Warrior(race=\"t\", name=\"\u0410\u0440\u0442\u0443\u0440 \u041f\u0438\u0440\u043e\u0436\u043a\u043e\u0432\", level=1000) >>> tall_warrior.save() >>> skill_related = SkillOfWarrior.objects.create(skill=new_skill, warrior=short_warrior, level=1800) >>> warriors = Warrior.objects.all() >>> for warrior in warriors: ... print(warrior.name, warrior.race, warrior.level) ... \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432 s 20 \u0410\u0440\u0441\u0435\u043d \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 s 100 \u0410\u0440\u0442\u0443\u0440 \u041f\u0438\u0440\u043e\u0436\u043a\u043e\u0432 t 1000 \u0417\u0430\u0434\u0430\u0447\u0430 2 \u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 C:\\Users\\apce1\\Desktop\\\u0423\u0427\u0415\u0411\u0410\\\u0412\u0435\u0431-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\\ITMO_ICT_WebDevelopment_2023-2024\\students\\\u043a3343d\\practical_works\\Nikiforov_Arsen\\pw3\\myproject>python manage.py shell Python 3.12.0 (tags/v3.12.0:0fb18b0, Oct 2 2023, 13:03:39) [MSC v.1935 64 bit (AMD64)] on win32 Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. (InteractiveConsole) >>> from myapp.models import Warrior \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435\u0445 \u0432\u043e\u0438\u043d\u043e\u0432: >>> warriors = Warrior.objects.all() >>> print(warriors) <QuerySet [<Warrior: Warrior object (1)>, <Warrior: Warrior object (2)>, <Warrior: Warrior object (3)>]> \u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e \u0443\u0440\u043e\u0432\u043d\u044e 20: >>> warriors_level_20 = Warrior.objects.filter(level=20) >>> print(warriors_level_20) <QuerySet [<Warrior: Warrior object (1)>]> \u0414\u043e\u0441\u0442\u0443\u043f \u043a \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u0432\u043e\u0438\u043d\u0443 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438: >>> first_warrior = warriors_level_20.first() >>> print(first_warrior) Warrior object (1) >>> print(first_warrior.name) \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 get(): \u044d\u0442\u0430 \u0448\u0442\u0443\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 >>> specific_warrior = Warrior.objects.get(level=20, name=\"\u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432\") >>> print(specific_warrior) Warrior object (1) \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c. >>> warriors_not_level_20 = Warrior.objects.exclude(level=20) >>> print(warriors_not_level_20) <QuerySet [<Warrior: Warrior object (2)>, <Warrior: Warrior object (3)>]> >>> Queryset \u0438 \u0446\u0435\u043f\u043e\u0447\u043a\u0438 \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432 >>> from myapp.models import Warrior >>> # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u043e\u0433\u043e \u0432\u043e\u0438\u043d\u0430 \"\u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0423\u0440\u0431\u0430\u043d\" >>> powerful_warrior = Warrior.objects.create(name=\"\u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0423\u0440\u0431\u0430\u043d\", level=11, race=\"d\") >>> # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u043e\u0433\u043e \u0432\u043e\u0438\u043d\u0430 \"\u041d\u0438\u043a\u0438\u0442\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u0441\u043a\u0438\u0439\" >>> cute_warrior = Warrior.objects.create(name=\"\u041d\u0438\u043a\u0438\u0442\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u0441\u043a\u0438\u0439\", level=15, race=\"s\") >>> from myapp.models import Warrior >>> # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0446\u0435\u043f\u043e\u0447\u043a\u0443 \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432 >>> filtered_warriors = Warrior.objects.exclude(level=20).filter(race=\"s\") >>> for warrior in filtered_warriors: ... print(warrior) ... Warrior object (2) Warrior object (5) \u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c\u044b\u0435 \u043a \u043f\u043e\u043b\u044f\u043c \u0438 \u043f\u043e\u0438\u0441\u043a \u0447\u0435\u0440\u0435\u0437 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f >>> # \u041f\u0440\u0438\u0432\u044f\u0436\u0435\u043c \u0443\u043c\u0435\u043d\u0438\u044f \u043a \u0432\u043e\u0438\u043d\u0430\u043c \u0447\u0435\u0440\u0435\u0437 \u043c\u043e\u0434\u0435\u043b\u044c SkillOfWarrior >>> SkillOfWarrior.objects.create(warrior=powerful_warrior, skill=gaming, level=0) <SkillOfWarrior: SkillOfWarrior object (4)> >>> SkillOfWarrior.objects.create(warrior=cute_warrior, skill=gaming, level=0) <SkillOfWarrior: SkillOfWarrior object (5)> >>> from myapp.models import Skill, Warrior, SkillOfWarrior >>> >>> # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0443\u043c\u0435\u043d\u0438\u0435 >>> gaming = Skill.objects.create(title=\"\u0423\u043c\u0435\u043d\u0438\u0435 \u0438\u0433\u0440\u0430\u0442\u044c \u0432\u043e \u0432\u0441\u0435 \u043f\u043e\u0434\u0440\u044f\u0434\") >>> >>> # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0443\u043c\u0435\u043d\u0438\u0435 \u043a \u0432\u043e\u0438\u043d\u0430\u043c >>> powerful_warrior = Warrior.objects.create(name=\"\u041c\u043e\u0433\u0443\u0447\u0438\u0439 \u0432\u043e\u0438\u043d\", level=20) >>> cute_warrior = Warrior.objects.create(name=\"\u041c\u0438\u043b\u044b\u0439 \u0432\u043e\u0438\u043d\", level=15) >>> >>> powerful_skill = SkillOfWarrior.objects.create(skill=gaming, warrior=powerful_warrior, level=22) >>> cute_skill = SkillOfWarrior.objects.create(skill=gaming, warrior=cute_warrior, level=12) >>> >>> >>> # \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u043e\u0438\u043d\u043e\u0432, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u043c\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \"\u0414\u043c\u0438\u0442\u0440\u0438\u0439\" >>> Warrior.objects.filter(name__contains=\"\u0414\u043c\u0438\u0442\u0440\u0438\u0439\") <QuerySet [<Warrior: Warrior object (4)>]> >>> >>> # \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u043e\u0438\u043d\u043e\u0432 \u0441 \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u044b\u043c 20 >>> Warrior.objects.filter(level__gte=20) <QuerySet [<Warrior: Warrior object (1)>, <Warrior: Warrior object (2)>, <Warrior: Warrior object (3)>, <Warrior: Warrior object (6)>]> >>> >>> # \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u043e\u0438\u043d\u043e\u0432, \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0449\u0438\u0445 \u0443\u043c\u0435\u043d\u0438\u0435\u043c \"\u0423\u043c\u0435\u043d\u0438\u0435 \u0438\u0433\u0440\u0430\u0442\u044c \u0432\u043e \u0432\u0441\u0435 \u043f\u043e\u0434\u0440\u044f\u0434\" \u0438 \u0438\u043c\u0435\u044e\u0449\u0438\u0445 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0443\u043c\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435 13 >>> Warrior.objects.filter(skillofwarrior__level__gt=13, skillofwarrior__skill__title__icontains=\"\u0438\u0433\u0440\u0430\u0442\u044c\") <QuerySet [<Warrior: Warrior object (6)>]> \u0417\u0430\u0434\u0430\u0447\u0430 3 \u0410\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u044f: \u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c, \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c Warrior \u0441 \u043f\u043e\u043b\u0435\u043c level, \u0438 \u0445\u043e\u0442\u0438\u043c \u043d\u0430\u0439\u0442\u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0432\u043e\u0438\u043d\u043e\u0432. >>> from django.db.models import Avg >>> from myapp.models import Warrior >>> >>> # \u0420\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0432\u043e\u0438\u043d\u043e\u0432 >>> average_level = Warrior.objects.aggregate(Avg(\"level\")) >>> >>> print(\"\u0421\u0440\u0435\u0434\u043d\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0432\u043e\u0438\u043d\u043e\u0432:\", average_level['level__avg']) \u0421\u0440\u0435\u0434\u043d\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0432\u043e\u0438\u043d\u043e\u0432: 168.71428571428572 \u0410\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f: \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u043c, \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 Warrior, Skill \u0438 \u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 ManyToManyField. \u041c\u044b \u0445\u043e\u0442\u0438\u043c \u0443\u0437\u043d\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043c\u0435\u043d\u0438\u0439 \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0438\u043d\u0430. >>> from myapp.models import Warrior >>> # \u0410\u043d\u043d\u043e\u0442\u0438\u0440\u0443\u0435\u043c \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0438\u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0435\u0433\u043e \u0443\u043c\u0435\u043d\u0438\u0439 >>> annotated_warriors = Warrior.objects.annotate(skill_count=models.Count('warrior_skill')) Traceback (most recent call last): File \"<console>\", line 1, in <module> NameError: name 'models' is not defined >>> >>> >>> from myapp.models import Warrior >>> from django.db.models import Count >>> # \u0410\u043d\u043d\u043e\u0442\u0438\u0440\u0443\u0435\u043c \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0438\u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0435\u0433\u043e \u0443\u043c\u0435\u043d\u0438\u0439 >>> annotated_warriors = Warrior.objects.annotate(skill_count=Count('warrior_skill')) >>> >>> for warrior in annotated_warriors: ... print(f\"\u0412\u043e\u0438\u043d {warrior.name} \u0438\u043c\u0435\u0435\u0442 {warrior.skill_count} \u0443\u043c\u0435\u043d\u0438\u0439.\") ... \u0412\u043e\u0438\u043d \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432 \u0438\u043c\u0435\u0435\u0442 1 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u0410\u0440\u0441\u0435\u043d \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 \u0438\u043c\u0435\u0435\u0442 2 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u0410\u0440\u0442\u0443\u0440 \u041f\u0438\u0440\u043e\u0436\u043a\u043e\u0432 \u0438\u043c\u0435\u0435\u0442 0 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0423\u0440\u0431\u0430\u043d \u0438\u043c\u0435\u0435\u0442 1 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u041d\u0438\u043a\u0438\u0442\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u0441\u043a\u0438\u0439 \u0438\u043c\u0435\u0435\u0442 1 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u041c\u043e\u0433\u0443\u0447\u0438\u0439 \u0432\u043e\u0438\u043d \u0438\u043c\u0435\u0435\u0442 1 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u041c\u0438\u043b\u044b\u0439 \u0432\u043e\u0438\u043d \u0438\u043c\u0435\u0435\u0442 1 \u0443\u043c\u0435\u043d\u0438\u0439. \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 \u0441 .values() \u0438 \u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0432\u0430\u043d\u0438\u0435: \u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c, \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043f\u043e\u043b\u0435 race \u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Warrior, \u0438 \u041c\u044b \u0445\u043e\u0442\u0438\u043c \u0443\u0437\u043d\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0440\u0430\u0441. >>> from myapp.models import Warrior >>> from django.db.models import Count >>> # \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0440\u0430\u0441\u0435 \u0438 \u043f\u043e\u0434\u0441\u0447\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u043e\u0438\u043d\u043e\u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0440\u0430\u0441\u044b >>> grouped_warriors = Warrior.objects.values('race').annotate(warrior_count=Count('id')).order_by('race') >>> >>> # \u0412\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 >>> for group in grouped_warriors: ... print(f\"\u0420\u0430\u0441\u0430: {group['race']}, \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432: {group['warrior_count']}\") ... \u0420\u0430\u0441\u0430: , \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432: 2 \u0420\u0430\u0441\u0430: d, \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432: 1 \u0420\u0430\u0441\u0430: s, \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432: 3 \u0420\u0430\u0441\u0430: t, \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432: 1 \u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 .values(\"race\") \u0434\u043b\u044f \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438 \u043f\u043e \u043f\u043e\u043b\u044e race \u0438 \u043c\u0435\u0442\u043e\u0434 annotate \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u043e\u0438\u043d\u043e\u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0440\u0430\u0441\u044b. \u0423\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0432\u0430\u043d\u0438\u0435: \u0423\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u043c \u0432\u043e\u0438\u043d\u043e\u0432 \u043f\u043e \u0438\u0445 \u0443\u0440\u043e\u0432\u043d\u044e. >>> # \u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f .order_by() \u0434\u043b\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u0432\u043e\u0438\u043d\u043e\u0432 \u043f\u043e \u0443\u0440\u043e\u0432\u043d\u044e >>> sorted_warriors = Warrior.objects.order_by(\"level\") >>> >>> for warrior in sorted_warriors: ... print(f\"{warrior.name} - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: {warrior.level}\") ... \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0423\u0440\u0431\u0430\u043d - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 11 \u041d\u0438\u043a\u0438\u0442\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u0441\u043a\u0438\u0439 - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 15 \u041c\u0438\u043b\u044b\u0439 \u0432\u043e\u0438\u043d - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 15 \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432 - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 20 \u041c\u043e\u0433\u0443\u0447\u0438\u0439 \u0432\u043e\u0438\u043d - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 20 \u0410\u0440\u0441\u0435\u043d \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 100 \u0410\u0440\u0442\u0443\u0440 \u041f\u0438\u0440\u043e\u0436\u043a\u043e\u0432 - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 1000 \u0417\u0434\u0435\u0441\u044c \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 order_by(\"level\"), \u0447\u0442\u043e\u0431\u044b \u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0442\u044c \u0432\u043e\u0438\u043d\u043e\u0432 \u043f\u043e \u0438\u0445 \u0443\u0440\u043e\u0432\u043d\u044e. \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 1 >>> from myapp.models import Owner >>> owner1 = Owner.objects.create(last_name=\"\u0418\u0432\u0430\u043d\u043e\u0432\", first_name=\"\u0418\u0432\u0430\u043d\", birth_date=\"1990-01-01\") >>> owner2 = Owner.objects.create(last_name=\"\u041f\u0435\u0442\u0440\u043e\u0432\", first_name=\"\u041f\u0435\u0442\u0440\", birth_date=\"1995-03-15\") >>> owner3 = Owner.objects.create(last_name=\"\u0421\u0438\u0434\u043e\u0440\u043e\u0432\", first_name=\"\u0421\u0438\u0434\u043e\u0440\", birth_date=\"1985-07-20\") >>> owner4 = Owner.objects.create(last_name=\"\u0421\u043c\u0438\u0440\u043d\u043e\u0432\u0430\", first_name=\"\u041c\u0430\u0440\u0438\u044f\", birth_date=\"1988-11-30\") >>> owner5 = Owner.objects.create(last_name=\"\u041a\u043e\u0437\u043b\u043e\u0432\", first_name=\"\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\", birth_date=\"1992-06-05\") >>> owner6 = Owner.objects.create(last_name=\"\u041d\u0438\u043a\u043e\u043b\u0430\u0435\u0432\", first_name=\"\u041d\u0438\u043a\u043e\u043b\u0430\u0439\", birth_date=\"1987-09-10\") >>> owner7 = Owner.objects.create(last_name=\"\u0422\u0438\u0445\u043e\u043d\u043e\u0432\u0430\", first_name=\"\u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0430\", birth_date=\"1993-04-25\") >>> >>> from myapp.models import Car >>> >>> car1 = Car.objects.create(license_plate=\"ABC123\", brand=\"Toyota\", model=\"Camry\", color=\"Blue\") >>> car2 = Car.objects.create(license_plate=\"XYZ789\", brand=\"Honda\", model=\"Civic\", color=\"Red\") >>> car3 = Car.objects.create(license_plate=\"DEF456\", brand=\"Ford\", model=\"Focus\", color=\"Green\") >>> car4 = Car.objects.create(license_plate=\"GHI789\", brand=\"Chevrolet\", model=\"Malibu\", color=\"Silver\") >>> car5 = Car.objects.create(license_plate=\"JKL012\", brand=\"Nissan\", model=\"Altima\", color=\"Black\") >>> car6 = Car.objects.create(license_plate=\"MNO345\", brand=\"Volkswagen\", model=\"Jetta\", color=\"White\") from myapp.models import Ownership, Car # \u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 1 ownership1 = Ownership.objects.create(owner=owner1, car=car1, start_date=\"2022-01-01\", end_date=\"2023-01-01\") ownership2 = Ownership.objects.create(owner=owner1, car=car2, start_date=\"2022-02-15\", end_date=\"2023-02-15\") ownership3 = Ownership.objects.create(owner=owner1, car=car3, start_date=\"2022-03-20\", end_date=\"2023-03-20\") # \u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 2 ownership4 = Ownership.objects.create(owner=owner2, car=car2, start_date=\"2022-04-10\", end_date=\"2023-04-10\") ownership5 = Ownership.objects.create(owner=owner2, car=car4, start_date=\"2022-05-25\", end_date=\"2023-05-25\") # \u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 3 ownership6 = Ownership.objects.create(owner=owner3, car=car1, start_date=\"2022-06-30\", end_date=\"2023-06-30\") ownership7 = Ownership.objects.create(owner=owner3, car=car3, start_date=\"2022-07-05\", end_date=\"2023-07-05\") ownership8 = Ownership.objects.create(owner=owner3, car=car5, start_date=\"2022-08-10\", end_date=\"2023-08-10\") # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432: from myapp.models import Owner, Car, DriverLicense, Ownership >>> # \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u0445 >>> owners = Owner.objects.all() >>> for owner in owners: ... print(f\"Owner: {owner.first_name} {owner.last_name}, Birth Date: {owner.birth_date}\") ... Owner: \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432, Birth Date: 1990-01-01 Owner: \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432, Birth Date: 1995-03-15 Owner: \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432, Birth Date: 1985-07-20 Owner: \u041c\u0430\u0440\u0438\u044f \u0421\u043c\u0438\u0440\u043d\u043e\u0432\u0430, Birth Date: 1988-11-30 Owner: \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041a\u043e\u0437\u043b\u043e\u0432, Birth Date: 1992-06-05 Owner: \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041d\u0438\u043a\u043e\u043b\u0430\u0435\u0432, Birth Date: 1987-09-10 Owner: \u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0430 \u0422\u0438\u0445\u043e\u043d\u043e\u0432\u0430, Birth Date: 1993-04-25 >>> # \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u0445 >>> cars = Car.objects.all() >>> for car in cars: ... print(f\"Car: {car.brand} {car.model}, License Plate: {car.license_plate}, Color: {car.color}\") ... Car: Toyota Camry, License Plate: ABC123, Color: Blue Car: Honda Civic, License Plate: XYZ789, Color: Red Car: Ford Focus, License Plate: DEF456, Color: Green Car: Chevrolet Malibu, License Plate: GHI789, Color: Silver Car: Nissan Altima, License Plate: JKL012, Color: Black Car: Volkswagen Jetta, License Plate: MNO345, Color: White \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f (\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435) >>> from myapp.models import DriverLicense, Owner >>> >>> dl1 = DriverLicense.objects.create(owner=owner1, license_number=\"12345\", license_type=\"A\", issue_date=\"2022-01-01\") >>> dl2 = DriverLicense.objects.create(owner=owner2, license_number=\"67890\", license_type=\"B\", issue_date=\"2022-02-15\") >>> dl3 = DriverLicense.objects.create(owner=owner3, license_number=\"54321\", license_type=\"C\", issue_date=\"2022-03-20\") >>> dl4 = DriverLicense.objects.create(owner=owner4, license_number=\"98765\", license_type=\"B\", issue_date=\"2022-04-10\") >>> dl5 = DriverLicense.objects.create(owner=owner5, license_number=\"13579\", license_type=\"A\", issue_date=\"2022-05-25\") >>> dl6 = DriverLicense.objects.create(owner=owner6, license_number=\"24680\", license_type=\"C\", issue_date=\"2022-06-30\") >>> dl7 = DriverLicense.objects.create(owner=owner7, license_number=\"11223\", license_type=\"A\", issue_date=\"2022-07-05\") >>> \u0412\u044b\u0432\u043e\u0434 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0439 >>> driver_licenses = DriverLicense.objects.all() >>> for dl in driver_licenses: ... print(f\"Driver's License: {dl.owner.first_name} {dl.owner.last_name}, Number: {dl.license_number}, Type: {dl.license_type}\") ... Driver's License: \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432, Number: 12345, Type: A Driver's License: \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432, Number: 67890, Type: B Driver's License: \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432, Number: 54321, Type: C Driver's License: \u041c\u0430\u0440\u0438\u044f \u0421\u043c\u0438\u0440\u043d\u043e\u0432\u0430, Number: 98765, Type: B Driver's License: \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041a\u043e\u0437\u043b\u043e\u0432, Number: 13579, Type: A Driver's License: \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041d\u0438\u043a\u043e\u043b\u0430\u0435\u0432, Number: 24680, Type: C Driver's License: \u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0430 \u0422\u0438\u0445\u043e\u043d\u043e\u0432\u0430, Number: 11223, Type: A >>> >>> # \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f\u0445 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u043c\u0438 >>> ownerships = Ownership.objects.all() >>> for ownership in ownerships: ... print(f\"{ownership.owner.first_name} {ownership.owner.last_name} owns {ownership.car.brand} {ownership.car.model} from {ownership.start_date} to {ownership.end_date}\") ... \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Toyota Camry from 2022-01-01 to 2023-01-01 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Honda Civic from 2022-02-15 to 2023-02-15 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Ford Focus from 2022-03-20 to 2023-03-20 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Honda Civic from 2022-04-10 to 2023-04-10 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Chevrolet Malibu from 2022-05-25 to 2023-05-25 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Toyota Camry from 2022-06-30 to 2023-06-30 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Ford Focus from 2022-07-05 to 2023-07-05 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Nissan Altima from 2022-08-10 to 2023-08-10 \u0447\u0435\u0440\u0435\u0437 \u043c\u0435\u0442\u043e\u0434 add() >>> from myapp.models import Ownership >>> >>> # \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0434\u0430\u0442\u044b \u043d\u0430\u0447\u0430\u043b\u0430 \u0438 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f >>> ownership1 = Ownership.objects.create(owner=owner1, car=car1, start_date=\"2022-01-01\", end_date=\"2022-05-01\") >>> ownership2 = Ownership.objects.create(owner=owner1, car=car2, start_date=\"2022-01-01\", end_date=\"2022-06-15\") >>> ownership3 = Ownership.objects.create(owner=owner2, car=car3, start_date=\"2022-02-15\", end_date=\"2022-08-01\") >>> ownership4 = Ownership.objects.create(owner=owner3, car=car1, start_date=\"2022-03-20\", end_date=\"2022-10-30\") >>> ownership5 = Ownership.objects.create(owner=owner3, car=car3, start_date=\"2022-03-20\", end_date=\"2022-09-15\") >>> # \u041f\u0440\u043e\u0431\u0443\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u043c \u0447\u0435\u0440\u0435\u0437 \u043c\u0435\u0442\u043e\u0434 .add() >>> owner1.cars.add(car1, car2) >>> owner2.cars.add(car3) >>> owner3.cars.add(car1, car3) >>> for owner in latest_owners: ... print(f\"\u0412\u043b\u0430\u0434\u0435\u043b\u0435\u0446: {owner.last_name}, \u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f: {owner.birth_date}\") ... \u0412\u043b\u0430\u0434\u0435\u043b\u0435\u0446: \u0421\u0438\u0434\u043e\u0440\u043e\u0432, \u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f: 1985-07-20 \u0412\u043b\u0430\u0434\u0435\u043b\u0435\u0446: \u041f\u0435\u0442\u0440\u043e\u0432, \u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f: 1995-03-15 \u0412\u043b\u0430\u0434\u0435\u043b\u0435\u0446: \u0418\u0432\u0430\u043d\u043e\u0432, \u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f: 1990-01-01 >>> from myapp.models import DriverLicense >>> # \u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0439 >>> latest_licenses = DriverLicense.objects.order_by('-id')[:10] >>> for license in latest_licenses: ... print(f\"\u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: {license.license_number}, \u0422\u0438\u043f: {license.license_type}\") ... \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 11223, \u0422\u0438\u043f: A \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 24680, \u0422\u0438\u043f: C \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 13579, \u0422\u0438\u043f: A \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 98765, \u0422\u0438\u043f: B \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 54321, \u0422\u0438\u043f: C \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 67890, \u0422\u0438\u043f: B \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 12345, \u0422\u0438\u043f: A \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 2 cd C:\\Users\\apce1\\Desktop\\\u0423\u0427\u0415\u0411\u0410\\\u0412\u0435\u0431-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\\ITMO_ICT_WebDevelopment_2023-2024\\students\\\u043a3343d\\practical_works\\Nikiforov_Arsen\\pw3\\myproject2 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c relate_name related_name='ownerships' \u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \"Toyota\": >>> from myapp.models import Car >>> >>> # \u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u044b\u0432\u043e\u0434 \u0432\u0441\u0435\u0445 \u043c\u0430\u0448\u0438\u043d \u043c\u0430\u0440\u043a\u0438 Toyota >>> toyota_cars = Car.objects.filter(brand=\"Toyota\") >>> for car in toyota_cars: ... print(f\"Car: {car.brand} {car.model}, License Plate: {car.license_plate}, Color: {car.color}\") ... Car: Toyota Camry, License Plate: ABC123, Color: Blue Car: Toyota Camry, License Plate: ABC123, Color: Blue Car: Toyota Camry, License Plate: ABC123, Color: Blue >>> \u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u0438\u0441\u043a \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \"\u0421\u0438\u0434\u043e\u0440\" (\u0412\u043d\u0430\u0447\u0430\u043b\u0435 \u0445\u043e\u0442\u0435\u043b \u043f\u043e\u0438\u0441\u043a\u0430\u0442\u044c \u041e\u043b\u0435\u0433\u043e\u0432, \u043d\u043e \u0438\u0445 \u043d\u0435 \u0431\u044b\u043b\u043e) ``` oleg_drivers = DriverLicense.objects.filter(owner__first_name=\"\u0421\u0438\u0434\u043e\u0440\") for driver in oleg_drivers: ... print(f\"Driver's License: {driver.owner.first_name} {driver.owner.last_name}, Number: {driver.license_number}, Type: {driver.license_type}\") ... Driver's License: \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432, Number: 54321, Type: C \u0412\u043e\u0437\u044c\u043c\u0435\u043c \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430, \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0435\u0433\u043e id \u0438 \u0437\u0430\u0442\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f: import random \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 random_owner = random.choice(Owner.objects.all()) \u0412\u044b\u0432\u043e\u0434 id \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 print(f\"Owner ID: {random_owner.id}\") Owner ID: 3 \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u043f\u043e id \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 driver_license = DriverLicense.objects.get(owner=random_owner) print(f\"Driver's License: {driver_license.owner.first_name} {driver_license.owner.last_name}, Number: {driver_license.license_number}, Type: {driver_license.license_type}\") Driver's License: \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432, Number: 54321, Type: C \u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430): red_car_owners = Owner.objects.filter(cars__color=\"Red\") for owner in red_car_owners: ... print(f\"Owner: {owner.first_name} {owner.last_name}, Birth Date: {owner.birth_date}\") ... Owner: \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432, Birth Date: 1990-01-01 Owner: \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432, Birth Date: 1995-03-15 Owner: \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432, Birth Date: 1990-01-01 Owner: \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432, Birth Date: 1990-01-01 \u041d\u0430\u0439\u0434\u0435\u043c \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434 \u043f\u043e\u0441\u043b\u0435 2010): from myapp.models import Ownership year_start = 2010 ownership_2010 = Ownership.objects.filter(start_date__year__gte=year_start) for ownership in ownership_2010: ... print(f\"{ownership.owner.first_name} {ownership.owner.last_name} owns {ownership.car.brand} {ownership.car.model} from {ownership.start_date} to {ownership.end_date}\") ... \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Toyota Camry from 2022-01-01 to 2023-01-01 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Honda Civic from 2022-02-15 to 2023-02-15 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Ford Focus from 2022-03-20 to 2023-03-20 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Honda Civic from 2022-04-10 to 2023-04-10 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Chevrolet Malibu from 2022-05-25 to 2023-05-25 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Toyota Camry from 2022-06-30 to 2023-06-30 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Ford Focus from 2022-07-05 to 2023-07-05 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Nissan Altima from 2022-08-10 to 2023-08-10 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Toyota Camry from 2022-01-01 to 2022-12-31 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Honda Civic from 2022-02-01 to 2022-12-31 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Ford Focus from 2022-03-01 to 2022-12-31 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Toyota Camry from 2022-04-01 to 2022-12-31 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Ford Focus from 2022-05-01 to 2022-12-31 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Toyota Camry from 2022-01-01 to 2022-05-01 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Honda Civic from 2022-01-01 to 2022-06-15 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Ford Focus from 2022-02-15 to 2022-08-01 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Toyota Camry from 2022-03-20 to 2022-10-30 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Ford Focus from 2022-03-20 to 2022-09-15 >>> #\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3 #\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3: \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b c \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f from myapp.models import DriverLicense oldest_license = DriverLicense.objects.order_by('issue_date').first() print(\"\u0421\u0430\u043c\u043e\u0435 \u0441\u0442\u0430\u0440\u0448\u0435\u0435 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e:\", oldest_license.issue_date) \u0421\u0430\u043c\u043e\u0435 \u0441\u0442\u0430\u0440\u0448\u0435\u0435 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e: 2022-01-01 \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435 from myapp.models import Ownership, Car latest_car_ownership = Ownership.objects.filter(car__isnull=False).order_by('-end_date').first() print(\"\u0421\u0430\u043c\u0430\u044f \u043f\u043e\u0437\u0434\u043d\u044f\u044f \u0434\u0430\u0442\u0430 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439:\", latest_car_ownership.end_date) \u0421\u0430\u043c\u0430\u044f \u043f\u043e\u0437\u0434\u043d\u044f\u044f \u0434\u0430\u0442\u0430 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439: 2023-08-10 \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f owners_car_count = Owner.objects.annotate(car_count=Count('cars')) for owner in owners_car_count: ... print(f\"{owner}: {owner.car_count} \u043c\u0430\u0448\u0438\u043d(\u044b)\") ... \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: 5 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: 3 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: 5 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0421\u043c\u0438\u0440\u043d\u043e\u0432\u0430 \u041c\u0430\u0440\u0438\u044f: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041a\u043e\u0437\u043b\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041d\u0438\u043a\u043e\u043b\u0430\u0435\u0432 \u041d\u0438\u043a\u043e\u043b\u0430\u0439: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0422\u0438\u0445\u043e\u043d\u043e\u0432\u0430 \u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0430: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: 2 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: 1 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: 2 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 car_brand_count = Car.objects.values('brand').annotate(brand_count=Count('brand')) for car in car_brand_count: ... print(f\"{car['brand']}: {car['brand_count']} \u043c\u0430\u0448\u0438\u043d(\u044b)\") ... Chevrolet: 1 \u043c\u0430\u0448\u0438\u043d(\u044b) Ford: 3 \u043c\u0430\u0448\u0438\u043d(\u044b) Honda: 3 \u043c\u0430\u0448\u0438\u043d(\u044b) Nissan: 1 \u043c\u0430\u0448\u0438\u043d(\u044b) Toyota: 3 \u043c\u0430\u0448\u0438\u043d(\u044b) Volkswagen: 1 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f (\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\u0441\u044c \u043c\u0435\u0442\u043e\u0434\u043e\u043c .distinct() from django.db.models import Count, Min owners_sorted_by_license_date = Owner.objects.annotate(earliest_license_date=Min('driverlicense__issue_date')).order_by('earliest_license_date').distinct() for owner in owners_sorted_by_license_date: ... print(f\"{owner}: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e {owner.earliest_license_date}\") ... ``` \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-01-01 \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-02-15 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-03-20 \u0421\u043c\u0438\u0440\u043d\u043e\u0432\u0430 \u041c\u0430\u0440\u0438\u044f: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-04-10 \u041a\u043e\u0437\u043b\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-05-25 \u041d\u0438\u043a\u043e\u043b\u0430\u0435\u0432 \u041d\u0438\u043a\u043e\u043b\u0430\u0439: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-06-30 \u0422\u0438\u0445\u043e\u043d\u043e\u0432\u0430 \u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0430: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-07-05","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c"},{"location":"pw3/#no31","text":"","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u043d\u044f\u0442\u0438\u0435 \u21163.1"},{"location":"pw3/#1","text":"\u0428\u0430\u0433 1: cd C:\\Users\\apce1\\Desktop\\\u0423\u0427\u0415\u0411\u0410\\\u0412\u0435\u0431-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\\ITMO_ICT_WebDevelopment_2023-2024\\students\\\u043a3343d\\practical_works\\Nikiforov_Arsen\\pw3 \u0428\u0430\u0433 2: manage.py shell \u0428\u0430\u0433 3: \u0438\u043c\u043f\u043e\u0440\u0442 from your_app.models import Warrior, Skill, SkillOfWarrior \u0428\u0430\u0433 4: \u043d\u043e\u0432\u044b\u0439 \u0432\u043e\u0438\u043d short_warrior = Warrior(race=\"s\", name=\"\u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432\", level=20) short_warrior.save() \u0428\u0430\u0433 5: \u043d\u043e\u0432\u044b\u0439 \u043d\u0430\u0432\u044b\u043a new_skill = Skill.objects.create(title=\"\u0412\u0437\u043b\u043e\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430\") \u0428\u0430\u0433 6: \u041f\u0440\u0438\u0432\u044f\u0437\u0430\u043b \u043d\u043e\u0432\u044b\u0439 \u043d\u0430\u0432\u044b\u043a \u043a \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u043c\u0443 \u0432\u043e\u0438\u043d\u0443 skill_related = SkillOfWarrior.objects.create(skill=new_skill, warrior=short_warrior, level=15) \u0428\u0430\u0433 7: \u0412\u044b\u0432\u043e\u0434 \u0438\u043d\u0444\u044b from myapp.models import Warrior warriors = Warrior.objects.all() for warrior in warriors: print(warrior.name, warrior.race, warrior.level) \u0442\u0435\u043e\u0440\u0438\u044f: SkillOfWarrior.objects.create: \u042d\u0442\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 SkillOfWarrior. SkillOfWarrior.objects - \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 SkillOfWarrior. \u041c\u0435\u0442\u043e\u0434 create \u0441\u043e\u0437\u0434\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445. skill=new_skill: \u042d\u0442\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044e skill \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 Skill. \u041c\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u043e\u0432\u044b\u0439 \u043d\u0430\u0432\u044b\u043a (new_skill) \u0438 \u0442\u0435\u043f\u0435\u0440\u044c \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0435\u0433\u043e \u0441 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c SkillOfWarrior. warrior=short_warrior: \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c\u0443, \u044d\u0442\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044e warrior \u043e\u0431\u044a\u0435\u043a\u0442\u0430 short_warrior. \u041c\u044b \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0441 \u0432\u043e\u0438\u043d\u043e\u043c (short_warrior). level=15: \u042d\u0442\u043e \u043f\u0440\u0438\u0441\u0432\u043e\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044e level \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f 15. \u041c\u044b \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043d\u0430\u0432\u044b\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430. \u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043c\u043e\u0434\u0435\u043b\u0438 SkillOfWarrior, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043d\u0430\u0432\u044b\u043a (new_skill) \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432\u043e\u0438\u043d\u043e\u043c (short_warrior) \u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043d\u0430\u0432\u044b\u043a\u0430 (level=15). \u041f\u0440\u0438\u043c\u0435\u0440: >>> short_warrior = Warrior(race=\"s\", name=\"\u0410\u0440\u0441\u0435\u043d \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432\", level=100) >>> short_warrior.save() >>> new_skill = Skill.objects.create(title=\"\u0412\u0437\u043b\u043e\u043c \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0435\u043d\u0442\u0430\u0433\u043e\u043d\u0430\") >>> skill_related = SkillOfWarrior.objects.create(skill=new_skill, warrior=short_warrior, level=800) >>> from myapp.models import Warrior >>> warriors = Warrior.objects.all() >>> for warrior in warriors: ... print(warrior.name, warrior.race, warrior.level) ... \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432 s 20 \u0410\u0440\u0441\u0435\u043d \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 s 100 >>> tall_warrior = Warrior(race=\"t\", name=\"\u0410\u0440\u0442\u0443\u0440 \u041f\u0438\u0440\u043e\u0436\u043a\u043e\u0432\", level=1000) >>> tall_warrior.save() >>> skill_related = SkillOfWarrior.objects.create(skill=new_skill, warrior=short_warrior, level=1800) >>> warriors = Warrior.objects.all() >>> for warrior in warriors: ... print(warrior.name, warrior.race, warrior.level) ... \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432 s 20 \u0410\u0440\u0441\u0435\u043d \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 s 100 \u0410\u0440\u0442\u0443\u0440 \u041f\u0438\u0440\u043e\u0436\u043a\u043e\u0432 t 1000","title":"\u0417\u0430\u0434\u0430\u0447\u0430 1"},{"location":"pw3/#2","text":"\u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 C:\\Users\\apce1\\Desktop\\\u0423\u0427\u0415\u0411\u0410\\\u0412\u0435\u0431-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\\ITMO_ICT_WebDevelopment_2023-2024\\students\\\u043a3343d\\practical_works\\Nikiforov_Arsen\\pw3\\myproject>python manage.py shell Python 3.12.0 (tags/v3.12.0:0fb18b0, Oct 2 2023, 13:03:39) [MSC v.1935 64 bit (AMD64)] on win32 Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. (InteractiveConsole) >>> from myapp.models import Warrior \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u0441\u0435\u0445 \u0432\u043e\u0438\u043d\u043e\u0432: >>> warriors = Warrior.objects.all() >>> print(warriors) <QuerySet [<Warrior: Warrior object (1)>, <Warrior: Warrior object (2)>, <Warrior: Warrior object (3)>]> \u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e \u0443\u0440\u043e\u0432\u043d\u044e 20: >>> warriors_level_20 = Warrior.objects.filter(level=20) >>> print(warriors_level_20) <QuerySet [<Warrior: Warrior object (1)>]> \u0414\u043e\u0441\u0442\u0443\u043f \u043a \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u0432\u043e\u0438\u043d\u0443 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438: >>> first_warrior = warriors_level_20.first() >>> print(first_warrior) Warrior object (1) >>> print(first_warrior.name) \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 get(): \u044d\u0442\u0430 \u0448\u0442\u0443\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430 >>> specific_warrior = Warrior.objects.get(level=20, name=\"\u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432\") >>> print(specific_warrior) Warrior object (1) \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c. >>> warriors_not_level_20 = Warrior.objects.exclude(level=20) >>> print(warriors_not_level_20) <QuerySet [<Warrior: Warrior object (2)>, <Warrior: Warrior object (3)>]> >>> Queryset \u0438 \u0446\u0435\u043f\u043e\u0447\u043a\u0438 \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432 >>> from myapp.models import Warrior >>> # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u043e\u0433\u043e \u0432\u043e\u0438\u043d\u0430 \"\u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0423\u0440\u0431\u0430\u043d\" >>> powerful_warrior = Warrior.objects.create(name=\"\u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0423\u0440\u0431\u0430\u043d\", level=11, race=\"d\") >>> # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043d\u043e\u0432\u043e\u0433\u043e \u0432\u043e\u0438\u043d\u0430 \"\u041d\u0438\u043a\u0438\u0442\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u0441\u043a\u0438\u0439\" >>> cute_warrior = Warrior.objects.create(name=\"\u041d\u0438\u043a\u0438\u0442\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u0441\u043a\u0438\u0439\", level=15, race=\"s\") >>> from myapp.models import Warrior >>> # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0446\u0435\u043f\u043e\u0447\u043a\u0443 \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432 >>> filtered_warriors = Warrior.objects.exclude(level=20).filter(race=\"s\") >>> for warrior in filtered_warriors: ... print(warrior) ... Warrior object (2) Warrior object (5) \u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u043c\u044b\u0435 \u043a \u043f\u043e\u043b\u044f\u043c \u0438 \u043f\u043e\u0438\u0441\u043a \u0447\u0435\u0440\u0435\u0437 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f >>> # \u041f\u0440\u0438\u0432\u044f\u0436\u0435\u043c \u0443\u043c\u0435\u043d\u0438\u044f \u043a \u0432\u043e\u0438\u043d\u0430\u043c \u0447\u0435\u0440\u0435\u0437 \u043c\u043e\u0434\u0435\u043b\u044c SkillOfWarrior >>> SkillOfWarrior.objects.create(warrior=powerful_warrior, skill=gaming, level=0) <SkillOfWarrior: SkillOfWarrior object (4)> >>> SkillOfWarrior.objects.create(warrior=cute_warrior, skill=gaming, level=0) <SkillOfWarrior: SkillOfWarrior object (5)> >>> from myapp.models import Skill, Warrior, SkillOfWarrior >>> >>> # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0443\u043c\u0435\u043d\u0438\u0435 >>> gaming = Skill.objects.create(title=\"\u0423\u043c\u0435\u043d\u0438\u0435 \u0438\u0433\u0440\u0430\u0442\u044c \u0432\u043e \u0432\u0441\u0435 \u043f\u043e\u0434\u0440\u044f\u0434\") >>> >>> # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0443\u043c\u0435\u043d\u0438\u0435 \u043a \u0432\u043e\u0438\u043d\u0430\u043c >>> powerful_warrior = Warrior.objects.create(name=\"\u041c\u043e\u0433\u0443\u0447\u0438\u0439 \u0432\u043e\u0438\u043d\", level=20) >>> cute_warrior = Warrior.objects.create(name=\"\u041c\u0438\u043b\u044b\u0439 \u0432\u043e\u0438\u043d\", level=15) >>> >>> powerful_skill = SkillOfWarrior.objects.create(skill=gaming, warrior=powerful_warrior, level=22) >>> cute_skill = SkillOfWarrior.objects.create(skill=gaming, warrior=cute_warrior, level=12) >>> >>> >>> # \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u043e\u0438\u043d\u043e\u0432, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u043c\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \"\u0414\u043c\u0438\u0442\u0440\u0438\u0439\" >>> Warrior.objects.filter(name__contains=\"\u0414\u043c\u0438\u0442\u0440\u0438\u0439\") <QuerySet [<Warrior: Warrior object (4)>]> >>> >>> # \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u043e\u0438\u043d\u043e\u0432 \u0441 \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u044b\u043c 20 >>> Warrior.objects.filter(level__gte=20) <QuerySet [<Warrior: Warrior object (1)>, <Warrior: Warrior object (2)>, <Warrior: Warrior object (3)>, <Warrior: Warrior object (6)>]> >>> >>> # \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432\u043e\u0438\u043d\u043e\u0432, \u043e\u0431\u043b\u0430\u0434\u0430\u044e\u0449\u0438\u0445 \u0443\u043c\u0435\u043d\u0438\u0435\u043c \"\u0423\u043c\u0435\u043d\u0438\u0435 \u0438\u0433\u0440\u0430\u0442\u044c \u0432\u043e \u0432\u0441\u0435 \u043f\u043e\u0434\u0440\u044f\u0434\" \u0438 \u0438\u043c\u0435\u044e\u0449\u0438\u0445 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0443\u043c\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435 13 >>> Warrior.objects.filter(skillofwarrior__level__gt=13, skillofwarrior__skill__title__icontains=\"\u0438\u0433\u0440\u0430\u0442\u044c\") <QuerySet [<Warrior: Warrior object (6)>]>","title":"\u0417\u0430\u0434\u0430\u0447\u0430 2"},{"location":"pw3/#3","text":"\u0410\u0433\u0440\u0435\u0433\u0430\u0446\u0438\u044f: \u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c, \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c Warrior \u0441 \u043f\u043e\u043b\u0435\u043c level, \u0438 \u0445\u043e\u0442\u0438\u043c \u043d\u0430\u0439\u0442\u0438 \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0432\u043e\u0438\u043d\u043e\u0432. >>> from django.db.models import Avg >>> from myapp.models import Warrior >>> >>> # \u0420\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0441\u0440\u0435\u0434\u043d\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0432\u043e\u0438\u043d\u043e\u0432 >>> average_level = Warrior.objects.aggregate(Avg(\"level\")) >>> >>> print(\"\u0421\u0440\u0435\u0434\u043d\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0432\u043e\u0438\u043d\u043e\u0432:\", average_level['level__avg']) \u0421\u0440\u0435\u0434\u043d\u0438\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0432\u043e\u0438\u043d\u043e\u0432: 168.71428571428572 \u0410\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u044f: \u0422\u0435\u043f\u0435\u0440\u044c \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u043e\u0436\u0438\u043c, \u0447\u0442\u043e \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u0438 Warrior, Skill \u0438 \u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 ManyToManyField. \u041c\u044b \u0445\u043e\u0442\u0438\u043c \u0443\u0437\u043d\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u043c\u0435\u043d\u0438\u0439 \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0438\u043d\u0430. >>> from myapp.models import Warrior >>> # \u0410\u043d\u043d\u043e\u0442\u0438\u0440\u0443\u0435\u043c \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0438\u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0435\u0433\u043e \u0443\u043c\u0435\u043d\u0438\u0439 >>> annotated_warriors = Warrior.objects.annotate(skill_count=models.Count('warrior_skill')) Traceback (most recent call last): File \"<console>\", line 1, in <module> NameError: name 'models' is not defined >>> >>> >>> from myapp.models import Warrior >>> from django.db.models import Count >>> # \u0410\u043d\u043d\u043e\u0442\u0438\u0440\u0443\u0435\u043c \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0438\u043d\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0435\u0433\u043e \u0443\u043c\u0435\u043d\u0438\u0439 >>> annotated_warriors = Warrior.objects.annotate(skill_count=Count('warrior_skill')) >>> >>> for warrior in annotated_warriors: ... print(f\"\u0412\u043e\u0438\u043d {warrior.name} \u0438\u043c\u0435\u0435\u0442 {warrior.skill_count} \u0443\u043c\u0435\u043d\u0438\u0439.\") ... \u0412\u043e\u0438\u043d \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432 \u0438\u043c\u0435\u0435\u0442 1 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u0410\u0440\u0441\u0435\u043d \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 \u0438\u043c\u0435\u0435\u0442 2 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u0410\u0440\u0442\u0443\u0440 \u041f\u0438\u0440\u043e\u0436\u043a\u043e\u0432 \u0438\u043c\u0435\u0435\u0442 0 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0423\u0440\u0431\u0430\u043d \u0438\u043c\u0435\u0435\u0442 1 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u041d\u0438\u043a\u0438\u0442\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u0441\u043a\u0438\u0439 \u0438\u043c\u0435\u0435\u0442 1 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u041c\u043e\u0433\u0443\u0447\u0438\u0439 \u0432\u043e\u0438\u043d \u0438\u043c\u0435\u0435\u0442 1 \u0443\u043c\u0435\u043d\u0438\u0439. \u0412\u043e\u0438\u043d \u041c\u0438\u043b\u044b\u0439 \u0432\u043e\u0438\u043d \u0438\u043c\u0435\u0435\u0442 1 \u0443\u043c\u0435\u043d\u0438\u0439. \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 \u0441 .values() \u0438 \u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0432\u0430\u043d\u0438\u0435: \u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c, \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043f\u043e\u043b\u0435 race \u0432 \u043c\u043e\u0434\u0435\u043b\u0438 Warrior, \u0438 \u041c\u044b \u0445\u043e\u0442\u0438\u043c \u0443\u0437\u043d\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u0440\u0430\u0441. >>> from myapp.models import Warrior >>> from django.db.models import Count >>> # \u0413\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0440\u0430\u0441\u0435 \u0438 \u043f\u043e\u0434\u0441\u0447\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u043e\u0438\u043d\u043e\u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0440\u0430\u0441\u044b >>> grouped_warriors = Warrior.objects.values('race').annotate(warrior_count=Count('id')).order_by('race') >>> >>> # \u0412\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 >>> for group in grouped_warriors: ... print(f\"\u0420\u0430\u0441\u0430: {group['race']}, \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432: {group['warrior_count']}\") ... \u0420\u0430\u0441\u0430: , \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432: 2 \u0420\u0430\u0441\u0430: d, \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432: 1 \u0420\u0430\u0441\u0430: s, \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432: 3 \u0420\u0430\u0441\u0430: t, \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0438\u043d\u043e\u0432: 1 \u0412 \u044d\u0442\u043e\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 .values(\"race\") \u0434\u043b\u044f \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438 \u043f\u043e \u043f\u043e\u043b\u044e race \u0438 \u043c\u0435\u0442\u043e\u0434 annotate \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0432\u043e\u0438\u043d\u043e\u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0440\u0430\u0441\u044b. \u0423\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0432\u0430\u043d\u0438\u0435: \u0423\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u043c \u0432\u043e\u0438\u043d\u043e\u0432 \u043f\u043e \u0438\u0445 \u0443\u0440\u043e\u0432\u043d\u044e. >>> # \u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f .order_by() \u0434\u043b\u044f \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u0432\u043e\u0438\u043d\u043e\u0432 \u043f\u043e \u0443\u0440\u043e\u0432\u043d\u044e >>> sorted_warriors = Warrior.objects.order_by(\"level\") >>> >>> for warrior in sorted_warriors: ... print(f\"{warrior.name} - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: {warrior.level}\") ... \u0414\u043c\u0438\u0442\u0440\u0438\u0439 \u0423\u0440\u0431\u0430\u043d - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 11 \u041d\u0438\u043a\u0438\u0442\u0430 \u041c\u0438\u0445\u0430\u0439\u043b\u043e\u0432\u0441\u043a\u0438\u0439 - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 15 \u041c\u0438\u043b\u044b\u0439 \u0432\u043e\u0438\u043d - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 15 \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041b\u0435\u043e\u043d\u0442\u044c\u0435\u0432 - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 20 \u041c\u043e\u0433\u0443\u0447\u0438\u0439 \u0432\u043e\u0438\u043d - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 20 \u0410\u0440\u0441\u0435\u043d \u041d\u0438\u043a\u0438\u0444\u043e\u0440\u043e\u0432 - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 100 \u0410\u0440\u0442\u0443\u0440 \u041f\u0438\u0440\u043e\u0436\u043a\u043e\u0432 - \u0423\u0440\u043e\u0432\u0435\u043d\u044c: 1000 \u0417\u0434\u0435\u0441\u044c \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 order_by(\"level\"), \u0447\u0442\u043e\u0431\u044b \u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0442\u044c \u0432\u043e\u0438\u043d\u043e\u0432 \u043f\u043e \u0438\u0445 \u0443\u0440\u043e\u0432\u043d\u044e.","title":"\u0417\u0430\u0434\u0430\u0447\u0430 3"},{"location":"pw3/#1_1","text":">>> from myapp.models import Owner >>> owner1 = Owner.objects.create(last_name=\"\u0418\u0432\u0430\u043d\u043e\u0432\", first_name=\"\u0418\u0432\u0430\u043d\", birth_date=\"1990-01-01\") >>> owner2 = Owner.objects.create(last_name=\"\u041f\u0435\u0442\u0440\u043e\u0432\", first_name=\"\u041f\u0435\u0442\u0440\", birth_date=\"1995-03-15\") >>> owner3 = Owner.objects.create(last_name=\"\u0421\u0438\u0434\u043e\u0440\u043e\u0432\", first_name=\"\u0421\u0438\u0434\u043e\u0440\", birth_date=\"1985-07-20\") >>> owner4 = Owner.objects.create(last_name=\"\u0421\u043c\u0438\u0440\u043d\u043e\u0432\u0430\", first_name=\"\u041c\u0430\u0440\u0438\u044f\", birth_date=\"1988-11-30\") >>> owner5 = Owner.objects.create(last_name=\"\u041a\u043e\u0437\u043b\u043e\u0432\", first_name=\"\u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440\", birth_date=\"1992-06-05\") >>> owner6 = Owner.objects.create(last_name=\"\u041d\u0438\u043a\u043e\u043b\u0430\u0435\u0432\", first_name=\"\u041d\u0438\u043a\u043e\u043b\u0430\u0439\", birth_date=\"1987-09-10\") >>> owner7 = Owner.objects.create(last_name=\"\u0422\u0438\u0445\u043e\u043d\u043e\u0432\u0430\", first_name=\"\u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0430\", birth_date=\"1993-04-25\") >>> >>> from myapp.models import Car >>> >>> car1 = Car.objects.create(license_plate=\"ABC123\", brand=\"Toyota\", model=\"Camry\", color=\"Blue\") >>> car2 = Car.objects.create(license_plate=\"XYZ789\", brand=\"Honda\", model=\"Civic\", color=\"Red\") >>> car3 = Car.objects.create(license_plate=\"DEF456\", brand=\"Ford\", model=\"Focus\", color=\"Green\") >>> car4 = Car.objects.create(license_plate=\"GHI789\", brand=\"Chevrolet\", model=\"Malibu\", color=\"Silver\") >>> car5 = Car.objects.create(license_plate=\"JKL012\", brand=\"Nissan\", model=\"Altima\", color=\"Black\") >>> car6 = Car.objects.create(license_plate=\"MNO345\", brand=\"Volkswagen\", model=\"Jetta\", color=\"White\") from myapp.models import Ownership, Car # \u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 1 ownership1 = Ownership.objects.create(owner=owner1, car=car1, start_date=\"2022-01-01\", end_date=\"2023-01-01\") ownership2 = Ownership.objects.create(owner=owner1, car=car2, start_date=\"2022-02-15\", end_date=\"2023-02-15\") ownership3 = Ownership.objects.create(owner=owner1, car=car3, start_date=\"2022-03-20\", end_date=\"2023-03-20\") # \u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 2 ownership4 = Ownership.objects.create(owner=owner2, car=car2, start_date=\"2022-04-10\", end_date=\"2023-04-10\") ownership5 = Ownership.objects.create(owner=owner2, car=car4, start_date=\"2022-05-25\", end_date=\"2023-05-25\") # \u0410\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 3 ownership6 = Ownership.objects.create(owner=owner3, car=car1, start_date=\"2022-06-30\", end_date=\"2023-06-30\") ownership7 = Ownership.objects.create(owner=owner3, car=car3, start_date=\"2022-07-05\", end_date=\"2023-07-05\") ownership8 = Ownership.objects.create(owner=owner3, car=car5, start_date=\"2022-08-10\", end_date=\"2023-08-10\") # \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432: from myapp.models import Owner, Car, DriverLicense, Ownership >>> # \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u0445 >>> owners = Owner.objects.all() >>> for owner in owners: ... print(f\"Owner: {owner.first_name} {owner.last_name}, Birth Date: {owner.birth_date}\") ... Owner: \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432, Birth Date: 1990-01-01 Owner: \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432, Birth Date: 1995-03-15 Owner: \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432, Birth Date: 1985-07-20 Owner: \u041c\u0430\u0440\u0438\u044f \u0421\u043c\u0438\u0440\u043d\u043e\u0432\u0430, Birth Date: 1988-11-30 Owner: \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041a\u043e\u0437\u043b\u043e\u0432, Birth Date: 1992-06-05 Owner: \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041d\u0438\u043a\u043e\u043b\u0430\u0435\u0432, Birth Date: 1987-09-10 Owner: \u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0430 \u0422\u0438\u0445\u043e\u043d\u043e\u0432\u0430, Birth Date: 1993-04-25 >>> # \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u0445 >>> cars = Car.objects.all() >>> for car in cars: ... print(f\"Car: {car.brand} {car.model}, License Plate: {car.license_plate}, Color: {car.color}\") ... Car: Toyota Camry, License Plate: ABC123, Color: Blue Car: Honda Civic, License Plate: XYZ789, Color: Red Car: Ford Focus, License Plate: DEF456, Color: Green Car: Chevrolet Malibu, License Plate: GHI789, Color: Silver Car: Nissan Altima, License Plate: JKL012, Color: Black Car: Volkswagen Jetta, License Plate: MNO345, Color: White \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f (\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435) >>> from myapp.models import DriverLicense, Owner >>> >>> dl1 = DriverLicense.objects.create(owner=owner1, license_number=\"12345\", license_type=\"A\", issue_date=\"2022-01-01\") >>> dl2 = DriverLicense.objects.create(owner=owner2, license_number=\"67890\", license_type=\"B\", issue_date=\"2022-02-15\") >>> dl3 = DriverLicense.objects.create(owner=owner3, license_number=\"54321\", license_type=\"C\", issue_date=\"2022-03-20\") >>> dl4 = DriverLicense.objects.create(owner=owner4, license_number=\"98765\", license_type=\"B\", issue_date=\"2022-04-10\") >>> dl5 = DriverLicense.objects.create(owner=owner5, license_number=\"13579\", license_type=\"A\", issue_date=\"2022-05-25\") >>> dl6 = DriverLicense.objects.create(owner=owner6, license_number=\"24680\", license_type=\"C\", issue_date=\"2022-06-30\") >>> dl7 = DriverLicense.objects.create(owner=owner7, license_number=\"11223\", license_type=\"A\", issue_date=\"2022-07-05\") >>> \u0412\u044b\u0432\u043e\u0434 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0439 >>> driver_licenses = DriverLicense.objects.all() >>> for dl in driver_licenses: ... print(f\"Driver's License: {dl.owner.first_name} {dl.owner.last_name}, Number: {dl.license_number}, Type: {dl.license_type}\") ... Driver's License: \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432, Number: 12345, Type: A Driver's License: \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432, Number: 67890, Type: B Driver's License: \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432, Number: 54321, Type: C Driver's License: \u041c\u0430\u0440\u0438\u044f \u0421\u043c\u0438\u0440\u043d\u043e\u0432\u0430, Number: 98765, Type: B Driver's License: \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440 \u041a\u043e\u0437\u043b\u043e\u0432, Number: 13579, Type: A Driver's License: \u041d\u0438\u043a\u043e\u043b\u0430\u0439 \u041d\u0438\u043a\u043e\u043b\u0430\u0435\u0432, Number: 24680, Type: C Driver's License: \u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0430 \u0422\u0438\u0445\u043e\u043d\u043e\u0432\u0430, Number: 11223, Type: A >>> >>> # \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f\u0445 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f\u043c\u0438 >>> ownerships = Ownership.objects.all() >>> for ownership in ownerships: ... print(f\"{ownership.owner.first_name} {ownership.owner.last_name} owns {ownership.car.brand} {ownership.car.model} from {ownership.start_date} to {ownership.end_date}\") ... \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Toyota Camry from 2022-01-01 to 2023-01-01 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Honda Civic from 2022-02-15 to 2023-02-15 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Ford Focus from 2022-03-20 to 2023-03-20 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Honda Civic from 2022-04-10 to 2023-04-10 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Chevrolet Malibu from 2022-05-25 to 2023-05-25 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Toyota Camry from 2022-06-30 to 2023-06-30 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Ford Focus from 2022-07-05 to 2023-07-05 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Nissan Altima from 2022-08-10 to 2023-08-10 \u0447\u0435\u0440\u0435\u0437 \u043c\u0435\u0442\u043e\u0434 add() >>> from myapp.models import Ownership >>> >>> # \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0434\u0430\u0442\u044b \u043d\u0430\u0447\u0430\u043b\u0430 \u0438 \u043e\u043a\u043e\u043d\u0447\u0430\u043d\u0438\u044f \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f >>> ownership1 = Ownership.objects.create(owner=owner1, car=car1, start_date=\"2022-01-01\", end_date=\"2022-05-01\") >>> ownership2 = Ownership.objects.create(owner=owner1, car=car2, start_date=\"2022-01-01\", end_date=\"2022-06-15\") >>> ownership3 = Ownership.objects.create(owner=owner2, car=car3, start_date=\"2022-02-15\", end_date=\"2022-08-01\") >>> ownership4 = Ownership.objects.create(owner=owner3, car=car1, start_date=\"2022-03-20\", end_date=\"2022-10-30\") >>> ownership5 = Ownership.objects.create(owner=owner3, car=car3, start_date=\"2022-03-20\", end_date=\"2022-09-15\") >>> # \u041f\u0440\u043e\u0431\u0443\u0435\u043c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430\u043c \u0447\u0435\u0440\u0435\u0437 \u043c\u0435\u0442\u043e\u0434 .add() >>> owner1.cars.add(car1, car2) >>> owner2.cars.add(car3) >>> owner3.cars.add(car1, car3) >>> for owner in latest_owners: ... print(f\"\u0412\u043b\u0430\u0434\u0435\u043b\u0435\u0446: {owner.last_name}, \u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f: {owner.birth_date}\") ... \u0412\u043b\u0430\u0434\u0435\u043b\u0435\u0446: \u0421\u0438\u0434\u043e\u0440\u043e\u0432, \u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f: 1985-07-20 \u0412\u043b\u0430\u0434\u0435\u043b\u0435\u0446: \u041f\u0435\u0442\u0440\u043e\u0432, \u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f: 1995-03-15 \u0412\u043b\u0430\u0434\u0435\u043b\u0435\u0446: \u0418\u0432\u0430\u043d\u043e\u0432, \u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f: 1990-01-01 >>> from myapp.models import DriverLicense >>> # \u0412\u044b\u0432\u043e\u0434 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0445 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0439 >>> latest_licenses = DriverLicense.objects.order_by('-id')[:10] >>> for license in latest_licenses: ... print(f\"\u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: {license.license_number}, \u0422\u0438\u043f: {license.license_type}\") ... \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 11223, \u0422\u0438\u043f: A \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 24680, \u0422\u0438\u043f: C \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 13579, \u0422\u0438\u043f: A \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 98765, \u0422\u0438\u043f: B \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 54321, \u0422\u0438\u043f: C \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 67890, \u0422\u0438\u043f: B \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: 12345, \u0422\u0438\u043f: A","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"pw3/#2_1","text":"cd C:\\Users\\apce1\\Desktop\\\u0423\u0427\u0415\u0411\u0410\\\u0412\u0435\u0431-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\\ITMO_ICT_WebDevelopment_2023-2024\\students\\\u043a3343d\\practical_works\\Nikiforov_Arsen\\pw3\\myproject2 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c relate_name related_name='ownerships' \u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \"Toyota\": >>> from myapp.models import Car >>> >>> # \u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0432\u044b\u0432\u043e\u0434 \u0432\u0441\u0435\u0445 \u043c\u0430\u0448\u0438\u043d \u043c\u0430\u0440\u043a\u0438 Toyota >>> toyota_cars = Car.objects.filter(brand=\"Toyota\") >>> for car in toyota_cars: ... print(f\"Car: {car.brand} {car.model}, License Plate: {car.license_plate}, Color: {car.color}\") ... Car: Toyota Camry, License Plate: ABC123, Color: Blue Car: Toyota Camry, License Plate: ABC123, Color: Blue Car: Toyota Camry, License Plate: ABC123, Color: Blue >>> \u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043f\u043e\u0438\u0441\u043a \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \"\u0421\u0438\u0434\u043e\u0440\" (\u0412\u043d\u0430\u0447\u0430\u043b\u0435 \u0445\u043e\u0442\u0435\u043b \u043f\u043e\u0438\u0441\u043a\u0430\u0442\u044c \u041e\u043b\u0435\u0433\u043e\u0432, \u043d\u043e \u0438\u0445 \u043d\u0435 \u0431\u044b\u043b\u043e) ``` oleg_drivers = DriverLicense.objects.filter(owner__first_name=\"\u0421\u0438\u0434\u043e\u0440\") for driver in oleg_drivers: ... print(f\"Driver's License: {driver.owner.first_name} {driver.owner.last_name}, Number: {driver.license_number}, Type: {driver.license_type}\") ... Driver's License: \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432, Number: 54321, Type: C \u0412\u043e\u0437\u044c\u043c\u0435\u043c \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430, \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0435\u0433\u043e id \u0438 \u0437\u0430\u0442\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f: import random","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"pw3/#_1","text":"random_owner = random.choice(Owner.objects.all())","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430"},{"location":"pw3/#id","text":"print(f\"Owner ID: {random_owner.id}\") Owner ID: 3","title":"\u0412\u044b\u0432\u043e\u0434 id \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430"},{"location":"pw3/#id_1","text":"driver_license = DriverLicense.objects.get(owner=random_owner) print(f\"Driver's License: {driver_license.owner.first_name} {driver_license.owner.last_name}, Number: {driver_license.license_number}, Type: {driver_license.license_type}\") Driver's License: \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432, Number: 54321, Type: C \u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430): red_car_owners = Owner.objects.filter(cars__color=\"Red\") for owner in red_car_owners: ... print(f\"Owner: {owner.first_name} {owner.last_name}, Birth Date: {owner.birth_date}\") ... Owner: \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432, Birth Date: 1990-01-01 Owner: \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432, Birth Date: 1995-03-15 Owner: \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432, Birth Date: 1990-01-01 Owner: \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432, Birth Date: 1990-01-01 \u041d\u0430\u0439\u0434\u0435\u043c \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434 \u043f\u043e\u0441\u043b\u0435 2010): from myapp.models import Ownership year_start = 2010 ownership_2010 = Ownership.objects.filter(start_date__year__gte=year_start) for ownership in ownership_2010: ... print(f\"{ownership.owner.first_name} {ownership.owner.last_name} owns {ownership.car.brand} {ownership.car.model} from {ownership.start_date} to {ownership.end_date}\") ... \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Toyota Camry from 2022-01-01 to 2023-01-01 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Honda Civic from 2022-02-15 to 2023-02-15 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Ford Focus from 2022-03-20 to 2023-03-20 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Honda Civic from 2022-04-10 to 2023-04-10 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Chevrolet Malibu from 2022-05-25 to 2023-05-25 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Toyota Camry from 2022-06-30 to 2023-06-30 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Ford Focus from 2022-07-05 to 2023-07-05 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Nissan Altima from 2022-08-10 to 2023-08-10 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Toyota Camry from 2022-01-01 to 2022-12-31 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Honda Civic from 2022-02-01 to 2022-12-31 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Ford Focus from 2022-03-01 to 2022-12-31 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Toyota Camry from 2022-04-01 to 2022-12-31 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Ford Focus from 2022-05-01 to 2022-12-31 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Toyota Camry from 2022-01-01 to 2022-05-01 \u0418\u0432\u0430\u043d \u0418\u0432\u0430\u043d\u043e\u0432 owns Honda Civic from 2022-01-01 to 2022-06-15 \u041f\u0435\u0442\u0440 \u041f\u0435\u0442\u0440\u043e\u0432 owns Ford Focus from 2022-02-15 to 2022-08-01 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Toyota Camry from 2022-03-20 to 2022-10-30 \u0421\u0438\u0434\u043e\u0440 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 owns Ford Focus from 2022-03-20 to 2022-09-15 >>> #\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3 #\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3: \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b c \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f from myapp.models import DriverLicense oldest_license = DriverLicense.objects.order_by('issue_date').first() print(\"\u0421\u0430\u043c\u043e\u0435 \u0441\u0442\u0430\u0440\u0448\u0435\u0435 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e:\", oldest_license.issue_date) \u0421\u0430\u043c\u043e\u0435 \u0441\u0442\u0430\u0440\u0448\u0435\u0435 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e: 2022-01-01 \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435 from myapp.models import Ownership, Car latest_car_ownership = Ownership.objects.filter(car__isnull=False).order_by('-end_date').first() print(\"\u0421\u0430\u043c\u0430\u044f \u043f\u043e\u0437\u0434\u043d\u044f\u044f \u0434\u0430\u0442\u0430 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439:\", latest_car_ownership.end_date) \u0421\u0430\u043c\u0430\u044f \u043f\u043e\u0437\u0434\u043d\u044f\u044f \u0434\u0430\u0442\u0430 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439: 2023-08-10 \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u043f\u043e id \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430"},{"location":"pw3/#_2","text":"owners_car_count = Owner.objects.annotate(car_count=Count('cars')) for owner in owners_car_count: ... print(f\"{owner}: {owner.car_count} \u043c\u0430\u0448\u0438\u043d(\u044b)\") ... \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: 5 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: 3 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: 5 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0421\u043c\u0438\u0440\u043d\u043e\u0432\u0430 \u041c\u0430\u0440\u0438\u044f: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041a\u043e\u0437\u043b\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041d\u0438\u043a\u043e\u043b\u0430\u0435\u0432 \u041d\u0438\u043a\u043e\u043b\u0430\u0439: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0422\u0438\u0445\u043e\u043d\u043e\u0432\u0430 \u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0430: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: 0 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: 2 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: 1 \u043c\u0430\u0448\u0438\u043d(\u044b) \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: 2 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438","title":"\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f"},{"location":"pw3/#_3","text":"car_brand_count = Car.objects.values('brand').annotate(brand_count=Count('brand')) for car in car_brand_count: ... print(f\"{car['brand']}: {car['brand_count']} \u043c\u0430\u0448\u0438\u043d(\u044b)\") ... Chevrolet: 1 \u043c\u0430\u0448\u0438\u043d(\u044b) Ford: 3 \u043c\u0430\u0448\u0438\u043d(\u044b) Honda: 3 \u043c\u0430\u0448\u0438\u043d(\u044b) Nissan: 1 \u043c\u0430\u0448\u0438\u043d(\u044b) Toyota: 3 \u043c\u0430\u0448\u0438\u043d(\u044b) Volkswagen: 1 \u043c\u0430\u0448\u0438\u043d(\u044b) \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f (\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\u0441\u044c \u043c\u0435\u0442\u043e\u0434\u043e\u043c .distinct() from django.db.models import Count, Min owners_sorted_by_license_date = Owner.objects.annotate(earliest_license_date=Min('driverlicense__issue_date')).order_by('earliest_license_date').distinct() for owner in owners_sorted_by_license_date: ... print(f\"{owner}: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e {owner.earliest_license_date}\") ... ``` \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e None \u0418\u0432\u0430\u043d\u043e\u0432 \u0418\u0432\u0430\u043d: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-01-01 \u041f\u0435\u0442\u0440\u043e\u0432 \u041f\u0435\u0442\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-02-15 \u0421\u0438\u0434\u043e\u0440\u043e\u0432 \u0421\u0438\u0434\u043e\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-03-20 \u0421\u043c\u0438\u0440\u043d\u043e\u0432\u0430 \u041c\u0430\u0440\u0438\u044f: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-04-10 \u041a\u043e\u0437\u043b\u043e\u0432 \u0410\u043b\u0435\u043a\u0441\u0430\u043d\u0434\u0440: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-05-25 \u041d\u0438\u043a\u043e\u043b\u0430\u0435\u0432 \u041d\u0438\u043a\u043e\u043b\u0430\u0439: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-06-30 \u0422\u0438\u0445\u043e\u043d\u043e\u0432\u0430 \u0415\u043a\u0430\u0442\u0435\u0440\u0438\u043d\u0430: \u0441\u0430\u043c\u043e\u0435 \u0440\u0430\u043d\u043d\u0435\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0432\u044b\u0434\u0430\u043d\u043e 2022-07-05","title":"\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438"}]}
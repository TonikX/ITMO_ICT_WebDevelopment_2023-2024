# Generated by Django 4.2.7 on 2023-11-26 10:33

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Car",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.CharField(max_length=15)),
                ("brand", models.CharField(max_length=20)),
                ("car_model", models.CharField(max_length=20)),
                ("color", models.CharField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Driver",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("mail", models.EmailField(max_length=254, unique=True)),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                ("date_of_birth", models.DateTimeField(null=True)),
                (
                    "passport_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("address", models.CharField(blank=True, max_length=100, null=True)),
                ("nationality", models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Ownership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_beginning", models.DateField()),
                ("date_end", models.DateField()),
                (
                    "car",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="project_first_app.car",
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="project_first_app.driver",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DriverLicence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.CharField(max_length=10)),
                ("licence_type", models.CharField(max_length=10)),
                ("date_of_release", models.DateTimeField()),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="project_first_app.driver",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="driver",
            name="cars",
            field=models.ManyToManyField(
                through="project_first_app.Ownership", to="project_first_app.car"
            ),
        ),
        migrations.AddField(
            model_name="driver",
            name="groups",
            field=models.ManyToManyField(
                related_name="drivers", related_query_name="driver", to="auth.group"
            ),
        ),
        migrations.AddField(
            model_name="driver",
            name="user_permissions",
            field=models.ManyToManyField(
                related_name="drivers",
                related_query_name="driver",
                to="auth.permission",
            ),
        ),
        migrations.AddField(
            model_name="car",
            name="drivers",
            field=models.ManyToManyField(
                through="project_first_app.Ownership", to="project_first_app.driver"
            ),
        ),
    ]

# Generated by Django 4.2.7 on 2023-11-09 21:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import website.models.content_object


class Migration(migrations.Migration):

    dependencies = [
        (
            "website",
            "0005_alter_whatwedo_options_alter_whatwedo_cover_picture_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="PodcastLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        max_length=250, verbose_name="Текст-описание и/или платформа"
                    ),
                ),
                (
                    "external_reference_link",
                    models.URLField(verbose_name="Ссылка на подкаст на платформе"),
                ),
            ],
            options={
                "verbose_name": "Внешняя ссылка на подкаст",
                "verbose_name_plural": "Внешние ссылки на подкаст",
            },
        ),
        migrations.AlterModelOptions(
            name="article",
            options={"verbose_name": "Статья", "verbose_name_plural": "Статьи"},
        ),
        migrations.AlterModelOptions(
            name="banner",
            options={"verbose_name": "Баннер", "verbose_name_plural": "Баннеры"},
        ),
        migrations.AlterModelOptions(
            name="contentobject",
            options={
                "verbose_name": "Базовый объект контента",
                "verbose_name_plural": "Базовые объекты контента",
            },
        ),
        migrations.AlterModelOptions(
            name="favourite",
            options={"verbose_name": "Избранное", "verbose_name_plural": "Избранное"},
        ),
        migrations.AlterModelOptions(
            name="newspaper",
            options={"verbose_name": "Газета", "verbose_name_plural": "Газеты"},
        ),
        migrations.AlterModelOptions(
            name="newtone",
            options={"verbose_name": "Журнал", "verbose_name_plural": "Журналы"},
        ),
        migrations.AlterModelOptions(
            name="participant",
            options={
                "verbose_name": "Участие в создании",
                "verbose_name_plural": "Участие в создании",
            },
        ),
        migrations.AlterModelOptions(
            name="podcast",
            options={"verbose_name": "Подкаст", "verbose_name_plural": "Подкасты"},
        ),
        migrations.AlterModelOptions(
            name="podcastissue",
            options={
                "verbose_name": "Выпуск подкаста",
                "verbose_name_plural": "Выпуски подкаста",
            },
        ),
        migrations.AlterModelOptions(
            name="publication",
            options={
                "verbose_name": 'Публикация "на бумаге"',
                "verbose_name_plural": 'Публикации "на бумаге"',
            },
        ),
        migrations.AlterModelOptions(
            name="role",
            options={"verbose_name": "Роль", "verbose_name_plural": "Роли"},
        ),
        migrations.AlterModelOptions(
            name="rubric",
            options={"verbose_name": "Рубрика", "verbose_name_plural": "Рубрики"},
        ),
        migrations.RemoveConstraint(
            model_name="banner", name="There can only be 6 consequent banners",
        ),
        migrations.AlterField(
            model_name="article",
            name="content",
            field=models.TextField(verbose_name="Содержание"),
        ),
        migrations.AlterField(
            model_name="article",
            name="rubric",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="articles",
                to="website.rubric",
                verbose_name="Рубрика",
            ),
        ),
        migrations.AlterField(
            model_name="banner",
            name="article",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="website.article",
                verbose_name="Статья",
            ),
        ),
        migrations.AlterField(
            model_name="banner",
            name="n_amongst_banners",
            field=models.IntegerField(
                default=1,
                unique=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(6),
                ],
                verbose_name="Номер баннера",
            ),
        ),
        migrations.AlterField(
            model_name="banner",
            name="special_cover_picture",
            field=models.ImageField(
                default="images/alt_image.jpg",
                null=True,
                upload_to="images/banner/",
                verbose_name="Специальная картинка обложки",
            ),
        ),
        migrations.AlterField(
            model_name="contentobject",
            name="cover_picture",
            field=models.ImageField(
                default="images/alt_image.jpg",
                null=True,
                upload_to="images/content_object/",
                verbose_name="Изображение",
            ),
        ),
        migrations.AlterField(
            model_name="contentobject",
            name="datetime_published",
            field=models.DateTimeField(
                default=website.models.content_object.get_curr_time_plus_interval,
                verbose_name="Дата и время публикации",
            ),
        ),
        migrations.AlterField(
            model_name="contentobject",
            name="name",
            field=models.CharField(max_length=250, verbose_name="Название"),
        ),
        migrations.AlterField(
            model_name="contentobject",
            name="release_date",
            field=models.DateField(blank=True, null=True, verbose_name="Дата релиза"),
        ),
        migrations.AlterField(
            model_name="contentobject",
            name="short_description",
            field=models.CharField(
                blank=True, max_length=500, null=True, verbose_name="Краткое описание"
            ),
        ),
        migrations.AlterField(
            model_name="favourite",
            name="content_object",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="website.contentobject",
                verbose_name="Объект контента",
            ),
        ),
        migrations.AlterField(
            model_name="favourite",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователь",
            ),
        ),
        migrations.AlterField(
            model_name="participant",
            name="content_object",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="website.contentobject",
                verbose_name="Объект контента",
            ),
        ),
        migrations.AlterField(
            model_name="participant",
            name="role",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="website.role",
                verbose_name="Фактическая роль",
            ),
        ),
        migrations.AlterField(
            model_name="participant",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Пользователь",
            ),
        ),
        migrations.AlterField(
            model_name="podcast",
            name="cover_picture",
            field=models.ImageField(
                default="images/alt_image.jpg",
                null=True,
                upload_to="images/podcast/",
                verbose_name="Изображение",
            ),
        ),
        migrations.AlterField(
            model_name="podcast",
            name="description",
            field=models.TextField(blank=True, null=True, verbose_name="Описание"),
        ),
        migrations.AlterField(
            model_name="podcast",
            name="name",
            field=models.CharField(max_length=250, verbose_name="Название"),
        ),
        migrations.AlterField(
            model_name="podcastissue",
            name="audio_file",
            field=models.FileField(
                upload_to="files/podcasts/", verbose_name="Аудиофайл"
            ),
        ),
        migrations.AlterField(
            model_name="podcastissue",
            name="n_issue",
            field=models.IntegerField(
                validators=[django.core.validators.MinValueValidator(1)],
                verbose_name="Номер выпуска",
            ),
        ),
        migrations.AlterField(
            model_name="podcastissue",
            name="podcast",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="podcast_issues",
                to="website.podcast",
                verbose_name="Подкаст",
            ),
        ),
        migrations.AlterField(
            model_name="publication",
            name="attached_file",
            field=models.FileField(
                blank=True,
                null=True,
                upload_to="files/publications/",
                verbose_name="Файл (pdf)",
            ),
        ),
        migrations.AlterField(
            model_name="publication",
            name="external_reference_link",
            field=models.URLField(
                blank=True, null=True, verbose_name="Ссылка на внешний источник"
            ),
        ),
        migrations.AlterField(
            model_name="role",
            name="name",
            field=models.CharField(max_length=250, verbose_name="Название"),
        ),
        migrations.AlterField(
            model_name="rubric",
            name="name",
            field=models.CharField(
                max_length=250, unique=True, verbose_name="Название"
            ),
        ),
        migrations.AlterField(
            model_name="rubric",
            name="short_description",
            field=models.CharField(
                blank=True, max_length=500, null=True, verbose_name="Краткое описание"
            ),
        ),
        migrations.AlterField(
            model_name="whatwedo",
            name="is_displayed",
            field=models.BooleanField(
                default=False, verbose_name="Отображается на сайте сейчас"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="podcastissue", unique_together={("podcast", "n_issue")},
        ),
        migrations.AddConstraint(
            model_name="banner",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("n_amongst_banners__gte", 1), ("n_amongst_banners__lt", 6)
                ),
                name="Может быть только 6 последовательных баннеров",
            ),
        ),
        migrations.AddConstraint(
            model_name="podcastissue",
            constraint=models.CheckConstraint(
                check=models.Q(("n_issue__gte", 1)),
                name="Номер подкаста должен быть положительным числом",
            ),
        ),
        migrations.AddField(
            model_name="podcastlink",
            name="podcast",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="website.podcast",
                verbose_name="Подкаст",
            ),
        ),
    ]

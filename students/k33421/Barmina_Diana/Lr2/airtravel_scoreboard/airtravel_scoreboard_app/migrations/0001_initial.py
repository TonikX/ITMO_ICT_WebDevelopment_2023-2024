# Generated by Django 4.2.6 on 2023-10-19 10:30

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Traveler",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("birth_date", models.DateField(null=True)),
                ("passport", models.CharField(max_length=30)),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Flight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("airline", models.CharField(max_length=30)),
                ("departure_site", models.CharField(max_length=50)),
                ("landing_site", models.CharField(max_length=50)),
                ("departure_time", models.DateTimeField()),
                ("landing_time", models.DateTimeField()),
                ("gate", models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="Plane",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("seats_number", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Seat",
            fields=[
                (
                    "name",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("category", models.CharField(max_length=20)),
                ("cost", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("baggage", models.BooleanField(default=False)),
                (
                    "flight_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="airtravel_scoreboard_app.flight",
                    ),
                ),
                (
                    "seat_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="airtravel_scoreboard_app.seat",
                    ),
                ),
                (
                    "traveler_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="seat",
            name="flights",
            field=models.ManyToManyField(
                through="airtravel_scoreboard_app.Ticket",
                to="airtravel_scoreboard_app.flight",
            ),
        ),
        migrations.AddField(
            model_name="seat",
            name="plane_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="airtravel_scoreboard_app.plane",
            ),
        ),
        migrations.AddField(
            model_name="seat",
            name="travelers",
            field=models.ManyToManyField(
                through="airtravel_scoreboard_app.Ticket", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="flight",
            name="plane_id",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="airtravel_scoreboard_app.plane",
            ),
        ),
        migrations.AddField(
            model_name="flight",
            name="seats",
            field=models.ManyToManyField(
                through="airtravel_scoreboard_app.Ticket",
                to="airtravel_scoreboard_app.seat",
            ),
        ),
        migrations.AddField(
            model_name="flight",
            name="travelers",
            field=models.ManyToManyField(
                through="airtravel_scoreboard_app.Ticket", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="traveler",
            name="flights",
            field=models.ManyToManyField(
                through="airtravel_scoreboard_app.Ticket",
                to="airtravel_scoreboard_app.flight",
            ),
        ),
        migrations.AddField(
            model_name="traveler",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="traveler",
            name="seats",
            field=models.ManyToManyField(
                through="airtravel_scoreboard_app.Ticket",
                to="airtravel_scoreboard_app.seat",
            ),
        ),
        migrations.AddField(
            model_name="traveler",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]

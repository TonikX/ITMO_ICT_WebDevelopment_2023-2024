{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u041a33421 \u0411\u0430\u0440\u043c\u0438\u043d\u0430 \u0414\u0438\u0430\u043d\u0430","text":""},{"location":"lab1/itog/","title":"\u0412\u044b\u0432\u043e\u0434\u044b","text":"<p>\u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u0438 \u0438\u0437\u0443\u0447\u0435\u043d\u044b \u043a\u043b\u0438\u0435\u043d\u0442-\u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435, \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket threading, \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b HTTP \u0438 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432, \u0431\u044b\u043b \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0441\u0435\u0440\u0432\u0435\u0440, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0449\u0438\u0439 GET \u0438 POST \u0437\u0430\u043f\u0440\u043e\u0441\u044b.</p>"},{"location":"lab1/task_1/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21161","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP</p> <p>server</p> <pre><code>import socket\n\nif __name__ == '__main__':\n    with socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as conn:\n        conn.bind(('127.0.0.1', 14900))\n        while True:\n            message_from, cl_address = conn.recvfrom(16384)\n            decode_message = message_from.decode(\"utf-8\")\n            print('From client: ' + decode_message)\n            message_to = 'Hello, client'.encode('utf-8')\n            conn.sendto(message_to, cl_address)\n</code></pre> <p>client</p> <pre><code>import socket\n\nif __name__ == '__main__':\n    conn = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n    try:\n        conn.sendto(\"Hello, server\".encode('utf-8'), (\"127.0.0.1\", 14900))\n        response = conn.recv(16384).decode('utf-8')\n        print('From server: ' + response)\n    except ConnectionResetError:\n        print(\"Server not avaliable\")\n\n</code></pre> <p>\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b:</p> <p>\u0421\u0435\u0440\u0432\u0435\u0440 \u041a\u043b\u0438\u0435\u043d\u0442 </p>"},{"location":"lab1/task_2/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21162","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0412\u0430\u0440\u0438\u0430\u043d\u0442: b. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f.</p> <p>server</p> <pre><code>import socket\nimport math\n\n\ndef solve_quad_eq(a, b, c): \n    D = b ** 2 - 4 * a * c\n    sqrt_val = math.sqrt(abs(D))\n    if D &gt; 0:\n        return (-b + sqrt_val) / (2 * a), (-b - sqrt_val) / (2 * a)\n    elif D == 0:\n        return -b / (2 * a)\n    else:\n        return '\u041d\u0435\u0442 \u043a\u043e\u0440\u043d\u0435\u0439'\n\n\nif __name__ == '__main__':\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as conn:\n        conn.bind((\"127.0.0.1\", 14900))\n        conn.listen(10)\n        while True:\n            client, address = conn.accept()\n            client.sendall('Hello from server! \u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0447\u0435\u0440\u0435\u0437 \u0437\u0430\u043f\u044f\u0442\u0443\u044e'.encode('utf-8'))\n            client_resp = client.recv(16384).decode('utf-8')\n            #print(f'{client_resp}')\n            try:\n                a, b, c = map(float, client_resp.split(','))\n                solve = str(solve_quad_eq(a, b, c)).encode('utf-8')\n                client.sendall(solve)\n            except:\n                client.sendall(\"\u041d\u0435\u0432\u0435\u0440\u043d\u043e \u0432\u0432\u0435\u0434\u0435\u043d\u044b \u0434\u0430\u043d\u043d\u044b\u0435\".encode('utf-8'))\n</code></pre> <p>client</p> <pre><code>import socket\n\nif __name__ == '__main__':\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as conn:\n        conn.connect((\"127.0.0.1\", 14900))\n        response = conn.recv(16384).decode('utf-8')\n        print('From server: ' + response)\n        coef = input().encode('utf-8')\n        conn.sendall(coef)\n        response = conn.recv(16384).decode('utf-8')\n        print('Solution: ' + response)\n</code></pre> <p>\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b:</p> <p>\u041a\u043b\u0438\u0435\u043d\u0442 </p>"},{"location":"lab1/task_3/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21163","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html.</p> <p>server</p> <pre><code>import socket\n\n\nif __name__ == '__main__':\n    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as conn:\n        conn.bind((\"127.0.0.1\", 14900))\n        conn.listen(10)\n        while True:\n            client, address = conn.accept()\n            with open('index.html', 'r') as file:\n                html = file.read()\n            print(f\"Connected by {address}\")\n            client.send((\"HTTP/1.1 200 OK \\n\" + \"Content-Type: text/html \\n\" + html).encode('utf-8'))\n</code></pre> <p>client</p> <pre><code>import socket\n\nif __name__ == '__main__':\n    conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    conn.connect((\"127.0.0.1\", 14900))\n    response = conn.recv(16384).decode('utf-8')\n    print('From server: ' + response)\n</code></pre> <p>html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Hello&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Hello, client!&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b:</p> <p>\u0421\u0435\u0440\u0432\u0435\u0440 \u041a\u043b\u0438\u0435\u043d\u0442 \u0421\u0435\u0440\u0432\u0435\u0440 </p>"},{"location":"lab1/task_4/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21164","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432.</p> <p>server</p> <pre><code>import socket\nfrom threading import Thread\n\n\ndef start_chat():\n    global clients\n    while True:\n        client, address = conn.accept()\n        name = client.recv(2048).decode('utf-8')\n        clients[client] = name\n        post_messages(f\"\u041a\u043b\u0438\u0435\u043d\u0442 {name} \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b\u0441\u044f \u043a \u0447\u0430\u0442\u0443\", client)\n        Thread(target=get_messages, args=(client,)).start()\n\n\ndef get_messages(client):\n    global clients\n    while True:\n        try:\n            message = client.recv(16384).decode()\n            if message:\n                post_messages(message, client)\n        except:\n            name = clients[client]\n            post_messages(f\"{name} \u0432\u044b\u0448\u0435\u043b \u0438\u0437 \u0447\u0430\u0442\u0430\", client)\n            del clients[client]\n            client.close()\n            break\n\n\ndef post_messages(message, client):\n    global clients\n    for c in clients:\n        if c != client:\n            c.send(f\"{clients[client]}: {message}\".encode('utf-8'))\n    print(f\"{clients[client]}: {message}\")\n\n\nif __name__ == '__main__':\n    conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    conn.bind((\"127.0.0.1\", 14900))\n    conn.listen(10)\n    clients = {}\n    start_chat()\n</code></pre> <p>client</p> <pre><code>import socket\nfrom threading import Thread\n\n\ndef get_messages():\n    while True:\n        get = conn.recv(16384).decode(\"utf-8\")\n        print(get)\n\n\ndef post_messages():\n    while True:\n        post = input()\n        conn.sendall(post.encode('utf-8'))\n\n\nif __name__ == '__main__':\n    conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    conn.connect((\"127.0.0.1\", 14900))\n    name = input(\"\u0412\u0430\u0448\u0435 \u0438\u043c\u044f: \\n\")\n    receive_th = Thread(target=get_messages)\n    receive_th.start()\n    respond_th = Thread(target=post_messages)\n    respond_th.start()\n\n</code></pre> <p>\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b:</p> <p>\u0421\u0435\u0440\u0432\u0435\u0440 \u041a\u043b\u0438\u0435\u043d\u0442 1 \u041a\u043b\u0438\u0435\u043d\u0442 2 \u041a\u043b\u0438\u0435\u043d\u0442 3 </p>"},{"location":"lab1/task_5/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u21165","text":"<p>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0441\u0438\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.</p> <p>server</p> <pre><code>from MyHTTPServer import MyHTTPServer\n\n\nif __name__ == '__main__':\n    HOST = '127.0.0.1'\n    SERVER_PORT = 14900\n    my_server = MyHTTPServer(HOST, SERVER_PORT)\n    my_server.serve_forever()\n</code></pre> <p>MyHTTPServer</p> <pre><code>import socket\nfrom email.parser import Parser\nfrom Request import Request\nfrom Response import Response\n\n\nMAX_LINE = 64 * 1024\nMAX_HEADERS = 100\n\n\nclass MyHTTPServer:\n    def __init__(self, host, port):\n        self.port = port\n        self.host = host\n        self.conn = None\n        self.data = {}  # {subject: [grades]}\n\n    def serve_forever(self):\n        server_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        try:\n            server_sock.bind((self.host, self.port))\n            server_sock.listen(10)\n            print(\"Server is running...\")\n            while True:\n                client_socket, _ = server_sock.accept()\n                try:\n                    self.serve_client(client_socket)\n                except Exception as e:\n                    print('Client serving failed', e)\n        finally:\n            server_sock.close()\n\n    def serve_client(self, conn):\n        try:\n            req = self.parse_request(conn)\n            response = self.handle_request(req)\n            self.send_response(conn, response)\n        except ConnectionResetError:\n            conn = None\n        except Exception as e:\n            print(\"Error\", e)\n        if conn:\n            conn.close()\n\n    def parse_request(self, conn):\n        rfile = conn.makefile('rb')\n        method, target, ver = self.parse_request_line(rfile)\n\n        headers = self.parse_headers(rfile)\n\n        host = headers.get('Host')\n        if not host:\n            raise Exception('Host header is missing')\n\n        return Request(method, target, ver, headers, rfile)\n\n    def parse_request_line(self, rfile):\n        raw = rfile.readline(MAX_LINE + 1)\n        if len(raw) &gt; MAX_LINE:\n            raise Exception('Request line is too long')\n\n        req_line = str(raw, 'iso-8859-1').rstrip('\\r\\n')\n        words = req_line.split()\n        if len(words) != 3:\n            raise Exception('Malformed request line')\n\n        method, target, ver = words\n        if ver != 'HTTP/1.1':\n            raise Exception('Unexpected HTTP version')\n\n        return method, target, ver\n\n\n    @staticmethod\n    def parse_headers(rfile):\n        headers = []\n\n        while True:\n            line = rfile.readline(MAX_LINE + 1)\n            if len(line) &gt; MAX_LINE:\n                raise Exception('Header line is too long')\n\n            if line in (b'\\r\\n', b'\\n', b''):\n                break\n\n            headers.append(line)\n            if len(headers) &gt; MAX_HEADERS:\n                raise Exception('Too many headers')\n\n        sheaders = b''.join(headers).decode('iso-8859-1')\n        return Parser().parsestr(sheaders)\n\n    def handle_request(self, req):\n        content_type = 'text/html; charset=utf-8'\n        body = str()\n        if req.path == '/' and req.method == 'POST':\n            subject = req.query_body['subject'][0]\n            grade = req.query_body['grade'][0]\n            try:\n                self.data[subject].append(grade)\n            except KeyError:\n                self.data[subject] = [grade]\n            body = self.handle_get()\n        elif req.method == 'GET':\n            if req.path == '/add_grade':\n                with open(\"index.html\", encoding='utf-8') as index:\n                    body1 = index.read()\n                body = body1\n            elif req.path == '/':\n                body = self.handle_get()\n        body = body.encode('utf-8')\n        headers = [('Content-Type', content_type),\n                   ('Content-Length', len(body))]\n        return Response(200, 'OK', headers, body)\n\n    def handle_get(self):\n        body = \"\"\"\n                &lt;!DOCTYPE html&gt;\n                &lt;html lang=\"ru\"&gt;\n                &lt;head&gt;\n                &lt;meta charset=\"UTF-8\"&gt;\n                &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n                &lt;/head&gt;\n                &lt;body&gt;\n                    &lt;h2&gt;&lt;center&gt;\u0412\u0435\u0434\u043e\u043c\u043e\u0441\u0442\u044c&lt;/center&gt;&lt;/h2&gt;\n                    &lt;table style=\"border-collapse: collapse; width: 70%;\" align=\"center\"&gt;\n                        &lt;tr&gt;\n                            &lt;th style=\"border: 1px solid black; padding: 4px;\"&gt;\u041f\u0440\u0435\u0434\u043c\u0435\u0442&lt;/th&gt;\n                            &lt;th style=\"border: 1px solid black; padding: 4px;\"&gt;\u041e\u0446\u0435\u043d\u043a\u0430&lt;/th&gt;\n                        &lt;/tr&gt;\n                \"\"\"\n        for subject, grades in self.data.items():\n            for grade in grades:\n                body += f\"\"\"&lt;tr&gt;\n                                &lt;td style=\"border: 1px solid black; padding: 4px;\"&gt;{subject}&lt;/td&gt;\n                                &lt;td style=\"border: 1px solid black; padding: 4px;\"&gt;{grade}&lt;/td&gt;\n                            &lt;/tr&gt;\n                        \"\"\"\n\n        body += \"\"\"\n                &lt;/table&gt;\n                    &lt;form action=\"/add_grade\" style=\"padding: 10px;\"&gt;\n                        &lt;center&gt;&lt;input type=\"submit\" value=\"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435\"&gt;&lt;/center&gt;\n                    &lt;/form&gt;\n            &lt;/body&gt;\n        &lt;/html&gt;\n                \"\"\"\n        return body\n\n    @staticmethod\n    def send_response(conn, resp):\n        wfile = conn.makefile('wb')\n        status_line = f'HTTP/1.1 {resp.status} {resp.reason}\\r\\n'\n        wfile.write(status_line.encode('iso-8859-1'))\n\n        if resp.headers:\n            for (key, value) in resp.headers:\n                header_line = f'{key}: {value}\\r\\n'\n                wfile.write(header_line.encode('iso-8859-1'))\n\n        wfile.write(b'\\r\\n')\n\n        if resp.body:\n            wfile.write(resp.body)\n\n        wfile.flush()\n        wfile.close()\n</code></pre> <p>Request</p> <pre><code>from functools import lru_cache\nfrom urllib.parse import parse_qs, urlparse\n\n\n\nclass Request:\n    def __init__(self, method, target, version, headers, rfile):\n        self.method = method\n        self.target = target\n        self.version = version\n        self.headers = headers\n        self.rfile = rfile\n\n    @property\n    def path(self):\n        return self.url.path\n\n    @property\n    def body(self):\n        size = self.headers.get('Content-Length')\n        if not size:\n            return None\n        content = self.rfile.read(int(size))\n        return content.decode('utf-8')\n\n    @property\n    @lru_cache(maxsize=None)\n    def url(self):\n        return urlparse(self.target)\n\n    @property\n    @lru_cache(maxsize=None)\n    def query(self):\n        return parse_qs(self.url.query)\n\n    @property\n    @lru_cache(maxsize=None)\n    def query_body(self):\n        return parse_qs(self.body)\n</code></pre> <p>Response</p> <pre><code>class Response:\n    def __init__(self, status, reason, headers=None, body=None):\n        self.status = status\n        self.reason = reason\n        self.headers = headers\n        self.body = body\n</code></pre> <p>html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"ru\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h2&gt;\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0430\u043d\u043d\u044b\u0435&lt;/h2&gt;\n    &lt;p&gt;\n        &lt;form method=\"POST\" action=\"/\"&gt;\n            &lt;h4&gt;\u041f\u0440\u0435\u0434\u043c\u0435\u0442: &lt;/h4&gt;&lt;input type=\"text\" id=\"subject\" name=\"subject\"&gt;\n            &lt;br&gt;\n            &lt;br&gt;\n            &lt;h4&gt;\u041e\u0446\u0435\u043d\u043a\u0430: &lt;/h4&gt;&lt;input type=\"text\" id=\"grade\" name=\"grade\"&gt;\n            &lt;br&gt;\n            &lt;br&gt;\n            &lt;input type=\"submit\" value=\"\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c\"&gt;\n            &lt;br&gt;\n            &lt;br&gt;\n        &lt;/form&gt;\n    &lt;/p&gt;\n    &lt;form action=\"/\"&gt;\n        &lt;input type=\"submit\" value=\"\u0412\u0435\u0440\u043d\u0443\u0442\u044c\u0441\u044f \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u0443\u044e\"&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n</code></pre> <p>\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b:</p> <p>\u0421\u0435\u0440\u0432\u0435\u0440 \u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f </p>"},{"location":"lab2/forms/","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0444\u043e\u0440\u043c \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438, \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432","text":"<p>\u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438</p> <pre><code>\nclass SignUpForm(UserCreationForm):\n\n    class Meta:\n        model = Traveler\n        fields = ('username', 'first_name', 'last_name', 'birth_date', 'passport', 'password1', 'password2')\n\n    def __init__(self, *args, **kwargs):\n        super(SignUpForm, self).__init__(*args, **kwargs)\n\n        self.fields['username'].widget.attrs['class'] = 'form-control'\n        self.fields['password1'].widget.attrs['class'] = 'form-control'\n        self.fields['password2'].widget.attrs['class'] = 'form-control'\n\n</code></pre> <p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438</p> <pre><code>\nclass UserRegisterView(generic.CreateView):\n    form_class = SignUpForm\n    template_name = 'register.html'\n    success_url = reverse_lazy('login')\n\n</code></pre> <p>HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u043e\u0440\u043c\u044b \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438</p> <pre><code>\n{% extends 'base.html' %}\n{% block title %}Register{% endblock %}\n{% block content %}\n\n\n\n&lt;h1&gt;REGISTER&lt;/h1&gt;\n\n&lt;br/&gt;&lt;br/&gt;\n&lt;div class=\"form-group\"&gt;\n    &lt;form method=\"POST\"&gt;\n        {% csrf_token %}\n        {{ form.as_p }}\n        &lt;br/&gt;\n        &lt;button class=\"btn btn-primary\"&gt;Register&lt;/button&gt;\n    &lt;/form&gt;\n&lt;/div&gt;\n\n{% endblock %}\n\n</code></pre> <p> </p> <p>\u0424\u043e\u0440\u043c\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u0430  \u0422\u0430\u043a \u043a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0441\u0442\u043e, \u0435\u0433\u043e id \u0443\u0436\u0435 \u0435\u0441\u0442\u044c, \u043a\u0430\u043a \u0438 id \u0440\u0435\u0439\u0441\u0430 \u0438 \u043c\u0435\u0441\u0442\u043e, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d \u0443\u0436\u0435 \u0432\u044b\u0431\u0440\u0430\u043b \u0440\u0435\u0439\u0441 \u0438 \u043c\u0435\u0441\u0442\u043e, \u0447\u0442\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u043b\u043e\u0441\u044c. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 - \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0431\u0430\u0433\u0430\u0436\u0430.</p> <pre><code>\nclass TicketForm(forms.ModelForm):\n\n    class Meta:\n        model = Ticket\n\n        fields = ['baggage']\n        labels = {\n            'baggage': '\u0411\u0430\u0433\u0430\u0436',\n        }\n\n</code></pre> <p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</p> <pre><code>class TicketBookNewView(generic.CreateView):\n    model = Ticket\n    template_name = 'booking.html'\n    form_class = TicketForm\n\n    def get_success_url(self):\n        return reverse('user-page', kwargs={'user_id': self.request.user.pk})\n\n    def form_valid(self, form):\n        form.instance.traveler_id = self.request.user\n        form.instance.flight_id = Flight.objects.get(pk=self.kwargs['flight_id'])\n        form.instance.seat_id = Seat.objects.get(pk=self.kwargs['seat_id'])\n        return super().form_valid(form)\n\n</code></pre> <p>HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u043e\u0440\u043c\u044b \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</p> <pre><code>{% extends 'base.html' %}\n\n{% block content %}\n\n&lt;h1&gt;\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435&lt;/h1&gt;\n&lt;/br&gt;\n&lt;form method=\"post\"&gt;\n    {% csrf_token %}\n    {{ form.as_p }}\n    &lt;/br&gt;&lt;button type=\"submit\" class=\"btn btn-primary\"&gt;\u0417\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c&lt;/button&gt;\n&lt;/form&gt;\n&lt;/br&gt;\n&lt;a href=\"{% url 'home' %}\" class=\"btn btn-dark\"&gt;\u041d\u0430\u0437\u0430\u0434 \u043a \u0440\u0435\u0439\u0441\u0430\u043c&lt;/a&gt;\n\n\n{% endblock %}\n\n</code></pre> <p></p> <p>\u0424\u043e\u0440\u043c\u0430 \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432  \u0421 \u0434\u043e\u0431\u0430\u0430\u043b\u0435\u043d\u0438\u0435\u043c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u043b\u043e\u0433\u0438\u043a\u0430 \u0442\u0430\u043a\u0430\u044f \u0436\u0435, \u043a\u0430\u043a \u0438 \u0441 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c, id \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0440\u0435\u0439\u0441\u0430 \u043c\u044b \u0443\u0436\u0435 \u0438\u043c\u0435\u0435\u043c, \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0440\u0435\u0439\u0442\u0438\u043d\u0433 \u0438 \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f</p> <pre><code>\nclass CommentForm(forms.ModelForm):\n    class Meta:\n        model = Comment\n        fields = ('rating', 'text')\n\n</code></pre> <p>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432</p> <pre><code>\nclass AddCommentView(CreateView):\n    model = Comment\n    form_class = CommentForm\n    template_name = 'add_comment.html'\n    success_url = reverse_lazy('home')\n\n    def get_success_url(self):\n        return reverse('flight-detail', kwargs={'pk': self.kwargs['pk']})\n\n    def form_valid(self, form):\n        form.instance.flight = Flight.objects.get(pk=self.kwargs['pk'])\n        form.instance.author = self.request.user\n        form.instance.date_flight = Flight.objects.get(pk=self.kwargs['pk']).departure_time\n        return super().form_valid(form)\n\n</code></pre> <p>HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0444\u043e\u0440\u043c\u044b \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432</p> <pre><code>\n{% extends 'base.html' %}\n\n{% block content %}\n\n    &lt;h1&gt;ADD COMMENT&lt;/h1&gt;\n    &lt;br/&gt;\n    &lt;br/&gt;\n\n    &lt;div class=\"form-group\"&gt;\n        &lt;form method=\"POST\"&gt;\n            {% csrf_token %}\n            {{ form.as_p }}\n            &lt;br/&gt;\n            &lt;button class=\"btn btn-success\"&gt;Add Comment&lt;/button&gt;\n            &lt;br/&gt;\n            &lt;br/&gt;\n            &lt;a href=\"{% url 'user-page' user.pk %}\" class=\"btn btn-dark\"&gt;Back&lt;/a&gt;\n        &lt;/form&gt;\n    &lt;/div&gt;\n\n\n{% endblock %}\n\n</code></pre> <p></p>"},{"location":"lab2/itog/","title":"\u0412\u044b\u0432\u043e\u0434\u044b","text":"<p>\u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0431\u044b\u043b\u043e \u0438\u0437\u0443\u0447\u0435\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 django: \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0443\u0442\u0435\u0439, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0438 html-\u0444\u0430\u0439\u043b\u043e\u0432. \u0411\u044b\u043b\u043e \u0438\u0437\u0443\u0447\u0435\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438 \u043f\u043e \u0441\u0430\u0439\u0442\u0443 , \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0444\u043e\u0440\u043c \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p>"},{"location":"lab2/models/","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>\u0422\u0430\u0431\u043b\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e\u0431 \u0430\u0432\u0438\u0430\u043f\u0435\u0440\u0435\u043b\u0435\u0442\u0430\u0445. \u0425\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043d\u043e\u043c\u0435\u0440\u0435 \u0440\u0435\u0439\u0441\u0430, \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438, \u043e\u0442\u043b\u0435\u0442\u0435, \u043f\u0440\u0438\u043b\u0435\u0442\u0435, \u0442\u0438\u043f\u0435 (\u043f\u0440\u0438\u043b\u0435\u0442, \u043e\u0442\u043b\u0435\u0442), \u043d\u043e\u043c\u0435\u0440\u0435 \u0433\u0435\u0439\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: 1)\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. 2)\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442 \u043d\u0430 \u0440\u0435\u0439\u0441\u0430\u0445. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. 3)\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0440\u0435\u0439\u0441 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430 \u0438 \u0432\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043d\u043e\u043c\u0435\u0440 \u0435\u0433\u043e \u0431\u0438\u043b\u0435\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. 4)\u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435\u0445 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043e\u0432 \u0440\u0435\u0439\u0441\u0430. 5)\u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0440\u0435\u0439\u0441\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u0430 \u0440\u0435\u0439\u0441\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435.</p> <p>\u0411\u044b\u043b\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043e 6 \u0442\u0430\u0431\u043b\u0438\u0446 - 5 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0445 \u0434\u043b\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u0430 \u0438 \u0435\u0449\u0435 \u043e\u0434\u043d\u0430 \u0434\u043b\u044f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432</p> <p>Traveler - \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c</p> <pre><code>\nclass Traveler(AbstractUser):\n    first_name = models.CharField(max_length=50)\n    last_name = models.CharField(max_length=50)\n    birth_date = models.DateField(null=True)\n    passport = models.CharField(max_length=30)\n    flights = models.ManyToManyField('Flight', through='Ticket')\n    seats = models.ManyToManyField('Seat', through='Ticket')\n\n</code></pre> <p>Ticket - \u0431\u0438\u043b\u0435\u0442 (\u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c, \u043c\u0435\u0441\u0442\u043e\u043c \u0438 \u0440\u0435\u0439\u0441\u043e\u043c) \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435 - \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0431\u0430\u0433\u0430\u0436\u0430.  \u0412 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u043f\u0440\u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442  \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u044d\u0442\u043e \u043f\u043e\u043b\u0435, \u0434\u043b\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043c\u0435\u0441\u0442\u0430 \u043d\u0443\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442 \u0438 \u043a\u0443\u043f\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u0439.</p> <pre><code>\nclass Ticket(models.Model):\n    traveler_id = models.ForeignKey('Traveler', on_delete=models.CASCADE)\n    flight_id = models.ForeignKey('Flight', on_delete=models.CASCADE)\n    seat_id = models.ForeignKey('Seat', on_delete=models.CASCADE)\n    baggage = models.BooleanField(default=False)\n\n</code></pre> <p>Flight - \u0440\u0435\u0439\u0441 \u041d\u0430 \u0440\u0435\u0439\u0441\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u0430\u043c\u043e\u043b\u0435\u0442 - \u043d\u0430 \u043e\u0434\u0438\u043d \u0440\u0435\u0439\u0441 \u043e\u0434\u0438\u043d \u0441\u0430\u043c\u043e\u043b\u0435\u0442, \u043d\u043e \u043d\u0430 \u043e\u0434\u0438\u043d \u0441\u0430\u043c\u043e\u043b\u0435\u0442 - \u043c\u043d\u043e\u0433\u043e \u0440\u0435\u0439\u0441\u043e\u0432.  \u0420\u0435\u0439\u0441 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u0442\u043e\u0447\u043a\u0430 \u043e\u0442\u043f\u0440\u0430\u043b\u0435\u043d\u0438\u044f \u0438 \u0442\u043e\u0447\u043a\u0430 \u043f\u043e\u0441\u0430\u0434\u043a\u0438.</p> <pre><code>\nclass Flight(models.Model):\n    airline = models.CharField(max_length=30)\n    departure_site = models.CharField(max_length=50)\n    landing_site = models.CharField(max_length=50)\n    departure_time = models.DateTimeField()\n    landing_time = models.DateTimeField()\n    gate = models.CharField(max_length=10)\n    plane_id = models.ForeignKey('Plane', on_delete=models.CASCADE)\n    travelers = models.ManyToManyField('Traveler', through='Ticket')\n    seats = models.ManyToManyField('Seat', through='Ticket')\n\n    def __str__(self):\n        return self.departure_site + '-' + self.landing_site# + '(' + self.departure_time + '-' + self.landing_time + ')'\n\n</code></pre> <p>Seat - \u043c\u0435\u0441\u0442\u043e \u041c\u0435\u0441\u0442\u043e \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u043e \u043d\u0435 \u043a \u0440\u0435\u0439\u0441\u0443, \u0430 \u043a \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0443.  \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u0432 \u0440\u0435\u0439\u0441\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0435\u0441\u0442. \u0421\u0442\u0430\u0442\u0443\u0441\u0430 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0443 \u043c\u0435\u0441\u0442\u0430 \u043d\u0435\u0442 \u043f\u043e \u044d\u0442\u043e\u0439 \u043f\u0440\u0438\u0447\u0438\u043d\u0435 - \u0437\u0430\u043d\u044f\u0442\u044b\u0435 \u043c\u0435\u0441\u0442\u0430 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u043e \u0434\u0440\u0443\u0433\u043e\u043c\u0443, \u0441\u043c. views.</p> <pre><code>\nclass Seat(models.Model):\n    name = models.CharField(max_length=10, primary_key=True)\n    category = models.CharField(max_length=20)\n    cost = models.IntegerField()\n    plane_id = models.ForeignKey('Plane', on_delete=models.CASCADE)\n    flights = models.ManyToManyField('Flight', through='Ticket')\n    travelers = models.ManyToManyField('Traveler', through='Ticket')\n\n    def __str__(self):\n        return self.name\n\n</code></pre> <p>Plane - \u0441\u0430\u043c\u043e\u043b\u0435\u0442  \u0422\u0430\u043a \u043a\u0430\u043a \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u043a\u0430\u0441\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430 \u043d\u0435 \u0431\u044b\u043b\u043e - \u0431\u044b\u043b\u0438 \u0432\u0432\u0435\u0434\u0435\u043d\u044b \u0432\u0441\u0435\u0433\u043e \u0434\u0432\u0430 \u043f\u043e\u043b\u044f: \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0435\u0441\u0442 \u0438 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435</p> <pre><code>\nclass Plane(models.Model):\n    name = models.CharField(max_length=50)\n    seats_number = models.IntegerField()\n\n    def __str__(self):\n        return self.name\n\n</code></pre> <p>Comment - \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043a \u0440\u0435\u0439\u0441\u0430\u043c  \u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0440\u0435\u0439\u0441\u0430 \u0438 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0440\u0435\u0439\u0442\u0438\u043d\u0433</p> <pre><code>\nclass Comment(models.Model):\n    flight = models.ForeignKey('Flight', related_name=\"comments\", on_delete=models.CASCADE)\n    author = models.ForeignKey('Traveler', on_delete=models.CASCADE)\n    text = models.TextField()\n    rating = models.IntegerField(\n         validators=[MinValueValidator(1), MaxValueValidator(10)]\n    )\n    date_added = models.DateTimeField(auto_now_add=True)\n    date_flight = models.DateTimeField()\n\n</code></pre>"},{"location":"lab2/urls/","title":"\u041f\u0443\u0442\u0438","text":"<pre><code>from django.urls import path\nfrom . import views\nfrom .views import HomeView, FlightDetailView, UserRegisterView, TicketBookNewView, TicketDeleteView, TicketUpdateView, AddCommentView\n\nurlpatterns = [\n   path('', views.HomeSortView, name=\"home\"),\n   path('flight/&lt;int:pk&gt;', FlightDetailView.as_view(), name=\"flight-detail\"),\n   path('flight/&lt;int:flight_id&gt;/seats', views.SeatsView, name='seats'),\n   path('user/&lt;int:user_id&gt;', views.UserWithFlightsView, name=\"user-page\"),\n   path('flight/&lt;int:flight_id&gt;/tickets', views.TicketFlightTableView, name='ticket-table'),\n   #path('flight/&lt;int:flight_id&gt;/booking', TicketBookView.as_view(), name='booking'),\n   path('flight/&lt;int:flight_id&gt;/seats/&lt;str:seat_id&gt;', TicketBookNewView.as_view(), name='booking-seat'),\n   path('user/&lt;int:user_id&gt;/&lt;int:pk&gt;/delete', TicketDeleteView.as_view(), name='delete-ticket'),\n   path('user/&lt;int:user_id&gt;/&lt;int:pk&gt;/update', TicketUpdateView.as_view(), name='update-ticket'),\n   path('flight/&lt;int:pk&gt;/comment', AddCommentView.as_view(), name='add-comment'),\n\n\n   path('register/', UserRegisterView.as_view(), name='register'),\n]\n</code></pre>"},{"location":"lab2/views/","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f","text":"<p>\u0414\u043e\u043c\u0430\u0448\u043d\u044f\u044f \u0441\u0442\u0440a\u043d\u0438\u0446\u0430 \u0441 \u0440\u0435\u0439\u0441\u0430\u043c\u0438  \u0412\u0441\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u043e\u044f\u0449\u0438\u0435 \u0440\u0435\u0439\u0441\u044b, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0441\u0442\u043e (\u0444\u0438\u043b\u044c\u0442\u0440\u0443\u044e\u0442\u0441\u044f \u043f\u043e \u0434\u0430\u0442\u0435, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u0441\u0435\u0433\u043e\u0434\u043d\u044f\u0448\u043d\u0435\u0439).</p> <pre><code>\ndef HomeSortView(request):\n    flights = Flight.objects.filter(departure_time__date__gt=datetime.now().date())\n    return render(request, 'home.html', {'object_list': flights})\n\n</code></pre> <p>HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0440\u0435\u0439\u0441\u043e\u0432  \u0420\u0435\u0439\u0441\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u0432 \u0432\u0438\u0434\u0435 \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043b\u0435\u0442\u0430 \u0438 \u043f\u0440\u0438\u043b\u0435\u0442\u0430 , \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 \u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430. \u0412\u043d\u0438\u0437\u0443 \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 2 \u043a\u043e\u043d\u043e\u043f\u043a\u0438:  \"\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0435 \u043c\u0435\u0441\u0442\u0430\" - \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043c\u0435\u0441\u0442,  \"\u041f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u044b\" - \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0441 \u043f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0430\u043c\u0438 \u0438 \u0438\u0445 \u043c\u0435\u0441\u0442\u0430\u043c\u0438.</p> <pre><code>\n{% extends 'base.html' %}\n\n{% block content %}\n&lt;h1&gt;\u0420\u0435\u0439\u0441\u044b:&lt;/h1&gt;&lt;/br&gt;\n\n&lt;ul&gt;\n{% for flight in object_list %}\n\n\n    &lt;div class=\"card mb-3\" style=\"max-width: 540px;\"&gt;\n      &lt;div class=\"row g-0 \"&gt;\n          &lt;div class=\"card-body\"&gt;\n            &lt;h5 class=\"card-title\"&gt;{{ flight.departure_site }} - {{ flight.landing_site }}&lt;/h5&gt;\n            &lt;p class=\"card-text\"&gt;{{flight.departure_time }}-{{flight.landing_time}}&lt;/p&gt;\n            &lt;p class=\"card-text\"&gt;&lt;small class=\"text-body-secondary\"&gt;\u0410\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f \"{{ flight.airline }}\" \u041c\u043e\u0434\u0435\u043b\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430: {{ flight.plane_id.name}}&lt;/small&gt;&lt;/p&gt;\n\n              &lt;a href=\"{% url 'seats' flight.pk %}\" class=\"btn btn-primary\"&gt;\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0435 \u043c\u0435\u0441\u0442\u0430&lt;/a&gt;\n              &lt;a href=\"{% url 'ticket-table' flight.pk %}\" class=\"btn btn-outline-primary\"&gt;\u041f\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u044b&lt;/a&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n\n\n{% endfor %}\n&lt;/ul&gt;\n{% endblock %}\n\n</code></pre> <p></p> <p>\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u0441 \u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 \u043c\u0435\u0441\u0442\u0430\u043c\u0438  \u0412\u0441\u0435 \u0437\u0430\u043d\u044f\u0442\u044b\u0435 \u043c\u0435\u0441\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0444\u0438\u043b\u044c\u0442\u0440\u0443\u044e\u0442\u0441\u044f \u043f\u043e \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u043c\u0443 \u0440\u0435\u0439\u0441\u0443</p> <pre><code>\ndef TicketFlightTableView(request, flight_id):\n    tickets = Ticket.objects.filter(flight_id=flight_id)\n    return render(request, 'ticket_table.html', {'tickets': tickets})\n\n</code></pre> <p>HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b</p> <pre><code>\n{% extends 'base.html' %}\n\n{% block content %}\n\n{% if tickets.count != 0 %}\n  &lt;p&gt;\u0412\u0441\u0435\u0433\u043e \u043c\u0435\u0441\u0442:  {{tickets.first.flight_id.plane_id.seats_number}} \u0417\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043e: {{ tickets.count}}&lt;/p&gt;\n\n  &lt;table class=\"table\"&gt;\n    &lt;thead&gt;\n      &lt;tr&gt;\n        &lt;th scope=\"col\"&gt;\u0418\u043c\u044f&lt;/th&gt;\n        &lt;th scope=\"col\"&gt;\u041a\u043b\u0430\u0441\u0441&lt;/th&gt;\n        &lt;th scope=\"col\"&gt;\u041c\u0435\u0441\u0442\u043e&lt;/th&gt;\n        &lt;th scope=\"col\"&gt;\u041d\u0430\u043b\u0438\u0447\u0438\u0435 \u0431\u0430\u0433\u0430\u0436\u0430&lt;/th&gt;\n      &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n    {% for ticket in tickets %}\n      &lt;tr&gt;\n        &lt;td&gt;{{ ticket.traveler_id.first_name }} {{ ticket.traveler_id.last_name }}&lt;/td&gt;\n        &lt;td&gt;{{ ticket.seat_id.category }}&lt;/td&gt;\n        &lt;td&gt;{{ ticket.seat_id.name }}&lt;/td&gt;\n        &lt;td&gt;{{ ticket.baggage }}&lt;/td&gt;\n      &lt;/tr&gt;\n    {% endfor %}\n    &lt;/tbody&gt;\n  &lt;/table&gt;\n{% else %}\n&lt;p&gt;\u041d\u0430 \u0440\u0435\u0439\u0441 \u043f\u043e\u043a\u0430 \u043d\u0438\u043a\u0442\u043e \u043d\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043b\u0441\u044f&lt;/p&gt;\n{% endif %}\n&lt;a href=\"{% url 'home' %}\" class=\"btn btn-dark\"&gt;\u041a \u0440\u0435\u0439\u0441\u0430\u043c&lt;/a&gt;\n{% endblock %}\n\n</code></pre> <p></p> <p>\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0435\u0439\u0441\u0430 \u0441 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f\u043c\u0438</p> <pre><code>\nclass FlightDetailView(DetailView):\n    model = Flight\n    template_name = 'flight_detail.html'\n\n</code></pre> <p>HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0440\u0435\u0439\u0441\u0430  \u041d\u0430\u0432\u0435\u0440\u0445\u0443 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u0434\u0435\u0442\u0430\u043b\u0438 \u0440\u0435\u0439\u0441\u0430, \u043d\u0438\u0436\u0435 \u043e\u0442\u0437\u044b\u0432\u044b \u0438 \u0441\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u0444\u043e\u0440\u043c\u0443 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u0437\u044b\u0432\u043e\u0432.</p> <pre><code>\n{% extends 'base.html' %}\n\n{% block content %}\n&lt;h2&gt; {{ flight.departure_site }} - {{ flight.landing_site }} &lt;/h2&gt;\n&lt;h3&gt; {{ flight.departure_time }} - {{ flight.landing_time }} &lt;/h3&gt;\n&lt;p&gt;\n    \u0410\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f \"{{ flight.airline }}\"  {{ flight.plane_id.name }} &lt;/br&gt;\n&lt;/p&gt;&lt;/br&gt;\n\n\n&lt;br/&gt;\n&lt;hr&gt;\n&lt;h5&gt;\u041e\u0422\u0417\u042b\u0412\u042b&lt;/h5&gt;\n&lt;br/&gt;\n{% if not flight.comments.all %}\n    This post doesn't have any comments yet&lt;a href=\"{% url 'add-comment' flight.pk %}\"&gt;  Add first&lt;/a&gt;\n    &lt;br/&gt;&lt;br/&gt;\n    &lt;hr&gt;\n{% else %}\n    &lt;a href=\"{% url 'add-comment' flight.pk %}\"&gt;Add comment&lt;/a&gt;\n    &lt;br/&gt;&lt;br/&gt;\n    {% for comment in flight.comments.all %}\n        &lt;strong&gt;{{ comment.author.first_name }}  {{ comment.author.last_name }}&lt;/strong&gt;&lt;br/&gt;\n        &lt;small&gt;\u0414\u0430\u0442\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f: {{ comment.date_added }} &lt;/small&gt;&lt;br/&gt;\n        \u041e\u0446\u0435\u043d\u043a\u0430: {{ comment.rating }}&lt;/br&gt;\n        &lt;br/&gt;{{ comment.text }}\n        &lt;br/&gt;\n        &lt;hr&gt;\n    {% endfor %}\n{% endif %}\n&lt;br/&gt;&lt;br/&gt;\n\n\n\n&lt;a href=\"{% url 'user-page' user.pk %}\" class=\"btn btn-dark\"&gt;\u041d\u0430\u0437\u0430\u0434&lt;/a&gt;\n\n{% endblock %}\n\n</code></pre> <p> \u041b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442  \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u044b\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0435 \u0431\u0438\u043b\u0435\u0442\u044b \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0437\u0430\u0442\u0435\u043c \u0432\u0441\u0435 \u0440\u0435\u0439\u0441\u044b \u0438\u0437 \u044d\u0442\u0438\u0445 \u0431\u0438\u043b\u0435\u0442\u043e\u0432. \u0420\u0435\u0439\u0441\u044b \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \u043f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0435 \u0438 \u043d\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u043e\u044f\u0449\u0438\u0435.</p> <pre><code>\ndef UserWithFlightsView(request, user_id):\n    tickets = Ticket.objects.filter(traveler_id=user_id)\n    tick = []\n    for i in range(len(tickets)):\n        tick.append(tickets[i].flight_id.pk)\n    flights = Flight.objects.filter(pk__in=tick)\n    flights_1 = flights.filter(departure_time__date__gt=datetime.now().date())\n    flights_2 = flights.filter(departure_time__date__lte=datetime.now().date())\n    user = get_object_or_404(Traveler, pk=user_id)\n    return render(request, 'user_page.html', {'tickets': tickets, 'flights_1': flights_1, 'flights_2': flights_2, 'user': user})\n\n</code></pre> <p>HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b  \u0420\u0435\u0439\u0441\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u0432 \u0432\u0438\u0434\u0435 \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u043b\u0435\u0442\u0430 \u0438 \u043f\u0440\u0438\u043b\u0435\u0442\u0430 , \u0430\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438, \u043c\u043e\u0434\u0435\u043b\u0438 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430, \u043d\u043e\u043c\u0435\u0440\u0430 \u0432\u044b\u0445\u043e\u0434\u0430 \u0438 \u043c\u0435\u0441\u0442\u0430. \u0412\u043d\u0438\u0437\u0443 \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0435 2 \u0432\u0438\u0434\u0430 \u043a\u043d\u043e\u043f\u043e\u043a: 1)\u0435\u0441\u043b\u0438 \u0440\u0435\u0439\u0441 \u043f\u0440\u0435\u0434\u0441\u0442\u043e\u044f\u0449\u0438\u0439 - 2 \u043a\u043e\u043d\u043e\u043f\u043a\u0438:  \"\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442\" \u0438 \"\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442\"; 2) \u0435\u0441\u043b\u0438 \u043f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0439 - \"\u041e\u0442\u0437\u044b\u0432\u044b\", \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u0435\u0434\u0435\u0442 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043a\u0443 \u0440\u0435\u0439\u0441\u0430 \u0441 \u043e\u0442\u0437\u044b\u0432\u0430\u043c\u0438. \u0422\u0430\u043a \u043d\u0435\u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0435 \u0441\u043c\u043e\u0436\u0435\u0442 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438, \u0442\u0430\u043a \u043a\u0430\u043a \u0443 \u043d\u0435\u0433\u043e \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443.</p> <pre><code>\n{% extends 'base.html' %}\n\n{% block content %}\n&lt;h2&gt; {{ user.first_name }} {{ user.last_name }} &lt;/h2&gt;&lt;/br&gt;\n\n&lt;hr&gt;\n&lt;/br&gt;\n&lt;h4&gt; \u041c\u043e\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u043e\u044f\u0449\u0438\u0435 \u0440\u0435\u0439\u0441\u044b: &lt;/h4&gt;\n{% if flights_1.count != 0 %}\n    {% for f in flights_1 %}\n        &lt;div class=\"card mb-3\" style=\"max-width: 540px;\"&gt;\n          &lt;div class=\"row g-0 \"&gt;\n              &lt;div class=\"card-body\"&gt;\n                &lt;h5 class=\"card-title\"&gt;{{ f.departure_site }} - {{ f.landing_site }}&lt;/h5&gt;\n                &lt;p class=\"card-text\"&gt;{{ f.departure_time }}-{{ f.landing_time}}&lt;/p&gt;\n                &lt;p class=\"card-text\"&gt;&lt;small class=\"text-body-secondary\"&gt;\u0410\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f \"{{ f.airline }}\" \u041c\u043e\u0434\u0435\u043b\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430: {{ f.plane_id.name}}&lt;/small&gt;&lt;/p&gt;\n                  {% for t in tickets %}\n                  {% if f.pk == t.flight_id.pk %}\n                  &lt;p class=\"card-text\"&gt;&lt;small class=\"text-body-secondary\"&gt;\u041d\u043e\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u0430: {{ f.gate }} \u041c\u0435\u0441\u0442\u043e: {{ t.seat_id.name }} \u041a\u043b\u0430\u0441\u0441: {{ t.seat_id.category }}\n                      {% if t.baggage == True %} (\u0441 \u0431\u0430\u0433\u0430\u0436\u043e\u043c) {% else %} (\u0431\u0435\u0437 \u0431\u0430\u0433\u0430\u0436\u0430) {% endif %}&lt;/small&gt;&lt;/p&gt;\n                      &lt;a href=\"{% url 'delete-ticket' user_id=user.pk pk=t.pk %}\" class=\"btn btn-outline-danger\"&gt;\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442&lt;/a&gt;\n                      &lt;a href=\"{% url 'update-ticket' user_id=user.pk pk=t.pk %}\" class=\"btn btn-outline-warning\"&gt;\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442&lt;/a&gt;&lt;/br&gt;\n                  {% endif %}\n                  {% endfor %}\n              &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n    {% endfor %}\n    &lt;/br&gt;\n{% else %}\n &lt;p&gt;\u0423 \u0432\u0430\u0441 \u043d\u0435\u0442 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u043f\u0443\u0442\u0435\u0448\u0435\u0441\u0442\u0432\u0438\u0439&lt;/p&gt;\n{% endif %}\n\n&lt;h4&gt; \u041c\u043e\u0438 \u043f\u0440\u043e\u0448\u0435\u0434\u0448\u0438\u0435 \u0440\u0435\u0439\u0441\u044b: &lt;/h4&gt;\n{% if flights_2.count != 0 %}\n    {% for f in flights_2 %}\n        &lt;div class=\"card mb-3\" style=\"max-width: 540px;\"&gt;\n          &lt;div class=\"row g-0 \"&gt;\n              &lt;div class=\"card-body\"&gt;\n                &lt;h5 class=\"card-title\"&gt;{{ f.departure_site }} - {{ f.landing_site }}&lt;/h5&gt;\n                &lt;p class=\"card-text\"&gt;{{ f.departure_time }}-{{ f.landing_time}}&lt;/p&gt;\n                &lt;p class=\"card-text\"&gt;&lt;small class=\"text-body-secondary\"&gt;\u0410\u0432\u0438\u0430\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u044f \"{{ f.airline }}\" \u041c\u043e\u0434\u0435\u043b\u044c \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0430: {{ f.plane_id.name}}&lt;/small&gt;&lt;/p&gt;\n                &lt;a href=\"{% url 'flight-detail' f.pk %}\" class=\"btn btn-outline-primary\"&gt;\u041e\u0442\u0437\u044b\u0432\u044b&lt;/a&gt;&lt;/br&gt;\n              &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n    {% endfor %}\n&lt;/br&gt;\n{% else %}\n &lt;p&gt;\u0412\u044b \u043f\u043e\u043a\u0430 \u043d\u0438\u043a\u0443\u0434\u0430 \u043d\u0435 \u043b\u0435\u0442\u0430\u043b\u0438&lt;/p&gt;\n{% endif %}\n&lt;/br&gt;&lt;hr&gt;&lt;/br&gt;\n&lt;a href=\"{% url 'home' %}\" class=\"btn btn-dark\"&gt;\u041d\u0430 \u0433\u043b\u0430\u0432\u043d\u0443\u044e&lt;/a&gt;\n\n\n{% endblock %}\n\n</code></pre> <p> </p> <p>\u0421\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0435 \u043c\u0435\u0441\u0442\u0430  \u0412\u044b\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0435 \u043c\u0435\u0441\u0442\u0430 \u043d\u0430 \u0441\u0430\u043c\u043e\u043b\u0435\u0442\u0435, \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043a \u0440\u0435\u0439\u0441\u0443,  \u0437\u0430\u0442\u0435\u043c \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044e\u0442\u0441\u044f \u0432\u0441\u0435 \u043c\u0435\u0441\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0441\u0442\u044c \u0432 \u0431\u0438\u043b\u0435\u0442\u0430\u0445 \u043d\u0430 \u044d\u0442\u043e\u0442 \u0440\u0435\u0439\u0441.</p> <pre><code>\ndef SeatsView(request, flight_id):\n    flight = get_object_or_404(Flight, pk=flight_id)\n    tickets = Ticket.objects.filter(flight_id=flight_id)\n    tick = []\n    for i in range(len(tickets)):\n        tick.append(tickets[i].seat_id.name)\n    seats = Seat.objects.filter(plane_id=flight.plane_id)\n    seats = seats.exclude(pk__in=tick)\n    user_ticket = tickets.filter(traveler_id=request.user.pk)\n    return render(request, 'seats.html', {'seats': seats, 'flight': flight, 'tickets': user_ticket})\n\n</code></pre> <p>HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441 \u043c\u0435\u0441\u0442\u0430\u043c\u0438 \u0415\u0441\u043b\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043c\u0435\u0441\u0442 == 0, \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 - \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f, \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d \u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c (\u043d\u0435\u0442 - \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u043f\u0438\u0441\u043e\u043a \u043c\u0435\u0441\u0442 \u0431\u0435\u0437 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c), \u043f\u043e\u0442\u043e\u043c \u0435\u0441\u0442\u044c \u043b\u0438 \u0443 \u043d\u0435\u0433 \u0431\u0438\u043b\u0435\u0442\u044b: \u043d\u0435\u0442 - \u043c\u043e\u0436\u043d\u043e \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u0435\u0441\u0442\u044c - \u043d\u0435\u043b\u044c\u0437\u044f.</p> <pre><code>\n{% extends 'base.html' %}\n\n{% block content %}\n\n{% if seats.count != 0 %}\n    {% if user.is_authenticated %}\n        {% if tickets.count != 0 %}\n            {% for s in seats %}\n                    &lt;li&gt;{{ s.name }} ({{ s.category }}-\u043a\u043b\u0430\u0441\u0441)&lt;/br&gt;&lt;/br&gt;&lt;/li&gt;\n                {% endfor %}\n            {% else %}\n                {% for s in seats %}\n                    &lt;li&gt;{{ s.name }} ({{ s.category }}-\u043a\u043b\u0430\u0441\u0441)&lt;a href=\"{% url 'booking-seat' flight_id=flight.pk seat_id=s.name %}\" class=\"btn btn-outline-primary btn-sm\"&gt;\u0417\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0441\u0442\u043e&lt;/a&gt;&lt;/br&gt;&lt;/br&gt;&lt;/li&gt;\n                {% endfor %}\n        {% endif %}\n    {% else %}\n        {% for s in seats %}\n            &lt;li&gt;{{ s.name }} ({{ s.category }}-\u043a\u043b\u0430\u0441\u0441)&lt;/br&gt;&lt;/br&gt;&lt;/li&gt;\n        {% endfor %}\n    {% endif %}\n{% else %}\n&lt;p&gt;\u0411\u0438\u043b\u0435\u0442\u043e\u0432 \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043d\u0435\u0442 :( &lt;/br&gt; \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0437\u0430\u0433\u043b\u044f\u043d\u0443\u0442\u044c \u043f\u043e\u043f\u043e\u0437\u0436\u0435&lt;/p&gt;\n{% endif %}\n&lt;/br&gt;\n&lt;a href=\"{% url 'home' %}\" class=\"btn btn-dark\"&gt;\u041a \u0440\u0435\u0439\u0441\u0430\u043c&lt;/a&gt;\n{% endblock %}\n\n</code></pre> <p> </p> <p>\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043c\u043e\u0436\u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430\u043b\u0438\u0447\u0438\u0435/\u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0431\u0430\u0433\u0430\u0436\u0430 </p> <pre><code>\nclass TicketUpdateView(UpdateView):\n    model = Ticket\n    template_name = 'update_booking.html'\n    form_class = TicketForm\n\n    def get_success_url(self):\n        return reverse('user-page', kwargs={'user_id': self.request.user.pk})\n\n    def form_valid(self, form):\n        form.instance.traveler_id = self.request.user\n        form.instance.flight_id = Flight.objects.get(pk=Ticket.objects.get(pk=self.kwargs['pk']).flight_id.pk)\n        form.instance.seat_id = Seat.objects.get(pk=Ticket.objects.get(pk=self.kwargs['pk']).seat_id.pk)\n        return super().form_valid(form)\n\n</code></pre> <p>HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0441 \u043c\u0435\u0441\u0442\u0430\u043c\u0438</p> <pre><code>\n{% extends 'base.html' %}\n\n{% block content %}\n\n&lt;h1&gt;\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442&lt;/h1&gt;&lt;/br&gt;\n&lt;form method=\"post\"&gt;\n    {% csrf_token %}\n    {{ form.as_p }}\n    &lt;br/&gt;&lt;button type=\"submit\" class=\"btn btn-warning\"&gt;\u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c&lt;/button&gt;\n&lt;/form&gt;\n&lt;br/&gt;&lt;a href=\"{% url 'user-page' user.pk %}\" class=\"btn btn-dark\"&gt;\u041d\u0430\u0437\u0430\u0434 \u0432 \u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442&lt;/a&gt;\n\n{% endblock %}\n\n</code></pre> <p></p> <p>\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</p> <pre><code>\nclass TicketDeleteView(DeleteView):\n    model = Ticket\n    template_name = 'delete_booking.html'\n\n    def get_success_url(self):\n        return reverse('user-page', kwargs={'user_id': self.request.user.pk})\n\n</code></pre> <p>HTML-\u043a\u043e\u0434 \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0435\u043d\u0438\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043c\u0435\u0441\u0442\u0430</p> <pre><code>\n{% extends 'base.html' %}\n\n{% block content %}\n\n&lt;h1&gt;\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442&lt;/h1&gt;&lt;br/&gt;\n&lt;p&gt;\u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0431\u0438\u043b\u0435\u0442?&lt;/p&gt;\n&lt;form method=\"post\"&gt;\n    {% csrf_token %}\n    &lt;br/&gt;&lt;button type=\"submit\" class=\"btn btn-danger\"&gt;\u0423\u0434\u0430\u043b\u0438\u0442\u044c&lt;/button&gt;\n&lt;/form&gt;\n&lt;br/&gt;&lt;a href=\"{% url 'user-page' user.pk %}\" class=\"btn btn-dark\"&gt;\u041d\u0430\u0437\u0430\u0434 \u0432 \u043b\u0438\u0447\u043d\u044b\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442&lt;/a&gt;\n\n{% endblock %}\n\n</code></pre> <p></p>"}]}
{"config":{"lang":["ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","text":""},{"location":"#django2","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django2\"","text":"<ul> <li>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162</li> </ul>"},{"location":"home/","title":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","text":""},{"location":"home/#django2","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django2\"","text":"<ul> <li>\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162</li> </ul>"},{"location":"lab_2/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django2.","text":"<p>\u0426\u0435\u043b\u044c: \u043e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django.</p>"},{"location":"lab_2/#_1","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438","text":"<ul> <li>\u041c\u043e\u0434\u0435\u043b\u0438</li> <li>\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f</li> <li>\u0424\u043e\u0440\u043c\u044b</li> <li>\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438</li> <li>Templates</li> <li>URLs</li> <li>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438</li> <li>Admin</li> </ul>"},{"location":"models/","title":"\u041c\u043e\u0434\u0435\u043b\u0438","text":""},{"location":"models/#with-a-title","title":"With a title","text":"<p>``` py title=\"models.py\" from django.conf import settings from django.contrib.auth.models import AbstractUser from django.core.exceptions import PermissionDenied from django.db import models from django.urls import reverse, reverse_lazy</p> <p>class Hotel(models.Model):     name = models.CharField(max_length=50)     owner = models.CharField(max_length=100)     address = models.CharField(max_length=200)     description = models.TextField()</p> <pre><code>def __str__(self):\n    return f'{self.name}'\n</code></pre> <p>class Room(models.Model):     ROOM_CATEGORIES = (         ('SINGLE', 'Single Room'),         ('DOUBLE', 'Double Room'),         ('FAMILY', 'Family Room'),         ('DELUXE', 'Deluxe Room'),         ('SUITE', 'Suite'),     )     number = models.IntegerField()     category = models.CharField(max_length=6, choices=ROOM_CATEGORIES)     beds = models.IntegerField()     capacity = models.IntegerField()     cost = models.DecimalField(max_digits=10, decimal_places=2)     amenities = models.TextField()     hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE)</p> <pre><code>def __str__(self):\n    return f'{self.number} {self.category} room'\n</code></pre> <p>class Bookings(models.Model):     user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)     room = models.ForeignKey(Room, on_delete=models.CASCADE)     check_in = models.DateTimeField()     check_out = models.DateTimeField()</p> <pre><code>def __str__(self):\n    return f'{self.user} has booked {self.room} from {self.check_in} to {self.check_out}'\n\ndef get_room_category(self):\n    room_categories = dict(self.room.ROOM_CATEGORIES)\n    room_category = room_categories.get(self.room.category)\n    return room_category\n\ndef get_cancel_booking_url(self):\n    return reverse_lazy('hotel:CancelBookingView', args=[self.pk, ])\n\ndef edit_booking(self):\n    return reverse_lazy('hotel:EditBookingView', args=[self.pk, ])\n\ndef create_review(self, rating, text):\n    review = Review.objects.create(user=self.user, room=self.room, rating=rating, text=text)\n    return review\n</code></pre> <p>class Review(models.Model):     user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)     rating = models.PositiveIntegerField(default=5, choices=[(i, i) for i in range(1, 11)])     text = models.TextField()     room = models.ForeignKey(Room, on_delete=models.CASCADE)     booking = models.ForeignKey(Bookings, on_delete=models.CASCADE)</p> <pre><code>def __str__(self):\n    return f'Review by {self.user} for {self.room}'\n</code></pre> <p>class Confirmation(models.Model):     booking = models.OneToOneField(Bookings, on_delete=models.CASCADE)     is_confirmed = models.BooleanField(default=False)     confirmed_by = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, blank=True, null=True)     confirmation_date = models.DateTimeField(auto_now_add=True)</p> <pre><code>def save(self, *args, **kwargs):\n    if self.confirmed_by and not self.confirmed_by.is_staff:\n        raise PermissionDenied(\"Only staff members can confirm bookings.\")\n    super(Confirmation, self).save(*args, **kwargs)\n</code></pre> <p>class CustomUser(AbstractUser):     first_name = models.CharField(max_length=20, blank=True)     last_name = models.CharField(max_length=20, blank=True)     birth_date = models.DateField(blank=True, null=True)</p> <p>class Profile(models.Model):     user = models.OneToOneField(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)     birth_date = models.DateField(null=True, blank=True)</p> <p>```</p>"}]}
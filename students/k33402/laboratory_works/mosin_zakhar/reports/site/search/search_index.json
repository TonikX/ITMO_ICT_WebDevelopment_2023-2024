{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\" \u0420\u0430\u0431\u043e\u0442\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0443\u0447\u0435\u043d\u0438\u043a \u0433\u0440\u0443\u043f\u043f\u044b K33402 \u041c\u043e\u0441\u0438\u043d \u0417\u0430\u0445\u0430\u0440. \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b: \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 4","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\""},{"location":"#web-","text":"\u0420\u0430\u0431\u043e\u0442\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0443\u0447\u0435\u043d\u0438\u043a \u0433\u0440\u0443\u043f\u043f\u044b K33402 \u041c\u043e\u0441\u0438\u043d \u0417\u0430\u0445\u0430\u0440.","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\""},{"location":"#_1","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 4","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b:"},{"location":"lab1/","text":"\u041b\u0410\u0411\u041e\u0420\u0410\u0422\u041e\u0420\u041d\u0410\u042f \u0420\u0410\u0411\u041e\u0422\u0410 \u21161 : \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438 \u0426\u0435\u043b\u044c: \u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u043a\u0435\u0442\u043e\u0432. \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0417\u0430\u0434\u0430\u043d\u0438\u0435 1 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP client.py: import socket enc = \"utf-8\" port = 2448 buffsize = 1024 s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.connect((\"localhost\", port)) data = bytes(\"Hello, server\", enc) s.send(data) print(\"Sent data to server:\", data.decode(enc)) data = s.recv(buffsize) print(\"Received data from server:\", data.decode(enc)) server.py: import socket import signal enc = \"utf-8\" port = 2448 buffsize = 1024 s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.bind((\"localhost\", port)) signal.signal(signal.SIGINT, signal.SIG_DFL) while True: s.settimeout(60) try: data, addr = s.recvfrom(buffsize) print(\"Received data from client:\", data.decode(enc)) data = bytes(\"Hello, client\", enc) s.sendto(data, addr) print(\"Sent data to client:\", data.decode(enc)) except socket.timeout: print(\"No data has been received from client within 60 seconds ._.\") break except KeyboardInterrupt: print(\"Server terminated by user :(\") break s.close() \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u0438\u044f 1 \u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b: a. \u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 b. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f. (\u041c\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442) c. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438. d. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f : \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP. client.py: import socket enc = \"utf-8\" port = 2448 buffsize = 1024 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((\"localhost\", port)) while True: a = int(input(\"Enter a: \")) b = int(input(\"Enter b: \")) c = int(input(\"Enter c: \")) data = \"{} {} {}\".format(a, b, c) s.send(data.encode(enc)) print(\"Sent data to server:\", data) response = s.recv(buffsize) print(\"Received data from server:\", response.decode(enc)) if input(\"Continue? Y/N: \").lower() == \"n\": break s.close() server.py: import socket import signal enc = \"utf-8\" port = 2448 def solve_quadratic_equation(a, b, c): if a == 0 or a is None: return None, None if b == 0 or b is None: return None, None if c == 0 or c is None: return 0, 0 d = b ** 2 - 4 * a * c if d < 0: return None, None x1 = (-b + d ** 0.5) / (2 * a) x2 = (-b - d ** 0.5) / (2 * a) return x1, x2 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) s.bind((\"localhost\", port)) s.listen(1) signal.signal(signal.SIGINT, signal.SIG_DFL) print(\"Waiting for a connection...\") while True: try: client_socket, client_address = s.accept() print(\"Accepted connection from: \", client_address) data = client_socket.recv(1024) print(\"Received data from client: \", data.decode(enc)) a, b, c = map(int, data.decode(enc).split()) x1, x2 = solve_quadratic_equation(a, b, c) if x1 is None: response = \"No roots\" else: response = \"x1 = {}, x2 = {}\".format(x1, x2) client_socket.send(response.encode(enc)) print(\"Sent data to client: \", response) client_socket.close() except KeyboardInterrupt: print(\"Server terminated by user.\") break s.close() \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u0438\u044f 2 \u0417\u0430\u0434\u0430\u043d\u0438\u0435 3 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f : \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. server.py import socket import signal port = 2448 buffsize = 1024 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind((\"localhost\", port)) s.listen(1) signal.signal(signal.SIGINT, signal.SIG_DFL) def send_html_response(client_socket): with open(\"index.html\", \"rb\") as html_file: html_content = html_file.read() response = b\"HTTP/1.1 200 OK\\r\\n\" response += b\"Content-Type: text/html\\r\\n\" response += b\"Content-Length: \" + str(len(html_content)).encode() + b\"\\r\\n\" response += b\"\\r\\n\" response += html_content client_socket.send(response) while True: try: print(\"Waiting for client to connect\") client_socket, client_address = s.accept() print(\"Accepted connection from: \", client_address) request = client_socket.recv(buffsize) print(request.decode()) send_html_response(client_socket) client_socket.close() except KeyboardInterrupt: print(\"Server terminated by user.\") break \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u0438\u044f 3 \u0417\u0430\u0434\u0430\u043d\u0438\u0435 4 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP \u2013 100% \u0431\u0430\u043b\u043b\u043e\u0432, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e UDP \u2013 80%. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading. \u0414\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e UDP, thearding \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441 TCP \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0418 \u043f\u0440\u0438\u0435\u043c \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432\u0441\u0435\u043c \u044e\u0437\u0435\u0440\u0430\u043c \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0432 \u043f\u043e\u0442\u043e\u043a\u0430\u0445. \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u044e\u0437\u0435\u0440\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0442\u043e\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. client.py: import socket import threading enc = \"utf-8\" port = 2448 def receive_messages(client_socket): while True: try: incoming_message = client_socket.recv(1024).decode(enc) if not incoming_message: break else: print(f\"-{incoming_message.strip()}\") except Exception as e: print(\"Error while receiving message:\", e) break def main(): client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect((\"localhost\", port)) username = input(\"Enter username: \") client_socket.send(username.encode(enc)) receive_thread = threading.Thread(target=receive_messages, args=(client_socket,)) receive_thread.daemon = True # thread dies when main thread (the only non-daemon thread) exits. receive_thread.start() while True: message = input(\"\") client_socket.send(message.encode(enc)) if message.lower() == \"quit\": break client_socket.close() if __name__ == \"__main__\": main() server.py: import socket import threading import signal enc = \"utf-8\" port = 2448 buffsize = 1024 clients = {} def handle_client(client_socket, username): try: while True: message = client_socket.recv(1024).decode(enc) if not message: break for client, user in clients.items(): if client != client_socket: client.send(f\"{username}: {message}\".encode(enc)) except Exception as e: print(\"Error occurred: \", e) finally: del clients[client_socket] client_socket.close() print(username, \" just disconnected\") def main(): server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind((\"localhost\", port)) server_socket.listen(5) signal.signal(signal.SIGINT, signal.SIG_DFL) print(\"Waiting for a connection...\") while True: client_socket, client_address = server_socket.accept() print(\"Accepted connection from: \", client_address) username = client_socket.recv(buffsize).decode(enc).strip() clients[client_socket] = username client_thread = threading.Thread(target=handle_client, args=(client_socket, username)) client_thread.start() if __name__ == \"__main__\": main() \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u0438\u044f 4 \u0417\u0430\u0434\u0430\u043d\u0438\u0435 5 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0441\u0438\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. server.py: import socket import re import signal port = 2448 enc = \"utf-8\" student_marks = { \"Zahar\": [9], \"Alexei\": [88], \"Maksim\": [33] } html_template = \"\"\" <!DOCTYPE html> <html> <head> <title>Points</title> </head> <body> <h1>Student Points</h1> <ul> {student_list} </ul> <form method=\"post\" action=\"/\"> <label for=\"name\">Name:</label> <input type=\"text\" id=\"name\" name=\"name\" required> <br><br> <label for=\"marks\">Points:</label> <input type=\"number\" id=\"marks\" name=\"marks\" required> <br><br> <input type=\"submit\" value=\"Submit\"> </form> </body> </html> \"\"\" def generate_student_list(): student_list = \"\" for name, marks in student_marks.items(): mark_str = \", \".join(map(str, marks)) student_list += f\"<li> {name} : {mark_str}\" return student_list def handle_request(request): print(request) if request.startswith(\"GET\"): response_body = html_template.format(student_list=generate_student_list()) response = f\"HTTP/1.1 200 OK\\r\\nContent-Length: {len(response_body)}\\r\\n\\r\\n{response_body}\" elif request.startswith(\"POST\"): match = re.search(r\"name=(\\w+)&marks=(\\d+)\", request).groups() if match: post_data = match name, mark = post_data[0], int(post_data[1]) if name in student_marks: student_marks[name].append(mark) else: student_marks[name] = [] student_marks[name].append(mark) response = \"HTTP/1.1 302 Found\\r\\nLocation: /\" else: response = \"HTTP/1.1 400 Bad Request\\r\\nContent-Length: 0\\r\\n\\r\\n\" else: response = \"HTTP/1.1 400 Bad Request\\r\\nContent-Length: 0\\r\\n\\r\\n\" return response def main(): server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind((\"localhost\", port)) server_socket.listen(5) signal.signal(signal.SIGINT, signal.SIG_DFL) print(\"Server is listening on port \", port) while True: client_socket, client_address = server_socket.accept() print(\"Accepted connection from: \", client_address) request = client_socket.recv(1024).decode(enc) response = handle_request(request) client_socket.sendall(response.encode(enc)) client_socket.close() if __name__ == \"__main__\": main() \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u0438\u044f 5","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 1"},{"location":"lab1/#no1","text":"\u0426\u0435\u043b\u044c: \u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u043a\u0435\u0442\u043e\u0432.","title":"\u041b\u0410\u0411\u041e\u0420\u0410\u0422\u041e\u0420\u041d\u0410\u042f \u0420\u0410\u0411\u041e\u0422\u0410 \u21161 : \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438"},{"location":"lab1/#_1","text":"","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab1/#1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP client.py: import socket enc = \"utf-8\" port = 2448 buffsize = 1024 s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.connect((\"localhost\", port)) data = bytes(\"Hello, server\", enc) s.send(data) print(\"Sent data to server:\", data.decode(enc)) data = s.recv(buffsize) print(\"Received data from server:\", data.decode(enc)) server.py: import socket import signal enc = \"utf-8\" port = 2448 buffsize = 1024 s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) s.bind((\"localhost\", port)) signal.signal(signal.SIGINT, signal.SIG_DFL) while True: s.settimeout(60) try: data, addr = s.recvfrom(buffsize) print(\"Received data from client:\", data.decode(enc)) data = bytes(\"Hello, client\", enc) s.sendto(data, addr) print(\"Sent data to client:\", data.decode(enc)) except socket.timeout: print(\"No data has been received from client within 60 seconds ._.\") break except KeyboardInterrupt: print(\"Server terminated by user :(\") break s.close()","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"lab1/#1_1","text":"","title":"\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u0438\u044f 1"},{"location":"lab1/#2","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0412\u0430\u0440\u0438\u0430\u043d\u0442\u044b: a. \u0422\u0435\u043e\u0440\u0435\u043c\u0430 \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u0430 b. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f. (\u041c\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442) c. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u0442\u0440\u0430\u043f\u0435\u0446\u0438\u0438. d. \u041f\u043e\u0438\u0441\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u0438 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u043e\u0433\u0440\u0430\u043c\u043c\u0430. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f : \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP. client.py: import socket enc = \"utf-8\" port = 2448 buffsize = 1024 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((\"localhost\", port)) while True: a = int(input(\"Enter a: \")) b = int(input(\"Enter b: \")) c = int(input(\"Enter c: \")) data = \"{} {} {}\".format(a, b, c) s.send(data.encode(enc)) print(\"Sent data to server:\", data) response = s.recv(buffsize) print(\"Received data from server:\", response.decode(enc)) if input(\"Continue? Y/N: \").lower() == \"n\": break s.close() server.py: import socket import signal enc = \"utf-8\" port = 2448 def solve_quadratic_equation(a, b, c): if a == 0 or a is None: return None, None if b == 0 or b is None: return None, None if c == 0 or c is None: return 0, 0 d = b ** 2 - 4 * a * c if d < 0: return None, None x1 = (-b + d ** 0.5) / (2 * a) x2 = (-b - d ** 0.5) / (2 * a) return x1, x2 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) s.bind((\"localhost\", port)) s.listen(1) signal.signal(signal.SIGINT, signal.SIG_DFL) print(\"Waiting for a connection...\") while True: try: client_socket, client_address = s.accept() print(\"Accepted connection from: \", client_address) data = client_socket.recv(1024) print(\"Received data from client: \", data.decode(enc)) a, b, c = map(int, data.decode(enc).split()) x1, x2 = solve_quadratic_equation(a, b, c) if x1 is None: response = \"No roots\" else: response = \"x1 = {}, x2 = {}\".format(x1, x2) client_socket.send(response.encode(enc)) print(\"Sent data to client: \", response) client_socket.close() except KeyboardInterrupt: print(\"Server terminated by user.\") break s.close()","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"lab1/#2_1","text":"","title":"\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u0438\u044f 2"},{"location":"lab1/#3","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f : \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket. server.py import socket import signal port = 2448 buffsize = 1024 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind((\"localhost\", port)) s.listen(1) signal.signal(signal.SIGINT, signal.SIG_DFL) def send_html_response(client_socket): with open(\"index.html\", \"rb\") as html_file: html_content = html_file.read() response = b\"HTTP/1.1 200 OK\\r\\n\" response += b\"Content-Type: text/html\\r\\n\" response += b\"Content-Length: \" + str(len(html_content)).encode() + b\"\\r\\n\" response += b\"\\r\\n\" response += html_content client_socket.send(response) while True: try: print(\"Waiting for client to connect\") client_socket, client_address = s.accept() print(\"Accepted connection from: \", client_address) request = client_socket.recv(buffsize) print(request.decode()) send_html_response(client_socket) client_socket.close() except KeyboardInterrupt: print(\"Server terminated by user.\") break","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3"},{"location":"lab1/#3_1","text":"","title":"\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u0438\u044f 3"},{"location":"lab1/#4","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP \u2013 100% \u0431\u0430\u043b\u043b\u043e\u0432, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e UDP \u2013 80%. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading. \u0414\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e UDP, thearding \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441 TCP \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0418 \u043f\u0440\u0438\u0435\u043c \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432\u0441\u0435\u043c \u044e\u0437\u0435\u0440\u0430\u043c \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0432 \u043f\u043e\u0442\u043e\u043a\u0430\u0445. \u041d\u0435 \u0437\u0430\u0431\u0443\u0434\u044c\u0442\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u044e\u0437\u0435\u0440\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0442\u043e\u043c \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f. client.py: import socket import threading enc = \"utf-8\" port = 2448 def receive_messages(client_socket): while True: try: incoming_message = client_socket.recv(1024).decode(enc) if not incoming_message: break else: print(f\"-{incoming_message.strip()}\") except Exception as e: print(\"Error while receiving message:\", e) break def main(): client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) client_socket.connect((\"localhost\", port)) username = input(\"Enter username: \") client_socket.send(username.encode(enc)) receive_thread = threading.Thread(target=receive_messages, args=(client_socket,)) receive_thread.daemon = True # thread dies when main thread (the only non-daemon thread) exits. receive_thread.start() while True: message = input(\"\") client_socket.send(message.encode(enc)) if message.lower() == \"quit\": break client_socket.close() if __name__ == \"__main__\": main() server.py: import socket import threading import signal enc = \"utf-8\" port = 2448 buffsize = 1024 clients = {} def handle_client(client_socket, username): try: while True: message = client_socket.recv(1024).decode(enc) if not message: break for client, user in clients.items(): if client != client_socket: client.send(f\"{username}: {message}\".encode(enc)) except Exception as e: print(\"Error occurred: \", e) finally: del clients[client_socket] client_socket.close() print(username, \" just disconnected\") def main(): server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind((\"localhost\", port)) server_socket.listen(5) signal.signal(signal.SIGINT, signal.SIG_DFL) print(\"Waiting for a connection...\") while True: client_socket, client_address = server_socket.accept() print(\"Accepted connection from: \", client_address) username = client_socket.recv(buffsize).decode(enc).strip() clients[client_socket] = username client_thread = threading.Thread(target=handle_client, args=(client_socket, username)) client_thread.start() if __name__ == \"__main__\": main()","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4"},{"location":"lab1/#4_1","text":"","title":"\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u0438\u044f 4"},{"location":"lab1/#5","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0441\u0438\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. server.py: import socket import re import signal port = 2448 enc = \"utf-8\" student_marks = { \"Zahar\": [9], \"Alexei\": [88], \"Maksim\": [33] } html_template = \"\"\" <!DOCTYPE html> <html> <head> <title>Points</title> </head> <body> <h1>Student Points</h1> <ul> {student_list} </ul> <form method=\"post\" action=\"/\"> <label for=\"name\">Name:</label> <input type=\"text\" id=\"name\" name=\"name\" required> <br><br> <label for=\"marks\">Points:</label> <input type=\"number\" id=\"marks\" name=\"marks\" required> <br><br> <input type=\"submit\" value=\"Submit\"> </form> </body> </html> \"\"\" def generate_student_list(): student_list = \"\" for name, marks in student_marks.items(): mark_str = \", \".join(map(str, marks)) student_list += f\"<li> {name} : {mark_str}\" return student_list def handle_request(request): print(request) if request.startswith(\"GET\"): response_body = html_template.format(student_list=generate_student_list()) response = f\"HTTP/1.1 200 OK\\r\\nContent-Length: {len(response_body)}\\r\\n\\r\\n{response_body}\" elif request.startswith(\"POST\"): match = re.search(r\"name=(\\w+)&marks=(\\d+)\", request).groups() if match: post_data = match name, mark = post_data[0], int(post_data[1]) if name in student_marks: student_marks[name].append(mark) else: student_marks[name] = [] student_marks[name].append(mark) response = \"HTTP/1.1 302 Found\\r\\nLocation: /\" else: response = \"HTTP/1.1 400 Bad Request\\r\\nContent-Length: 0\\r\\n\\r\\n\" else: response = \"HTTP/1.1 400 Bad Request\\r\\nContent-Length: 0\\r\\n\\r\\n\" return response def main(): server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM) server_socket.bind((\"localhost\", port)) server_socket.listen(5) signal.signal(signal.SIGINT, signal.SIG_DFL) print(\"Server is listening on port \", port) while True: client_socket, client_address = server_socket.accept() print(\"Accepted connection from: \", client_address) request = client_socket.recv(1024).decode(enc) response = handle_request(request) client_socket.sendall(response.encode(enc)) client_socket.close() if __name__ == \"__main__\": main()","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5"},{"location":"lab1/#5_1","text":"","title":"\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0434\u0430\u043d\u0438\u044f 5"},{"location":"lab2/","text":"\u041b\u0410\u0411\u041e\u0420\u0410\u0422\u041e\u0420\u041d\u0410\u042f \u0420\u0410\u0411\u041e\u0422\u0410 \u21162 : \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u041f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0421\u0430\u0439\u0442\u0430 \u0421\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django \u0426\u0435\u043b\u044c: \u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django 2.2. \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0412\u0430\u0440\u0438\u0430\u043d\u0442 1: \u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0435\u043b\u0435\u0439 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0435\u043b\u044f, \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043e\u0442\u0435\u043b\u044f, \u0430\u0434\u0440\u0435\u0441, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0442\u0438\u043f\u044b \u043d\u043e\u043c\u0435\u0440\u043e\u0432, \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c, \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c, \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u043d\u043e\u043c\u0435\u0440\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0441\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u043e\u0442\u0435\u043b\u044c \u0438 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u0438\u0437 \u043e\u0442\u0435\u043b\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u043f\u043e\u0441\u0442\u043e\u044f\u043b\u044c\u0446\u0435\u0432 \u043e\u0442\u0435\u043b\u044f \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043c\u0435\u0441\u044f\u0446. admin.py from django.contrib import admin from django.contrib.auth.admin import UserAdmin from . import models admin.site.register(models.Passenger, UserAdmin) admin.site.register(models.City) admin.site.register(models.Hotel) admin.site.register(models.TypeOfRoom) admin.site.register(models.Room) admin.site.register(models.Reservation) admin.site.register(models.Comment) apps.py from django.apps import AppConfig class FlightsConfig(AppConfig): default_auto_field = \"django.db.models.BigAutoField\" name = \"hotels\" forms.py from django import forms from .models import Passenger, Reservation, Comment class RegistrationForm(forms.ModelForm): class Meta: model = Passenger fields = [\"username\", \"password\", \"first_name\", \"last_name\", \"email\", \"passport\"] class LoginForm(forms.ModelForm): class Meta: model = Passenger fields = [\"username\", \"password\"] class ReservationForm(forms.ModelForm): class Meta: model = Reservation fields = [\"room\", \"date_start\", \"date_finish\"] class CommentForm(forms.ModelForm): class Meta: model = Comment fields = [\"rating\", \"text\"] models.py from django.db import models from django.core.validators import MinValueValidator, MaxValueValidator from django.contrib.auth.models import AbstractUser from django.conf import settings class City(models.Model): name = models.CharField(max_length=1000) class Hotel(models.Model): name = models.CharField(max_length=50) owner = models.CharField(max_length=200) city = models.ForeignKey(\"hotels.City\", related_name=\"hotels_there\", on_delete=models.CASCADE) address = models.CharField(max_length=1000) def __str__(self): return f\"{self.name}\" class TypeOfRoom(models.Model): name = models.CharField(max_length=20) capacity = models.IntegerField() conveniences = models.CharField(max_length=1000) cost = models.FloatField() class Room(models.Model): hotel = models.ForeignKey(\"hotels.Hotel\", related_name=\"rooms\", on_delete=models.CASCADE) type = models.ForeignKey(\"hotels.TypeOfRoom\", related_name=\"rooms_of_this_type\", on_delete=models.CASCADE) number = models.CharField(max_length=10) class Reservation(models.Model): passenger = models.ForeignKey(settings.AUTH_USER_MODEL, related_name=\"user_reservations\", on_delete=models.CASCADE) room = models.ForeignKey(\"hotels.Room\", related_name=\"reserved_by\", on_delete=models.CASCADE) date_start = models.DateField() date_finish = models.DateField() class Comment(models.Model): hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE) author = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE) text = models.TextField() rating = models.IntegerField(validators=[MinValueValidator(1), MaxValueValidator(10)]) class Passenger(AbstractUser): passport = models.CharField(max_length=100) def __str__(self): return f\"{self.first_name} {self.last_name} {self.passport}\" urls.py: from django.urls import path from . import views urlpatterns = [ path(\"register/\", views.register, name=\"register\"), path(\"login/\", views.user_login, name=\"user_login\"), path(\"logout/\", views.user_logout, name=\"logout\"), path(\"hotels\", views.hotel_list, name=\"hotel_list\"), path(\"hotels/<int:hotel_id>\", views.hotel_detail, name=\"hotel_detail\"), path(\"hotels/<int:hotel_id>/reserve\", views.reserve_room, name=\"reserve_room\"), path(\"reservations/\", views.reservations_for_user, name=\"reservations_for_user\"), path(\"reservations/<int:reservation_id>/\", views.reservation_update, name=\"reservation_update\"), path(\"reservations/<int:reservation_id>/delete\", views.reservation_delete, name=\"reservation_delete\"), ] views.py import datetime from django.http import Http404 from django.contrib.auth import login, authenticate, logout from .forms import ReservationForm, RegistrationForm, LoginForm, CommentForm from .models import TypeOfRoom, Room, Reservation, Hotel, Comment, City from django.contrib.auth.decorators import login_required from django.shortcuts import render, redirect, get_object_or_404 def register(request): if request.method == \"POST\": user_form = RegistrationForm(request.POST) if user_form.is_valid(): user = user_form.save() user.set_password(user.password) user.save() return redirect(\"user_login\") else: user_form = RegistrationForm() return render(request, \"register.html\", {\"user_form\": user_form}) def user_login(request): if request.method == \"POST\": user_form = LoginForm(request.POST) username = user_form.data.get(\"username\") password = user_form.data.get(\"password\") user = authenticate(username=username, password=password) if user is None: return redirect(\"user_login\") login(request, user) return redirect(\"hotel_list\") else: user_form = LoginForm() return render(request, \"login.html\", {\"user_form\": user_form}) def user_logout(request): logout(request) return redirect(\"user_login\") def hotel_list(request): if request.method != \"GET\": return Http404(f\"Method {request.method} not supported\") capacity = request.GET.get(\"capacity\", None) city = request.GET.get(\"city\", None) available_capacities = TypeOfRoom.objects.values_list(\"capacity\", flat=True) available_cities = City.objects.values_list(\"name\", flat=True) hotels = Hotel.objects.all() if capacity is not None: hotels = hotels.filter(rooms__type__capacity__gte=capacity) if city is not None: hotels = hotels.filter(city__name=city) return render( request, \"list.html\", { \"capacity\": capacity, \"city\": city, \"available_capacities\": available_capacities, \"available_cities\": available_cities, \"hotels\": hotels }, ) def hotel_detail(request, hotel_id): hotel = get_object_or_404(Hotel, pk=hotel_id) if request.method == \"POST\": comment_form = CommentForm(request.POST) if comment_form.is_valid(): if Reservation.objects.filter(passenger=request.user, room__hotel=hotel_id).exists(): comment = comment_form.save(commit=False) comment.hotel = Hotel.objects.get(id=hotel_id) comment.author = request.user comment.save() return redirect(\"hotel_detail\", hotel_id) else: rooms_set = Room.objects.filter(hotel__id=hotel_id).order_by(\"number\") rooms = [] for room in rooms_set: if not (Reservation.objects.filter(room=room, date_start__lte=datetime.date.today(), date_finish__gte=datetime.date.today()).exists()): rooms.append( { \"name\": f\"{room.number}\", \"capacity\": f\"{room.type.capacity}\", \"conveniences\": f\"{room.type.conveniences}\", \"cost\": f\"{room.type.cost}\" } ) comments = Comment.objects.filter(hotel=hotel) comment_form = CommentForm() return render( request, \"detail.html\", { \"hotel\": hotel, \"comments\": comments, \"comments_exists\": bool(comments.count()), \"rooms\": rooms, \"user\": request.user, \"comment_form\": comment_form }, ) @login_required(login_url=\"/login/\") def reserve_room(request, hotel_id): hotel = Hotel.objects.get(id=hotel_id) if request.method == \"POST\": room = Room.objects.filter(number=request.POST[\"room\"]).first() try: date_start = datetime.datetime.strptime(request.POST[\"date-start\"], \"%d.%m.%Y\") date_finish = datetime.datetime.strptime(request.POST[\"date-finish\"], \"%d.%m.%Y\") form = ReservationForm({\"room\": room, \"date_start\": date_start, \"date_finish\": date_finish}) if not form.is_valid(): return redirect(\"hotel_detail\", hotel_id) reservation = form.save(commit=False) reservation.passenger = request.user reservation.room = room reservation.save() except Exception: return redirect(\"hotel_detail\", hotel_id) return redirect(\"hotel_detail\", hotel_id) else: return render(request, \"reserve_room.html\", {\"form\" : ReservationForm(), \"hotel\": hotel}) @login_required(login_url=\"/login/\") def reservations_for_user(request): reservations = Reservation.objects.filter(passenger=request.user) return render(request, \"reservation_for_user.html\", {\"reservations\": reservations}) def reservation_update(request, reservation_id): reservation = get_object_or_404(Reservation, id=reservation_id) if request.method == \"POST\": form = ReservationForm(data=request.POST, instance=reservation) if not form.is_valid(): return redirect(\"reservation_update\", reservation_id) form.save() return redirect(\"hotel_detail\", reservation.room.hotel.id) else: form = ReservationForm(instance=reservation) return render( request, \"reservation_update.html\", {\"form\": form, \"reservation\": reservation}, ) @login_required(login_url=\"/login/\") def reservation_delete(request, reservation_id): reservation = get_object_or_404(Reservation, id=reservation_id, passenger=request.user) if request.method == \"POST\": reservation.delete() return redirect(\"hotel_detail\", reservation.room.hotel.id) else: return render( request, \"reservation_delete.html\", {\"reservation\": reservation}, )","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 2"},{"location":"lab2/#no2-django","text":"\u0426\u0435\u043b\u044c: \u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django 2.2.","title":"\u041b\u0410\u0411\u041e\u0420\u0410\u0422\u041e\u0420\u041d\u0410\u042f \u0420\u0410\u0411\u041e\u0422\u0410 \u21162 : \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u041f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0421\u0430\u0439\u0442\u0430 \u0421\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django"},{"location":"lab2/#_1","text":"","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/#1","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0435\u043b\u044f, \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043e\u0442\u0435\u043b\u044f, \u0430\u0434\u0440\u0435\u0441, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0442\u0438\u043f\u044b \u043d\u043e\u043c\u0435\u0440\u043e\u0432, \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c, \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c, \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u043e\u043c\u0435\u0440\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u043d\u043e\u043c\u0435\u0440\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0441\u0435\u043b\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u043e\u0442\u0435\u043b\u044c \u0438 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u0438\u0437 \u043e\u0442\u0435\u043b\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u043f\u043e\u0441\u0442\u043e\u044f\u043b\u044c\u0446\u0435\u0432 \u043e\u0442\u0435\u043b\u044f \u0437\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043c\u0435\u0441\u044f\u0446. admin.py from django.contrib import admin from django.contrib.auth.admin import UserAdmin from . import models admin.site.register(models.Passenger, UserAdmin) admin.site.register(models.City) admin.site.register(models.Hotel) admin.site.register(models.TypeOfRoom) admin.site.register(models.Room) admin.site.register(models.Reservation) admin.site.register(models.Comment) apps.py from django.apps import AppConfig class FlightsConfig(AppConfig): default_auto_field = \"django.db.models.BigAutoField\" name = \"hotels\" forms.py from django import forms from .models import Passenger, Reservation, Comment class RegistrationForm(forms.ModelForm): class Meta: model = Passenger fields = [\"username\", \"password\", \"first_name\", \"last_name\", \"email\", \"passport\"] class LoginForm(forms.ModelForm): class Meta: model = Passenger fields = [\"username\", \"password\"] class ReservationForm(forms.ModelForm): class Meta: model = Reservation fields = [\"room\", \"date_start\", \"date_finish\"] class CommentForm(forms.ModelForm): class Meta: model = Comment fields = [\"rating\", \"text\"] models.py from django.db import models from django.core.validators import MinValueValidator, MaxValueValidator from django.contrib.auth.models import AbstractUser from django.conf import settings class City(models.Model): name = models.CharField(max_length=1000) class Hotel(models.Model): name = models.CharField(max_length=50) owner = models.CharField(max_length=200) city = models.ForeignKey(\"hotels.City\", related_name=\"hotels_there\", on_delete=models.CASCADE) address = models.CharField(max_length=1000) def __str__(self): return f\"{self.name}\" class TypeOfRoom(models.Model): name = models.CharField(max_length=20) capacity = models.IntegerField() conveniences = models.CharField(max_length=1000) cost = models.FloatField() class Room(models.Model): hotel = models.ForeignKey(\"hotels.Hotel\", related_name=\"rooms\", on_delete=models.CASCADE) type = models.ForeignKey(\"hotels.TypeOfRoom\", related_name=\"rooms_of_this_type\", on_delete=models.CASCADE) number = models.CharField(max_length=10) class Reservation(models.Model): passenger = models.ForeignKey(settings.AUTH_USER_MODEL, related_name=\"user_reservations\", on_delete=models.CASCADE) room = models.ForeignKey(\"hotels.Room\", related_name=\"reserved_by\", on_delete=models.CASCADE) date_start = models.DateField() date_finish = models.DateField() class Comment(models.Model): hotel = models.ForeignKey(Hotel, on_delete=models.CASCADE) author = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE) text = models.TextField() rating = models.IntegerField(validators=[MinValueValidator(1), MaxValueValidator(10)]) class Passenger(AbstractUser): passport = models.CharField(max_length=100) def __str__(self): return f\"{self.first_name} {self.last_name} {self.passport}\" urls.py: from django.urls import path from . import views urlpatterns = [ path(\"register/\", views.register, name=\"register\"), path(\"login/\", views.user_login, name=\"user_login\"), path(\"logout/\", views.user_logout, name=\"logout\"), path(\"hotels\", views.hotel_list, name=\"hotel_list\"), path(\"hotels/<int:hotel_id>\", views.hotel_detail, name=\"hotel_detail\"), path(\"hotels/<int:hotel_id>/reserve\", views.reserve_room, name=\"reserve_room\"), path(\"reservations/\", views.reservations_for_user, name=\"reservations_for_user\"), path(\"reservations/<int:reservation_id>/\", views.reservation_update, name=\"reservation_update\"), path(\"reservations/<int:reservation_id>/delete\", views.reservation_delete, name=\"reservation_delete\"), ] views.py import datetime from django.http import Http404 from django.contrib.auth import login, authenticate, logout from .forms import ReservationForm, RegistrationForm, LoginForm, CommentForm from .models import TypeOfRoom, Room, Reservation, Hotel, Comment, City from django.contrib.auth.decorators import login_required from django.shortcuts import render, redirect, get_object_or_404 def register(request): if request.method == \"POST\": user_form = RegistrationForm(request.POST) if user_form.is_valid(): user = user_form.save() user.set_password(user.password) user.save() return redirect(\"user_login\") else: user_form = RegistrationForm() return render(request, \"register.html\", {\"user_form\": user_form}) def user_login(request): if request.method == \"POST\": user_form = LoginForm(request.POST) username = user_form.data.get(\"username\") password = user_form.data.get(\"password\") user = authenticate(username=username, password=password) if user is None: return redirect(\"user_login\") login(request, user) return redirect(\"hotel_list\") else: user_form = LoginForm() return render(request, \"login.html\", {\"user_form\": user_form}) def user_logout(request): logout(request) return redirect(\"user_login\") def hotel_list(request): if request.method != \"GET\": return Http404(f\"Method {request.method} not supported\") capacity = request.GET.get(\"capacity\", None) city = request.GET.get(\"city\", None) available_capacities = TypeOfRoom.objects.values_list(\"capacity\", flat=True) available_cities = City.objects.values_list(\"name\", flat=True) hotels = Hotel.objects.all() if capacity is not None: hotels = hotels.filter(rooms__type__capacity__gte=capacity) if city is not None: hotels = hotels.filter(city__name=city) return render( request, \"list.html\", { \"capacity\": capacity, \"city\": city, \"available_capacities\": available_capacities, \"available_cities\": available_cities, \"hotels\": hotels }, ) def hotel_detail(request, hotel_id): hotel = get_object_or_404(Hotel, pk=hotel_id) if request.method == \"POST\": comment_form = CommentForm(request.POST) if comment_form.is_valid(): if Reservation.objects.filter(passenger=request.user, room__hotel=hotel_id).exists(): comment = comment_form.save(commit=False) comment.hotel = Hotel.objects.get(id=hotel_id) comment.author = request.user comment.save() return redirect(\"hotel_detail\", hotel_id) else: rooms_set = Room.objects.filter(hotel__id=hotel_id).order_by(\"number\") rooms = [] for room in rooms_set: if not (Reservation.objects.filter(room=room, date_start__lte=datetime.date.today(), date_finish__gte=datetime.date.today()).exists()): rooms.append( { \"name\": f\"{room.number}\", \"capacity\": f\"{room.type.capacity}\", \"conveniences\": f\"{room.type.conveniences}\", \"cost\": f\"{room.type.cost}\" } ) comments = Comment.objects.filter(hotel=hotel) comment_form = CommentForm() return render( request, \"detail.html\", { \"hotel\": hotel, \"comments\": comments, \"comments_exists\": bool(comments.count()), \"rooms\": rooms, \"user\": request.user, \"comment_form\": comment_form }, ) @login_required(login_url=\"/login/\") def reserve_room(request, hotel_id): hotel = Hotel.objects.get(id=hotel_id) if request.method == \"POST\": room = Room.objects.filter(number=request.POST[\"room\"]).first() try: date_start = datetime.datetime.strptime(request.POST[\"date-start\"], \"%d.%m.%Y\") date_finish = datetime.datetime.strptime(request.POST[\"date-finish\"], \"%d.%m.%Y\") form = ReservationForm({\"room\": room, \"date_start\": date_start, \"date_finish\": date_finish}) if not form.is_valid(): return redirect(\"hotel_detail\", hotel_id) reservation = form.save(commit=False) reservation.passenger = request.user reservation.room = room reservation.save() except Exception: return redirect(\"hotel_detail\", hotel_id) return redirect(\"hotel_detail\", hotel_id) else: return render(request, \"reserve_room.html\", {\"form\" : ReservationForm(), \"hotel\": hotel}) @login_required(login_url=\"/login/\") def reservations_for_user(request): reservations = Reservation.objects.filter(passenger=request.user) return render(request, \"reservation_for_user.html\", {\"reservations\": reservations}) def reservation_update(request, reservation_id): reservation = get_object_or_404(Reservation, id=reservation_id) if request.method == \"POST\": form = ReservationForm(data=request.POST, instance=reservation) if not form.is_valid(): return redirect(\"reservation_update\", reservation_id) form.save() return redirect(\"hotel_detail\", reservation.room.hotel.id) else: form = ReservationForm(instance=reservation) return render( request, \"reservation_update.html\", {\"form\": form, \"reservation\": reservation}, ) @login_required(login_url=\"/login/\") def reservation_delete(request, reservation_id): reservation = get_object_or_404(Reservation, id=reservation_id, passenger=request.user) if request.method == \"POST\": reservation.delete() return redirect(\"hotel_detail\", reservation.room.hotel.id) else: return render( request, \"reservation_delete.html\", {\"reservation\": reservation}, )","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 1: \u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0442\u0435\u043b\u0435\u0439"},{"location":"lab3/","text":"\u041b\u0410\u0411\u041e\u0420\u0410\u0422\u041e\u0420\u041d\u0410\u042f \u0420\u0410\u0411\u041e\u0422\u0410 \u21163 : \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API. \u0426\u0435\u043b\u044c: \u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django 3, Django REST Framework, Djoser \u0438 \u0421\u0423\u0411\u0414 PostgreSQL, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b. \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0412\u0430\u0440\u0438\u0430\u043d\u0442 13 (\u0438\u0437 \u043a\u0443\u0440\u0441\u0430 \u043e\u0441\u043d\u043e\u0432\u044b \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445) \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u043e\u0440\u0433\u0430\u0445 \u043d\u0430 \u0442\u043e\u0432\u0430\u0440\u043d\u043e-\u0441\u044b\u0440\u044c\u0435\u0432\u043e\u0439 \u0431\u0438\u0440\u0436\u0435. \u041d\u0430 \u0442\u043e\u0440\u0433\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0440\u0430\u0437\u043d\u044b\u0435 \u0442\u043e\u0432\u0430\u0440\u044b \u043e\u0434\u043d\u043e\u0439 \u0438 \u0442\u043e\u0439 \u0436\u0435 \u0444\u0438\u0440\u043c\u044b \u0438 \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u0442\u043e\u0432\u0430\u0440\u044b \u0440\u0430\u0437\u043d\u044b\u0445 \u0444\u0438\u0440\u043c. \u041a\u0430\u0436\u0434\u044b\u0439 \u0442\u043e\u0432\u0430\u0440 \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0439 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434, \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u043e\u0439 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f. \u0422\u043e\u0432\u0430\u0440 \u0438\u043c\u0435\u0435\u0442 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0439\u043d\u044b\u0439 \u0441\u0440\u043e\u043a \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f, \u0435\u0434\u0438\u043d\u0438\u0446\u0443 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f. \u0422\u043e\u0432\u0430\u0440 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u0435\u043d\u043d\u044b\u043c, \u0435\u0441\u043b\u0438 \u0434\u0430\u0442\u0430 \u0435\u0433\u043e \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0438 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0437\u0434\u043d\u044f\u044f, \u0447\u0435\u043c \u0434\u0430\u0442\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u044d\u0442\u043e\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u0441\u0443\u043c\u043c\u0435 \u0441 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0439\u043d\u044b\u043c \u0441\u0440\u043e\u043a\u043e\u043c \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f. \u0422\u043e\u0432\u0430\u0440\u044b \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0430\u0440\u0442\u0438\u044f\u043c\u0438. \u041f\u0430\u0440\u0442\u0438\u044f \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u0435\u0442\u0441\u044f: \u043d\u043e\u043c\u0435\u0440\u043e\u043c, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0435\u0434\u0438\u043d\u0438\u0446 \u0432 \u043f\u0430\u0440\u0442\u0438\u0438, \u0446\u0435\u043d\u043e\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430, \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438 \u043f\u043e\u0441\u0442\u0430\u0432\u043a\u0438 (\u043f\u0440\u0435\u0434\u043e\u043f\u043b\u0430\u0442\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442). \u041f\u0430\u0440\u0442\u0438\u0438 \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0431\u0440\u043e\u043a\u0435\u0440\u044b. \u0412 \u043e\u0434\u043d\u0443 \u043f\u0430\u0440\u0442\u0438\u044e \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442\u0441\u044f \u0440\u0430\u0437\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u044b\u0435 \u0442\u043e\u0432\u0430\u0440\u044b \u043e\u0442 \u0440\u0430\u0437\u043d\u044b\u0445 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439. \u0421\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043f\u0430\u0440\u0442\u0438\u0438 \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u0436\u0443, \u043f\u043e\u043a\u0443\u043f\u0430\u0435\u0442 \u0441\u0430\u043c\u0430 \u0431\u0438\u0440\u0436\u0430, \u0438 \u043e\u043d\u0430 \u0436\u0435 \u0440\u0430\u0441\u043f\u043b\u0430\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441 \u0431\u0440\u043e\u043a\u0435\u0440\u043e\u043c \u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u043c\u0438 \u0442\u043e\u0432\u0430\u0440\u0430. \u0415\u0441\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435\u043c \u043f\u043e\u0441\u0442\u0430\u0432\u043a\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u0430 \u043f\u0440\u0435\u0434\u043e\u043f\u043b\u0430\u0442\u0430, \u0442\u043e \u0431\u0438\u0440\u0436\u0430 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0434\u0435\u043d\u044c\u0433\u0438 \u0432 \u0434\u0435\u043d\u044c \u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0430, \u0430 \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 \u2014 \u0442\u043e \u0432 \u0434\u0435\u043d\u044c \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0438. \u0411\u0440\u043e\u043a\u0435\u0440\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u0437\u0430 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u043f\u0440\u0438\u0431\u044b\u043b\u0438 \u2014 10% \u043e\u0442 \u0441\u0443\u043c\u043c\u044b \u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445 \u0441\u0434\u0435\u043b\u043e\u043a. \u0415\u0436\u0435\u043c\u0435\u0441\u044f\u0447\u043d\u043e \u0431\u0440\u043e\u043a\u0435\u0440\u044b \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u044e\u0442 \u043a\u043e\u043d\u0442\u043e\u0440\u0435, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043e\u043d\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442, \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0443\u043c\u043c\u0443 \u0434\u0435\u043d\u0435\u0433, \u0430 \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0435 \u0438\u043c\u0438 \u0434\u0435\u043d\u044c\u0433\u0438 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0438\u0445 \u0447\u0438\u0441\u0442\u044b\u0439 \u0434\u043e\u0445\u043e\u0434 (\u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0443). \u041f\u0435\u0440\u0435\u0447\u0435\u043d\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445: \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0435\u0434\u0438\u043d\u0438\u0446 \u0442\u043e\u0432\u0430\u0440\u0430 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u0438\u0434\u0430 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 \u043e\u0442 \u043d\u0430\u0447\u0430\u043b\u0430 \u0442\u043e\u0440\u0433\u043e\u0432 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0430\u0442\u044b; \u043d\u0430\u0439\u0442\u0438 \u0444\u0438\u0440\u043c\u0443-\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0437\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u044b\u0440\u0443\u0447\u0438\u043b\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0443\u043c\u043c\u0443 \u0434\u0435\u043d\u0435\u0433; \u043d\u0430\u0439\u0442\u0438 \u0442\u043e\u0432\u0430\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u043b\u0438 \u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 \u0431\u0440\u043e\u043a\u0435\u0440\u044b \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0442\u043e\u0440\u044b; \u043d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435 \u0444\u0430\u043a\u0442\u044b \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0441 \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u0435\u043d\u043d\u043e\u0439 \u0433\u043e\u0434\u043d\u043e\u0441\u0442\u044c\u044e (\u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0440\u0442\u0438\u0438, \u043a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430, \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u043e\u0432\u0430\u0440\u0430, \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0431\u0440\u043e\u043a\u0435\u0440\u0435); \u043d\u0430\u0439\u0442\u0438 \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0443 \u0432\u0441\u0435\u0445 \u0431\u0440\u043e\u043a\u0435\u0440\u043e\u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0442\u043e\u0440\u044b. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0442\u0447\u0435\u0442\u0430 \u043f\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u0442\u043e\u0440\u0433\u0430\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u0442\u043e\u0432\u0430\u0440\u0430\u043c \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u0444\u0438\u0440\u043c, \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e\u0449\u0438\u0445 \u0442\u043e\u0432\u0430\u0440 \u0432 \u043f\u0430\u0440\u0442\u0438\u044f\u0445, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0435\u0434\u0438\u043d\u0438\u0446, \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u043e \u0442\u043e\u0440\u0433\u0430\u043c, \u043e\u0431\u0449\u0435\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0439, \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0432 \u0442\u043e\u0440\u0433\u0430\u0445. serializers.py import datetime from rest_framework import serializers from .models import Consignment, Company, BrokerCompany, Broker, ProductByCompany, Product class ProductSerialiser(serializers.ModelSerializer): class Meta: model = Product fields = \"__all__\" class CountProductSerialiser(serializers.ModelSerializer): count = serializers.SerializerMethodField() class Meta: model = Product fields = [\"count\"] def get_count(self, obj): return ProductByCompany.objects.filter(product=obj.id, created__lt=self.context[\"date\"]).count() class DateSerializer(serializers.Serializer): date = serializers.DateField(default=datetime.date.today()) class Meta: fields = ['date'] class ProductByCompanySerialiser(serializers.ModelSerializer): class Meta: model = ProductByCompany fields = \"__all__\" class CompanySerialiser(serializers.ModelSerializer): class Meta: model = Company fields = \"__all__\" class BrokerSerialiser(serializers.ModelSerializer): class Meta: model = Broker fields = \"__all__\" class CountBrokerSalarySerializer(serializers.ModelSerializer): salary = serializers.SerializerMethodField() class Meta: model = Broker fields = ['id', 'name', 'salary'] def get_salary(self, obj): count = 0 for c in Consignment.objects.filter(broker=obj.id): count = ProductByCompany.objects.filter(consignment=c.id).count() * c.cost return count class BrokerCompanySerialiser(serializers.ModelSerializer): class Meta: model = BrokerCompany fields = \"__all__\" class ConsignmentSerialiser(serializers.ModelSerializer): class Meta: model = Consignment fields = \"__all__\" class BrokerTopProductsSerializer(serializers.ModelSerializer): top_products = serializers.SerializerMethodField() class Meta: model = Broker fields = ['id', 'name', 'top_products'] def get_top_products(self, obj): current_year = self.context['date'].year consignments = Consignment.objects.filter(broker=obj.id, date_sold__year=current_year) product_counts = {} for consignment in consignments: products_in_consignment = ProductByCompany.objects.filter(consignment=consignment.id) for product_by_company in products_in_consignment: product = product_by_company.product product_count = product_counts.get(product.id, 0) product_counts[product.id] = product_count + 1 sorted_products = sorted(product_counts.items(), key=lambda x: x[1], reverse=True)[:3] top_products_data = [] for product_id, count in sorted_products: product = Product.objects.get(id=product_id) top_products_data.append({ 'product_id': product_id, 'product_name': product.name, 'count': count, }) return top_products_data","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3"},{"location":"lab3/#no3-django-rest-api","text":"\u0426\u0435\u043b\u044c: \u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django 3, Django REST Framework, Djoser \u0438 \u0421\u0423\u0411\u0414 PostgreSQL, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b.","title":"\u041b\u0410\u0411\u041e\u0420\u0410\u0422\u041e\u0420\u041d\u0410\u042f \u0420\u0410\u0411\u041e\u0422\u0410 \u21163 :  \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API."},{"location":"lab3/#_1","text":"","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab3/#13","text":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0442\u043e\u0440\u0433\u0430\u0445 \u043d\u0430 \u0442\u043e\u0432\u0430\u0440\u043d\u043e-\u0441\u044b\u0440\u044c\u0435\u0432\u043e\u0439 \u0431\u0438\u0440\u0436\u0435. \u041d\u0430 \u0442\u043e\u0440\u0433\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0440\u0430\u0437\u043d\u044b\u0435 \u0442\u043e\u0432\u0430\u0440\u044b \u043e\u0434\u043d\u043e\u0439 \u0438 \u0442\u043e\u0439 \u0436\u0435 \u0444\u0438\u0440\u043c\u044b \u0438 \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u0442\u043e\u0432\u0430\u0440\u044b \u0440\u0430\u0437\u043d\u044b\u0445 \u0444\u0438\u0440\u043c. \u041a\u0430\u0436\u0434\u044b\u0439 \u0442\u043e\u0432\u0430\u0440 \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0439 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434, \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u043e\u0439 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f. \u0422\u043e\u0432\u0430\u0440 \u0438\u043c\u0435\u0435\u0442 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0439\u043d\u044b\u0439 \u0441\u0440\u043e\u043a \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f, \u0435\u0434\u0438\u043d\u0438\u0446\u0443 \u0438\u0437\u043c\u0435\u0440\u0435\u043d\u0438\u044f. \u0422\u043e\u0432\u0430\u0440 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u0435\u043d\u043d\u044b\u043c, \u0435\u0441\u043b\u0438 \u0434\u0430\u0442\u0430 \u0435\u0433\u043e \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0438 \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0437\u0434\u043d\u044f\u044f, \u0447\u0435\u043c \u0434\u0430\u0442\u0430 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u044d\u0442\u043e\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430 \u0432 \u0441\u0443\u043c\u043c\u0435 \u0441 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0439\u043d\u044b\u043c \u0441\u0440\u043e\u043a\u043e\u043c \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f. \u0422\u043e\u0432\u0430\u0440\u044b \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0430\u0440\u0442\u0438\u044f\u043c\u0438. \u041f\u0430\u0440\u0442\u0438\u044f \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0437\u0443\u0435\u0442\u0441\u044f: \u043d\u043e\u043c\u0435\u0440\u043e\u043c, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0435\u0434\u0438\u043d\u0438\u0446 \u0432 \u043f\u0430\u0440\u0442\u0438\u0438, \u0446\u0435\u043d\u043e\u0439 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u0433\u043e \u0442\u043e\u0432\u0430\u0440\u0430, \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438 \u043f\u043e\u0441\u0442\u0430\u0432\u043a\u0438 (\u043f\u0440\u0435\u0434\u043e\u043f\u043b\u0430\u0442\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442). \u041f\u0430\u0440\u0442\u0438\u0438 \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0431\u0440\u043e\u043a\u0435\u0440\u044b. \u0412 \u043e\u0434\u043d\u0443 \u043f\u0430\u0440\u0442\u0438\u044e \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442\u0441\u044f \u0440\u0430\u0437\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u044b\u0435 \u0442\u043e\u0432\u0430\u0440\u044b \u043e\u0442 \u0440\u0430\u0437\u043d\u044b\u0445 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439. \u0421\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043f\u0430\u0440\u0442\u0438\u0438 \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u0436\u0443, \u043f\u043e\u043a\u0443\u043f\u0430\u0435\u0442 \u0441\u0430\u043c\u0430 \u0431\u0438\u0440\u0436\u0430, \u0438 \u043e\u043d\u0430 \u0436\u0435 \u0440\u0430\u0441\u043f\u043b\u0430\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0441 \u0431\u0440\u043e\u043a\u0435\u0440\u043e\u043c \u0438 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u043c\u0438 \u0442\u043e\u0432\u0430\u0440\u0430. \u0415\u0441\u043b\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0435\u043c \u043f\u043e\u0441\u0442\u0430\u0432\u043a\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u0430 \u043f\u0440\u0435\u0434\u043e\u043f\u043b\u0430\u0442\u0430, \u0442\u043e \u0431\u0438\u0440\u0436\u0430 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u0434\u0435\u043d\u044c\u0433\u0438 \u0432 \u0434\u0435\u043d\u044c \u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0430, \u0430 \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 \u2014 \u0442\u043e \u0432 \u0434\u0435\u043d\u044c \u043e\u0442\u0433\u0440\u0443\u0437\u043a\u0438. \u0411\u0440\u043e\u043a\u0435\u0440\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u0437\u0430 \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0446\u0435\u043d\u0442 \u043f\u0440\u0438\u0431\u044b\u043b\u0438 \u2014 10% \u043e\u0442 \u0441\u0443\u043c\u043c\u044b \u0437\u0430\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u0445 \u0441\u0434\u0435\u043b\u043e\u043a. \u0415\u0436\u0435\u043c\u0435\u0441\u044f\u0447\u043d\u043e \u0431\u0440\u043e\u043a\u0435\u0440\u044b \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u044f\u044e\u0442 \u043a\u043e\u043d\u0442\u043e\u0440\u0435, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043e\u043d\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442, \u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0441\u0443\u043c\u043c\u0443 \u0434\u0435\u043d\u0435\u0433, \u0430 \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0437\u0430\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0435 \u0438\u043c\u0438 \u0434\u0435\u043d\u044c\u0433\u0438 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0438\u0445 \u0447\u0438\u0441\u0442\u044b\u0439 \u0434\u043e\u0445\u043e\u0434 (\u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0443). \u041f\u0435\u0440\u0435\u0447\u0435\u043d\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445: \u043f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0435\u0434\u0438\u043d\u0438\u0446 \u0442\u043e\u0432\u0430\u0440\u0430 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u0438\u0434\u0430 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e \u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 \u043e\u0442 \u043d\u0430\u0447\u0430\u043b\u0430 \u0442\u043e\u0440\u0433\u043e\u0432 \u0434\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0430\u0442\u044b; \u043d\u0430\u0439\u0442\u0438 \u0444\u0438\u0440\u043c\u0443-\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0437\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0432\u044b\u0440\u0443\u0447\u0438\u043b\u0430 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0443\u043c\u043c\u0443 \u0434\u0435\u043d\u0435\u0433; \u043d\u0430\u0439\u0442\u0438 \u0442\u043e\u0432\u0430\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u043b\u0438 \u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 \u0431\u0440\u043e\u043a\u0435\u0440\u044b \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0442\u043e\u0440\u044b; \u043d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435 \u0444\u0430\u043a\u0442\u044b \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u0441 \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u0435\u043d\u043d\u043e\u0439 \u0433\u043e\u0434\u043d\u043e\u0441\u0442\u044c\u044e (\u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0440\u0442\u0438\u0438, \u043a\u043e\u0434 \u0442\u043e\u0432\u0430\u0440\u0430, \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u043e\u0432\u0430\u0440\u0430, \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0431\u0440\u043e\u043a\u0435\u0440\u0435); \u043d\u0430\u0439\u0442\u0438 \u0437\u0430\u0440\u043f\u043b\u0430\u0442\u0443 \u0432\u0441\u0435\u0445 \u0431\u0440\u043e\u043a\u0435\u0440\u043e\u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0442\u043e\u0440\u044b. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0442\u0447\u0435\u0442\u0430 \u043f\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u0442\u043e\u0440\u0433\u0430\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u0442\u043e\u0432\u0430\u0440\u0430\u043c \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u0444\u0438\u0440\u043c, \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e\u0449\u0438\u0445 \u0442\u043e\u0432\u0430\u0440 \u0432 \u043f\u0430\u0440\u0442\u0438\u044f\u0445, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0435\u0434\u0438\u043d\u0438\u0446, \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u043e \u0442\u043e\u0440\u0433\u0430\u043c, \u043e\u0431\u0449\u0435\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0439, \u0443\u0447\u0430\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0432 \u0442\u043e\u0440\u0433\u0430\u0445. serializers.py import datetime from rest_framework import serializers from .models import Consignment, Company, BrokerCompany, Broker, ProductByCompany, Product class ProductSerialiser(serializers.ModelSerializer): class Meta: model = Product fields = \"__all__\" class CountProductSerialiser(serializers.ModelSerializer): count = serializers.SerializerMethodField() class Meta: model = Product fields = [\"count\"] def get_count(self, obj): return ProductByCompany.objects.filter(product=obj.id, created__lt=self.context[\"date\"]).count() class DateSerializer(serializers.Serializer): date = serializers.DateField(default=datetime.date.today()) class Meta: fields = ['date'] class ProductByCompanySerialiser(serializers.ModelSerializer): class Meta: model = ProductByCompany fields = \"__all__\" class CompanySerialiser(serializers.ModelSerializer): class Meta: model = Company fields = \"__all__\" class BrokerSerialiser(serializers.ModelSerializer): class Meta: model = Broker fields = \"__all__\" class CountBrokerSalarySerializer(serializers.ModelSerializer): salary = serializers.SerializerMethodField() class Meta: model = Broker fields = ['id', 'name', 'salary'] def get_salary(self, obj): count = 0 for c in Consignment.objects.filter(broker=obj.id): count = ProductByCompany.objects.filter(consignment=c.id).count() * c.cost return count class BrokerCompanySerialiser(serializers.ModelSerializer): class Meta: model = BrokerCompany fields = \"__all__\" class ConsignmentSerialiser(serializers.ModelSerializer): class Meta: model = Consignment fields = \"__all__\" class BrokerTopProductsSerializer(serializers.ModelSerializer): top_products = serializers.SerializerMethodField() class Meta: model = Broker fields = ['id', 'name', 'top_products'] def get_top_products(self, obj): current_year = self.context['date'].year consignments = Consignment.objects.filter(broker=obj.id, date_sold__year=current_year) product_counts = {} for consignment in consignments: products_in_consignment = ProductByCompany.objects.filter(consignment=consignment.id) for product_by_company in products_in_consignment: product = product_by_company.product product_count = product_counts.get(product.id, 0) product_counts[product.id] = product_count + 1 sorted_products = sorted(product_counts.items(), key=lambda x: x[1], reverse=True)[:3] top_products_data = [] for product_id, count in sorted_products: product = Product.objects.get(id=product_id) top_products_data.append({ 'product_id': product_id, 'product_name': product.name, 'count': count, }) return top_products_data","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 13 (\u0438\u0437 \u043a\u0443\u0440\u0441\u0430 \u043e\u0441\u043d\u043e\u0432\u044b \u0431\u0430\u0437 \u0434\u0430\u043d\u043d\u044b\u0445)"},{"location":"lab4/","text":"\u041b\u0410\u0411\u041e\u0420\u0410\u0422\u041e\u0420\u041d\u0410\u042f \u0420\u0410\u0411\u041e\u0422\u0410 \u21164 : \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js. \u0426\u0435\u043b\u044c: \u041e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u0441\u044f \u0441 \u0431\u0430\u0437\u043e\u0432\u044b\u043c\u0438 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c\u0438 JavaScript. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 vue.js. \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u041f\u043e\u0440\u044f\u0434\u043e\u043a \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b: \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 4.1 \u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u044f\u0437\u044b\u043a\u0430 JavaScript). (https://docs.google.com/document/d/1lurVq_ddbKQ-rORvxF3T9PlPPy-sOgHwFazCI0yEqYY/edit?usp=sharing) \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 4.2. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 Vue.JS. (https://docs.google.com/document/d/1kSXkW6Vcis8z-TunNALcapCVmMHps3jaDdIP4rZkV9E/edit?usp=sharing) \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438, \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0432 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u21163 CORS (Cross-origin resource sharing) \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439 4.3 \u0423\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0441 \u043e\u0434\u043d\u0438\u043c \u0438\u0437 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0435\u0439 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u044c\u044e (\u044d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0432\u0430\u0436\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442, \u0442\u043a \u0431\u044b\u0432\u0430\u0435\u0442 \u0442\u0430\u043a\u043e\u0435, \u0447\u0442\u043e \u043d\u0435 \u0432\u0441\u0435 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u044b \u043f\u043e\u043d\u0438\u043c\u0430\u044e\u0442 \u0441\u0443\u0442\u044c \u0441\u0432\u043e\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432). \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0443\u0447\u0451\u0442\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e. \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b: \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js \u0438 Django REST framework (DjangoSchool) (\u0441\u0441\u044b\u043b\u043a\u0430) \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e (\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438\u0437 \u043f\u0443\u043d\u043a\u0442\u0430 4). \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b: \u041f\u0443\u043d\u043a\u0442\u044b 4.2, 4.3, 4.5 \u0432 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 4.2 \u0423\u0440\u043e\u043a\u0438 6, 7 \u0438 10-13 \u0438\u0437 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043b\u0435\u0439\u0442\u0438\u0441\u0442\u0430 (DjangoSchool) (\u0441\u0441\u044b\u043b\u043a\u0430) \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c vuetify \u0438\u043b\u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0443\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443. \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b: \u041f\u0443\u043d\u043a\u0442 3.1 \u0432 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 4.2 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 MkDocs. Components: Login.vue <template> <div class=\"container\"> <h2>\u0412\u043e\u0439\u0442\u0438</h2> <form @submit.prevent=\"loginUser\"> <label for=\"username\">\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:</label> <input type=\"text\" id=\"username\" v-model=\"username\" required /> <label for=\"password\">\u041f\u0430\u0440\u043e\u043b\u044c:</label> <input type=\"password\" id=\"password\" v-model=\"password\" required /> <button type=\"submit\">\u0412\u043e\u0439\u0442\u0438</button> </form> </div> </template> <script> import axios from 'axios'; export default { data() { return { username: '', password: '', }; }, methods: { async loginUser() { try { const response = await axios.post('http://localhost:8000/auth/token/login/', { username: this.username, password: this.password, }); const accessToken = response.data.auth_token; localStorage.setItem('access_token', accessToken); console.log('Login successful. Token:', accessToken); // Set isAuthenticated to true in the root Vue instance this.$root.isAuthenticated = true; // Redirect the user to the profile page or another page this.$router.push('/profile'); console.log('Login successful. Token:', accessToken); } catch (error) { console.error('Login failed:', error.response.data); } }, }, }; </script> Navbar.vue <template> <header> <h1 class=\"logo\">Life Stocks</h1> <nav> <router-link to=\"/\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/' }\">Home</router-link> <router-link v-if=\"!isAuthPage()\" to=\"/brokers\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/brokers' }\">Brokers</router-link> <router-link v-if=\"!isAuthPage()\" to=\"/producers\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/producers' }\">Producers</router-link> <router-link v-if=\"!isAuthPage()\" to=\"/products\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/products' }\">Products</router-link> <router-link v-if=\"!isAuthPage()\" to=\"/cosignments\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/cosignments' }\">Cosignments</router-link> <router-link v-if=\"!isAuthenticated\" to=\"/login\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/login' }\">Login</router-link> <router-link v-if=\"!isAuthenticated\" to=\"/register\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/register' }\">Register</router-link> <router-link v-if=\"isAuthenticated\" to=\"/profile\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/profile' }\">Profile</router-link> <button v-if=\"isAuthenticated\" @click=\"logout\" class=\"nav-link logout-button\">Logout</button> </nav> </header> </template> <script> export default { name: 'Navbar', data() { return { isAuthenticated: false, }; }, methods: { isAuthPage() { const authPages = ['/login', '/register']; return authPages.includes(this.$route.path); }, logout() { // Clear authentication token from local storage localStorage.removeItem('access_token'); // Update the isAuthenticated status this.isAuthenticated = false; // Redirect to the login page this.$router.push('/login'); }, }, created() { // Check if the user is already authenticated this.isAuthenticated = localStorage.getItem('access_token') !== null; }, }; </script> <style scoped> header { background-color: #00153c; color: #ff00ea; padding: 10px 20px; display: flex; justify-content: space-between; align-items: center; } .logo { margin: 0; color: #18ff00; } nav { display: flex; } .nav-link { text-decoration: none; color: #ff00ea; font-size: 1.2em; padding: 10px; border: none; cursor: pointer; font-size: 1.2em; border-radius: 4px; margin-left: 10px; transition: color 0.3s; } .nav-link:hover, .active { text-decoration: underline; color: #00ffea; } .logout-button { background-color: #00fff6; color: #ff0000; padding: 10px; border: none; cursor: pointer; font-size: 1.2em; border-radius: 4px; margin-left: 10px; transition: color 0.3s; } .logout-button:hover { color: #000000; text-decoration: underline; } </style> Profile.vue <template> <div class=\"container\"> <div class=\"profile-info\"> <h2>Profile</h2> <div class=\"info-item\"><strong>Login:</strong> {{ userData.username }}</div> <div class=\"info-item\"><strong>Email:</strong> {{ userData.email }}</div> </div> <div class=\"profile-settings\"> <div class=\"settings-panel\"> <button @click=\"toggleSettingsPanel\">Change User Data</button> <div v-show=\"showSettingsPanel\" class=\"settings-dropdown\"> <button @click=\"toggleChangeUsernameForm\">Change Username</button> <button @click=\"toggleChangePasswordForm\">Change Password</button> </div> </div> <div v-if=\"showChangePasswordForm\" class=\"change-form\"> <form @submit.prevent=\"changePassword\" class=\"form\"> <label for=\"currentPassword\">Current Password:</label> <input type=\"password\" v-model=\"currentPassword\" required /> <label for=\"newPassword\">New Password:</label> <input type=\"password\" v-model=\"newPassword\" required /> <button type=\"submit\">Change Password</button> </form> </div> <div v-if=\"showChangeUsernameForm\" class=\"change-form\"> <form @submit.prevent=\"changeUsername\" class=\"form\"> <label for=\"currentPassword\">Current Password:</label> <input type=\"password\" v-model=\"currentPassword\" required /> <label for=\"newUsername\">New Username:</label> <input type=\"text\" v-model=\"newUsername\" required /> <button type=\"submit\">Change Username</button> </form> </div> </div> </div> </template> <script> import axios from 'axios'; export default { data() { return { showChangePasswordForm: false, showChangeUsernameForm: false, showSettingsPanel: false, currentPassword: '', newPassword: '', newUsername: '', userData: {}, }; }, mounted() { this.fetchUserData(); }, methods: { async fetchUserData() { console.log('Fetching user data...'); try { const response = await axios.get('/auth/users/me/', { headers: { 'Authorization': `Token ${localStorage.getItem('access_token')}`, }, }); this.userData = response.data; console.log('User data:', this.userData); } catch (error) { console.error('Error fetching user data:', error.response.data); } }, async changePassword() { try { const response = await axios.post('/auth/users/set_password/', { new_password: this.newPassword, current_password: this.currentPassword, }, { headers: { 'Authorization': `Token ${localStorage.getItem('access_token')}`, }, }); console.log('Password changed successfully:', response.data); this.showChangePasswordForm = false; } catch (error) { console.error('Password change failed:', error.response.data); } }, async changeUsername() { try { const response = await axios.post('/auth/users/set_username/', { current_password: this.currentPassword, new_username: this.newUsername, }, { headers: { 'Authorization': `Token ${localStorage.getItem('access_token')}`, }, }); console.log('Username changed successfully:', response.data); this.showChangeUsernameForm = false; } catch (error) { console.error('Username change failed:', error.response.data); } }, toggleSettingsPanel() { this.showSettingsPanel = !this.showSettingsPanel; }, toggleChangePasswordForm() { this.showChangePasswordForm = !this.showChangePasswordForm; }, toggleChangeUsernameForm() { this.showChangeUsernameForm = !this.showChangeUsernameForm; }, }, }; </script> <style scoped> .container { max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); } .profile-info { margin-bottom: 20px; } .info-item { margin-bottom: 10px; } .profile-settings { border-top: 1px solid #ddd; padding-top: 20px; } .settings-panel { display: flex; justify-content: space-between; align-items: center; } .settings-dropdown { display: flex; flex-direction: column; align-items: center; /* Center the buttons */ } .change-form { margin-top: 20px; } .form { display: flex; flex-direction: column; } label { margin-bottom: 5px; } input { margin-bottom: 10px; padding: 8px; border: 1px solid #ddd; border-radius: 4px; } button { padding: 10px; background-color: #00a48b; color: #fcff00; border: none; border-radius: 4px; cursor: pointer; margin-bottom: 10px; /* Add margin for spacing between buttons */ } button:hover { background-color: #ff0000; } </style> Register.vue <template> <div class=\"container\"> <h2>\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</h2> <form @submit.prevent=\"registerUser\"> <label for=\"username\">\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:</label> <input type=\"text\" v-model=\"username\" required /> <label for=\"email\">\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0430\u044f \u043f\u043e\u0447\u0442\u0430:</label> <input type=\"email\" v-model=\"email\" required /> <label for=\"password\">\u041f\u0430\u0440\u043e\u043b\u044c:</label> <input type=\"password\" v-model=\"password\" required /> <button type=\"submit\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</button> </form> </div> </template> <script> import axios from 'axios'; export default { data() { return { username: '', email: '', password: '', }; }, methods: { async registerUser() { try { const response = await axios.post('http://localhost:8000/auth/users/', { username: this.username, email: this.email, password: this.password, }); console.log('User registered successfully:', response.data); this.$router.push('/login'); } catch (error) { console.error('Registration failed:', error.response.data); } }, }, }; </script> Brokers.vue <template> <div class=\"brokers-table\"> <h1>Brokers Page</h1> <!-- Sorting options --> <label>Sort By:</label> <select v-model=\"sortBy\" @change=\"sortBrokers\"> <option value=\"name\">Name</option> <option value=\"income\">Income</option> </select> <!-- Search input --> <label>Search:</label> <input v-model=\"searchTerm\" @input=\"filterBrokers\" /> <!-- Table of brokers --> <table> <thead> <tr> <th>Name</th> <th>Income</th> </tr> </thead> <tbody> <tr v-for=\"broker in filteredBrokers\" :key=\"broker.id\"> <td>{{ broker.name }}</td> <td>{{ broker.income }}</td> </tr> </tbody> </table> </div> </template> <script> import axios from 'axios'; export default { name: 'Brokers', data() { return { brokers: [], sortBy: 'name', searchTerm: '', }; }, computed: { sortedBrokers() { return this.brokers.slice().sort((a, b) => { if (this.sortBy === 'name') { return a.name.localeCompare(b.name); } else if (this.sortBy === 'income') { return b.income - a.income; } return 0; }); }, filteredBrokers() { const search = this.searchTerm.toLowerCase(); return this.sortedBrokers.filter( broker => broker.name.toLowerCase().includes(search) ); }, }, methods: { async fetchBrokers() { try { const response = await axios.get('http://127.0.0.1:8000/main/brokers/', { headers: { Authorization: `Token ${localStorage.getItem('access_token')}`, }, }); this.brokers = response.data; } catch (error) { console.error('Error fetching broker data:', error); } }, sortBrokers() { // Triggered when sorting option changes }, filterBrokers() { // Triggered when search term changes }, }, created() { this.fetchBrokers(); }, }; </script> <style scoped> body{ min-height: 500px; background-color: #001b68; } .brokers-table { margin: 0 auto; /* \u0426\u0435\u043d\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0438 */ max-width: 600px; /* \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0448\u0438\u0440\u0438\u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u044b */ } table { width: 100%; border-collapse: collapse; /* \u0421\u0432\u043e\u0434\u0438\u0442 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u044f\u0447\u0435\u0435\u043a \u0432\u043c\u0435\u0441\u0442\u0435 */ } th, td { border: 1px solid #ddd; /* \u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u044f\u0447\u0435\u0435\u043a */ padding: 8px; text-align: left; } th { background-color: #b80098; /* \u0426\u0432\u0435\u0442 \u0444\u043e\u043d\u0430 \u0434\u043b\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 */ } </style> <template> <div class=\"consignments-page\"> <h1>Consignments Page</h1> <div class=\"consignments-table\"> <label>Sort By:</label> <select v-model=\"sortBy\" @change=\"sortConsignments\"> <option value=\"date_sold\">Date Sold</option> <option value=\"cost\">Cost</option> </select> <label>Search:</label> <input v-model=\"searchTerm\" @input=\"filterConsignments\" /> <table> <thead> <tr> <th>Date Sold</th> <th>Cost</th> </tr> </thead> <tbody> <tr v-for=\"consignment in filteredConsignments\" :key=\"consignment.id\"> <td>{{ consignment.date_sold }}</td> <td>{{ consignment.cost }}</td> </tr> </tbody> </table> </div> <div> <h2>Add New Consignment</h2> <form @submit.prevent=\"addConsignment\"> <label for=\"dateSold\">Date Sold:</label> <input type=\"date\" v-model=\"newConsignment.date_sold\" required /> <label for=\"num\">Number:</label> <input type=\"text\" v-model=\"newConsignment.num\" required /> <label for=\"cost\">Cost:</label> <input type=\"number\" v-model=\"newConsignment.cost\" required /> <label for=\"prepayment\">Prepayment:</label> <input type=\"checkbox\" v-model=\"newConsignment.prepayment\" /> <label for=\"broker\">Broker ID:</label> <input type=\"number\" v-model=\"newConsignment.broker\" required /> <button type=\"submit\">Add Consignment</button> </form> </div> </div> </template> <script> import axios from 'axios'; export default { name: 'Consignments', data() { return { consignments: [], sortBy: 'date_sold', searchTerm: '', newConsignment: { date_sold: '', num: '', cost: 0, prepayment: false, broker: 0, }, }; }, computed: { sortedConsignments() { return this.consignments.slice().sort((a, b) => { if (this.sortBy === 'date_sold') { return new Date(b.date_sold) - new Date(a.date_sold); } else if (this.sortBy === 'cost') { return b.cost - a.cost; } return 0; }); }, filteredConsignments() { const search = this.searchTerm.toLowerCase(); return this.sortedConsignments.filter( consignment => consignment.date_sold.toLowerCase().includes(search) ); }, }, methods: { async fetchConsignments() { try { const response = await axios.get('http://127.0.0.1:8000/main/consignments/', { headers: { Authorization: `Token ${localStorage.getItem('access_token')}`, }, }); this.consignments = response.data; } catch (error) { console.error('Error fetching consignment data:', error); } }, sortConsignments() { // Triggered when sorting option changes }, filterConsignments() { // Triggered when search term changes }, async addConsignment() { try { const response = await axios.post('http://127.0.0.1:8000/main/consignments/', this.newConsignment, { headers: { Authorization: `Token ${localStorage.getItem('access_token')}`, }, }); console.log('Consignment added successfully:', response.data); } catch (error) { console.error('Error adding consignment:', error.response.data); } }, }, created() { this.fetchConsignments(); }, }; </script> <style scoped> .consignments-page { max-width: 800px; margin: 0 auto; } .consignments-table { margin-bottom: 20px; } table { width: 100%; border-collapse: collapse; } th, td { border: 1px solid #ddd; padding: 8px; text-align: left; } th { background-color: #8b00b8; } </style> Home.vue <template> <div> <h1 class=\"title\">Set goals.<br>Have a ten-year plan.<br>Invest.<br>Wake up early.<br>CEO mindset</h1> </div> </template> <script> export default { name: 'Home', }; </script> <style scoped> .title { color: #f8ff39; text-align: center; margin-top: 50vh; transform: translateY(-100%); animation: flicker 0.5s steps(1) infinite; } @keyframes flicker { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } } @keyframes colorShift { 0% { background-color: #f500ff; } 50% { background-color: #f500ff; } 100% { background-color: #f500ff; } } </style> Producers.vue <template> <div class=\"producers-table\"> <h1>Producers Companies Page</h1> <!-- Search input --> <label>Search by Name:</label> <input v-model=\"searchTerm\" @input=\"filterProducers\" /> <!-- Table of producers --> <table> <thead> <tr> <th>Name</th> </tr> </thead> <tbody> <tr v-for=\"producer in filteredProducers\" :key=\"producer.id\"> <td>{{ producer.name }}</td> </tr> </tbody> </table> </div> </template> <script> import axios from 'axios'; export default { name: 'Producers', data() { return { producers: [], searchTerm: '', }; }, computed: { filteredProducers() { const search = this.searchTerm.toLowerCase(); return this.producers.filter( producer => producer.name.toLowerCase().includes(search) ); }, }, methods: { async fetchProducers() { try { const response = await axios.get('http://127.0.0.1:8000/main/companies/', { headers: { Authorization: `Token ${localStorage.getItem('access_token')}`, }, }); this.producers = response.data; } catch (error) { console.error('Error fetching producer data:', error); } }, filterProducers() { // Triggered when search term changes }, }, created() { this.fetchProducers(); }, }; </script> <style scoped> .producers-table { margin: 0 auto; /* \u0426\u0435\u043d\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0438 */ max-width: 600px; /* \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0448\u0438\u0440\u0438\u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u044b */ } table { width: 100%; border-collapse: collapse; /* \u0421\u0432\u043e\u0434\u0438\u0442 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u044f\u0447\u0435\u0435\u043a \u0432\u043c\u0435\u0441\u0442\u0435 */ } th, td { border: 1px solid #ddd; /* \u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u044f\u0447\u0435\u0435\u043a */ padding: 8px; text-align: left; } th { background-color: #b80000; /* \u0426\u0432\u0435\u0442 \u0444\u043e\u043d\u0430 \u0434\u043b\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 */ } </style> Products <template> <div class=\"products-table\"> <h1>Products Page</h1> <!-- Sorting options --> <label>Sort By:</label> <select v-model=\"sortBy\" @change=\"sortProducts\"> <option value=\"code\">Code</option> <option value=\"name\">Name</option> <option value=\"unit\">Unit</option> <option value=\"shelf_life\">Shelf Life</option> </select> <!-- Search input --> <label>Search by Code:</label> <input v-model=\"searchTerm\" @input=\"filterProducts\" /> <!-- Table of products --> <table> <thead> <tr> <th>Code</th> <th>Name</th> <th>Unit</th> <th>Shelf Life</th> </tr> </thead> <tbody> <tr v-for=\"product in filteredProducts\" :key=\"product.id\"> <td>{{ product.code }}</td> <td>{{ product.name }}</td> <td>{{ product.unit }}</td> <td>{{ product.shelf_life }}</td> </tr> </tbody> </table> </div> </template> <script> import axios from 'axios'; export default { name: 'Products', data() { return { products: [], sortBy: 'code', searchTerm: '', }; }, computed: { sortedProducts() { return this.products.slice().sort((a, b) => { if (this.sortBy === 'code') { return a.code.localeCompare(b.code); } else if (this.sortBy === 'name') { return a.name.localeCompare(b.name); } else if (this.sortBy === 'unit') { return a.unit.localeCompare(b.unit); } else if (this.sortBy === 'shelf_life') { return a.shelf_life - b.shelf_life; } return 0; }); }, filteredProducts() { const search = this.searchTerm.toLowerCase(); return this.sortedProducts.filter( product => product.code.toLowerCase().includes(search) ); }, }, methods: { async fetchProducts() { try { const response = await axios.get('http://127.0.0.1:8000/main/products/', { headers: { Authorization: `Token ${localStorage.getItem('access_token')}`, }, }); this.products = response.data; } catch (error) { console.error('Error fetching product data:', error); } }, sortProducts() { // Triggered when sorting option changes }, filterProducts() { // Triggered when search term changes }, }, created() { this.fetchProducts(); }, }; </script> <style scoped> .products-table { margin: 0 auto; /* \u0426\u0435\u043d\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0438 */ max-width: 800px; /* \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0448\u0438\u0440\u0438\u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u044b */ } table { width: 100%; border-collapse: collapse; /* \u0421\u0432\u043e\u0434\u0438\u0442 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u044f\u0447\u0435\u0435\u043a \u0432\u043c\u0435\u0441\u0442\u0435 */ } th, td { border: 1px solid #ddd; /* \u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u044f\u0447\u0435\u0435\u043a */ padding: 8px; text-align: left; } th { background-color: #b100b8; /* \u0426\u0432\u0435\u0442 \u0444\u043e\u043d\u0430 \u0434\u043b\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 */ } </style> App.vue: <template> <div id=\"app\" class=\"web-1-0\"> <Navbar /> <router-view></router-view> </div> </template> <script> import Navbar from './components/Navbar.vue'; export default { name: 'App', components: { Navbar, }, }; </script> <style> #app { background-color: #001b68; min-height: 768px; margin: 0 auto; padding: 2rem; font-weight: normal; } .web-1-0 { background-color: #001b68; /* Bright yellow */ font-family: Comic Sans MS, cursive, sans-serif; color: #00ffcc; /* Bright red */ } </style> main.js import { createApp } from 'vue'; import { createRouter, createWebHistory } from 'vue-router'; import 'bootstrap/dist/css/bootstrap.min.css'; import axios from 'axios'; import App from './App.vue'; import Login from './components/Login.vue'; import Register from './components/Register.vue'; import Profile from './components/Profile.vue'; import Home from './views/Home.vue'; import Brokers from './views/Brokers.vue'; import Producers from './views/Producers.vue'; import Products from './views/Products.vue'; import Cosignments from './views/Cosignments.vue' axios.defaults.baseURL = 'http://127.0.0.1:8000/'; const app = createApp(App); app.config.globalProperties.isAuthenticated = false; const router = createRouter({ history: createWebHistory(), routes: [ { path: '/login', component: Login }, { path: '/register', component: Register }, { path: '/profile', component: Profile, meta: { requiresAuth: true } }, { path: '/', component: Home }, { path: '/brokers', component: Brokers, meta: { requiresAuth: true } }, { path: '/producers', component: Producers, meta: { requiresAuth: true } }, { path: '/products', component: Products, meta: { requiresAuth: true } }, { path: '/cosignments', component: Cosignments, meta: { requiresAuth: true } }, ], }); router.beforeEach((to, from, next) => { if (to.matched.some(record => record.meta.requiresAuth)) { if (!localStorage.getItem('access_token')) { next({ path: '/login', query: { redirect: to.fullPath }, }); } else { next(); } } else { next(); } }); app.use(router); app.mount('#app'); \u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0441\u0430\u0439\u0442\u0430","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 4"},{"location":"lab4/#no4-vuejs","text":"\u0426\u0435\u043b\u044c: \u041e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u0441\u044f \u0441 \u0431\u0430\u0437\u043e\u0432\u044b\u043c\u0438 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c\u0438 JavaScript. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 vue.js.","title":"\u041b\u0410\u0411\u041e\u0420\u0410\u0422\u041e\u0420\u041d\u0410\u042f \u0420\u0410\u0411\u041e\u0422\u0410 \u21164 :  \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js."},{"location":"lab4/#_1","text":"\u041f\u043e\u0440\u044f\u0434\u043e\u043a \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b: \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 4.1 \u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u044f\u0437\u044b\u043a\u0430 JavaScript). (https://docs.google.com/document/d/1lurVq_ddbKQ-rORvxF3T9PlPPy-sOgHwFazCI0yEqYY/edit?usp=sharing) \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 4.2. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 Vue.JS. (https://docs.google.com/document/d/1kSXkW6Vcis8z-TunNALcapCVmMHps3jaDdIP4rZkV9E/edit?usp=sharing) \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438, \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0432 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u21163 CORS (Cross-origin resource sharing) \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439 4.3 \u0423\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0441 \u043e\u0434\u043d\u0438\u043c \u0438\u0437 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0435\u0439 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u044c\u044e (\u044d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0432\u0430\u0436\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442, \u0442\u043a \u0431\u044b\u0432\u0430\u0435\u0442 \u0442\u0430\u043a\u043e\u0435, \u0447\u0442\u043e \u043d\u0435 \u0432\u0441\u0435 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u044b \u043f\u043e\u043d\u0438\u043c\u0430\u044e\u0442 \u0441\u0443\u0442\u044c \u0441\u0432\u043e\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432). \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0443\u0447\u0451\u0442\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e. \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b: \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js \u0438 Django REST framework (DjangoSchool) (\u0441\u0441\u044b\u043b\u043a\u0430) \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e (\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438\u0437 \u043f\u0443\u043d\u043a\u0442\u0430 4). \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b: \u041f\u0443\u043d\u043a\u0442\u044b 4.2, 4.3, 4.5 \u0432 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 4.2 \u0423\u0440\u043e\u043a\u0438 6, 7 \u0438 10-13 \u0438\u0437 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043b\u0435\u0439\u0442\u0438\u0441\u0442\u0430 (DjangoSchool) (\u0441\u0441\u044b\u043b\u043a\u0430) \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c vuetify \u0438\u043b\u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0443\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443. \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b: \u041f\u0443\u043d\u043a\u0442 3.1 \u0432 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 4.2 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 MkDocs. Components: Login.vue <template> <div class=\"container\"> <h2>\u0412\u043e\u0439\u0442\u0438</h2> <form @submit.prevent=\"loginUser\"> <label for=\"username\">\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:</label> <input type=\"text\" id=\"username\" v-model=\"username\" required /> <label for=\"password\">\u041f\u0430\u0440\u043e\u043b\u044c:</label> <input type=\"password\" id=\"password\" v-model=\"password\" required /> <button type=\"submit\">\u0412\u043e\u0439\u0442\u0438</button> </form> </div> </template> <script> import axios from 'axios'; export default { data() { return { username: '', password: '', }; }, methods: { async loginUser() { try { const response = await axios.post('http://localhost:8000/auth/token/login/', { username: this.username, password: this.password, }); const accessToken = response.data.auth_token; localStorage.setItem('access_token', accessToken); console.log('Login successful. Token:', accessToken); // Set isAuthenticated to true in the root Vue instance this.$root.isAuthenticated = true; // Redirect the user to the profile page or another page this.$router.push('/profile'); console.log('Login successful. Token:', accessToken); } catch (error) { console.error('Login failed:', error.response.data); } }, }, }; </script> Navbar.vue <template> <header> <h1 class=\"logo\">Life Stocks</h1> <nav> <router-link to=\"/\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/' }\">Home</router-link> <router-link v-if=\"!isAuthPage()\" to=\"/brokers\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/brokers' }\">Brokers</router-link> <router-link v-if=\"!isAuthPage()\" to=\"/producers\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/producers' }\">Producers</router-link> <router-link v-if=\"!isAuthPage()\" to=\"/products\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/products' }\">Products</router-link> <router-link v-if=\"!isAuthPage()\" to=\"/cosignments\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/cosignments' }\">Cosignments</router-link> <router-link v-if=\"!isAuthenticated\" to=\"/login\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/login' }\">Login</router-link> <router-link v-if=\"!isAuthenticated\" to=\"/register\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/register' }\">Register</router-link> <router-link v-if=\"isAuthenticated\" to=\"/profile\" class=\"nav-link\" :class=\"{ 'active': $route.path === '/profile' }\">Profile</router-link> <button v-if=\"isAuthenticated\" @click=\"logout\" class=\"nav-link logout-button\">Logout</button> </nav> </header> </template> <script> export default { name: 'Navbar', data() { return { isAuthenticated: false, }; }, methods: { isAuthPage() { const authPages = ['/login', '/register']; return authPages.includes(this.$route.path); }, logout() { // Clear authentication token from local storage localStorage.removeItem('access_token'); // Update the isAuthenticated status this.isAuthenticated = false; // Redirect to the login page this.$router.push('/login'); }, }, created() { // Check if the user is already authenticated this.isAuthenticated = localStorage.getItem('access_token') !== null; }, }; </script> <style scoped> header { background-color: #00153c; color: #ff00ea; padding: 10px 20px; display: flex; justify-content: space-between; align-items: center; } .logo { margin: 0; color: #18ff00; } nav { display: flex; } .nav-link { text-decoration: none; color: #ff00ea; font-size: 1.2em; padding: 10px; border: none; cursor: pointer; font-size: 1.2em; border-radius: 4px; margin-left: 10px; transition: color 0.3s; } .nav-link:hover, .active { text-decoration: underline; color: #00ffea; } .logout-button { background-color: #00fff6; color: #ff0000; padding: 10px; border: none; cursor: pointer; font-size: 1.2em; border-radius: 4px; margin-left: 10px; transition: color 0.3s; } .logout-button:hover { color: #000000; text-decoration: underline; } </style> Profile.vue <template> <div class=\"container\"> <div class=\"profile-info\"> <h2>Profile</h2> <div class=\"info-item\"><strong>Login:</strong> {{ userData.username }}</div> <div class=\"info-item\"><strong>Email:</strong> {{ userData.email }}</div> </div> <div class=\"profile-settings\"> <div class=\"settings-panel\"> <button @click=\"toggleSettingsPanel\">Change User Data</button> <div v-show=\"showSettingsPanel\" class=\"settings-dropdown\"> <button @click=\"toggleChangeUsernameForm\">Change Username</button> <button @click=\"toggleChangePasswordForm\">Change Password</button> </div> </div> <div v-if=\"showChangePasswordForm\" class=\"change-form\"> <form @submit.prevent=\"changePassword\" class=\"form\"> <label for=\"currentPassword\">Current Password:</label> <input type=\"password\" v-model=\"currentPassword\" required /> <label for=\"newPassword\">New Password:</label> <input type=\"password\" v-model=\"newPassword\" required /> <button type=\"submit\">Change Password</button> </form> </div> <div v-if=\"showChangeUsernameForm\" class=\"change-form\"> <form @submit.prevent=\"changeUsername\" class=\"form\"> <label for=\"currentPassword\">Current Password:</label> <input type=\"password\" v-model=\"currentPassword\" required /> <label for=\"newUsername\">New Username:</label> <input type=\"text\" v-model=\"newUsername\" required /> <button type=\"submit\">Change Username</button> </form> </div> </div> </div> </template> <script> import axios from 'axios'; export default { data() { return { showChangePasswordForm: false, showChangeUsernameForm: false, showSettingsPanel: false, currentPassword: '', newPassword: '', newUsername: '', userData: {}, }; }, mounted() { this.fetchUserData(); }, methods: { async fetchUserData() { console.log('Fetching user data...'); try { const response = await axios.get('/auth/users/me/', { headers: { 'Authorization': `Token ${localStorage.getItem('access_token')}`, }, }); this.userData = response.data; console.log('User data:', this.userData); } catch (error) { console.error('Error fetching user data:', error.response.data); } }, async changePassword() { try { const response = await axios.post('/auth/users/set_password/', { new_password: this.newPassword, current_password: this.currentPassword, }, { headers: { 'Authorization': `Token ${localStorage.getItem('access_token')}`, }, }); console.log('Password changed successfully:', response.data); this.showChangePasswordForm = false; } catch (error) { console.error('Password change failed:', error.response.data); } }, async changeUsername() { try { const response = await axios.post('/auth/users/set_username/', { current_password: this.currentPassword, new_username: this.newUsername, }, { headers: { 'Authorization': `Token ${localStorage.getItem('access_token')}`, }, }); console.log('Username changed successfully:', response.data); this.showChangeUsernameForm = false; } catch (error) { console.error('Username change failed:', error.response.data); } }, toggleSettingsPanel() { this.showSettingsPanel = !this.showSettingsPanel; }, toggleChangePasswordForm() { this.showChangePasswordForm = !this.showChangePasswordForm; }, toggleChangeUsernameForm() { this.showChangeUsernameForm = !this.showChangeUsernameForm; }, }, }; </script> <style scoped> .container { max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 8px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); } .profile-info { margin-bottom: 20px; } .info-item { margin-bottom: 10px; } .profile-settings { border-top: 1px solid #ddd; padding-top: 20px; } .settings-panel { display: flex; justify-content: space-between; align-items: center; } .settings-dropdown { display: flex; flex-direction: column; align-items: center; /* Center the buttons */ } .change-form { margin-top: 20px; } .form { display: flex; flex-direction: column; } label { margin-bottom: 5px; } input { margin-bottom: 10px; padding: 8px; border: 1px solid #ddd; border-radius: 4px; } button { padding: 10px; background-color: #00a48b; color: #fcff00; border: none; border-radius: 4px; cursor: pointer; margin-bottom: 10px; /* Add margin for spacing between buttons */ } button:hover { background-color: #ff0000; } </style> Register.vue <template> <div class=\"container\"> <h2>\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</h2> <form @submit.prevent=\"registerUser\"> <label for=\"username\">\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:</label> <input type=\"text\" v-model=\"username\" required /> <label for=\"email\">\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0430\u044f \u043f\u043e\u0447\u0442\u0430:</label> <input type=\"email\" v-model=\"email\" required /> <label for=\"password\">\u041f\u0430\u0440\u043e\u043b\u044c:</label> <input type=\"password\" v-model=\"password\" required /> <button type=\"submit\">\u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f</button> </form> </div> </template> <script> import axios from 'axios'; export default { data() { return { username: '', email: '', password: '', }; }, methods: { async registerUser() { try { const response = await axios.post('http://localhost:8000/auth/users/', { username: this.username, email: this.email, password: this.password, }); console.log('User registered successfully:', response.data); this.$router.push('/login'); } catch (error) { console.error('Registration failed:', error.response.data); } }, }, }; </script> Brokers.vue <template> <div class=\"brokers-table\"> <h1>Brokers Page</h1> <!-- Sorting options --> <label>Sort By:</label> <select v-model=\"sortBy\" @change=\"sortBrokers\"> <option value=\"name\">Name</option> <option value=\"income\">Income</option> </select> <!-- Search input --> <label>Search:</label> <input v-model=\"searchTerm\" @input=\"filterBrokers\" /> <!-- Table of brokers --> <table> <thead> <tr> <th>Name</th> <th>Income</th> </tr> </thead> <tbody> <tr v-for=\"broker in filteredBrokers\" :key=\"broker.id\"> <td>{{ broker.name }}</td> <td>{{ broker.income }}</td> </tr> </tbody> </table> </div> </template> <script> import axios from 'axios'; export default { name: 'Brokers', data() { return { brokers: [], sortBy: 'name', searchTerm: '', }; }, computed: { sortedBrokers() { return this.brokers.slice().sort((a, b) => { if (this.sortBy === 'name') { return a.name.localeCompare(b.name); } else if (this.sortBy === 'income') { return b.income - a.income; } return 0; }); }, filteredBrokers() { const search = this.searchTerm.toLowerCase(); return this.sortedBrokers.filter( broker => broker.name.toLowerCase().includes(search) ); }, }, methods: { async fetchBrokers() { try { const response = await axios.get('http://127.0.0.1:8000/main/brokers/', { headers: { Authorization: `Token ${localStorage.getItem('access_token')}`, }, }); this.brokers = response.data; } catch (error) { console.error('Error fetching broker data:', error); } }, sortBrokers() { // Triggered when sorting option changes }, filterBrokers() { // Triggered when search term changes }, }, created() { this.fetchBrokers(); }, }; </script> <style scoped> body{ min-height: 500px; background-color: #001b68; } .brokers-table { margin: 0 auto; /* \u0426\u0435\u043d\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0438 */ max-width: 600px; /* \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0448\u0438\u0440\u0438\u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u044b */ } table { width: 100%; border-collapse: collapse; /* \u0421\u0432\u043e\u0434\u0438\u0442 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u044f\u0447\u0435\u0435\u043a \u0432\u043c\u0435\u0441\u0442\u0435 */ } th, td { border: 1px solid #ddd; /* \u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u044f\u0447\u0435\u0435\u043a */ padding: 8px; text-align: left; } th { background-color: #b80098; /* \u0426\u0432\u0435\u0442 \u0444\u043e\u043d\u0430 \u0434\u043b\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 */ } </style> <template> <div class=\"consignments-page\"> <h1>Consignments Page</h1> <div class=\"consignments-table\"> <label>Sort By:</label> <select v-model=\"sortBy\" @change=\"sortConsignments\"> <option value=\"date_sold\">Date Sold</option> <option value=\"cost\">Cost</option> </select> <label>Search:</label> <input v-model=\"searchTerm\" @input=\"filterConsignments\" /> <table> <thead> <tr> <th>Date Sold</th> <th>Cost</th> </tr> </thead> <tbody> <tr v-for=\"consignment in filteredConsignments\" :key=\"consignment.id\"> <td>{{ consignment.date_sold }}</td> <td>{{ consignment.cost }}</td> </tr> </tbody> </table> </div> <div> <h2>Add New Consignment</h2> <form @submit.prevent=\"addConsignment\"> <label for=\"dateSold\">Date Sold:</label> <input type=\"date\" v-model=\"newConsignment.date_sold\" required /> <label for=\"num\">Number:</label> <input type=\"text\" v-model=\"newConsignment.num\" required /> <label for=\"cost\">Cost:</label> <input type=\"number\" v-model=\"newConsignment.cost\" required /> <label for=\"prepayment\">Prepayment:</label> <input type=\"checkbox\" v-model=\"newConsignment.prepayment\" /> <label for=\"broker\">Broker ID:</label> <input type=\"number\" v-model=\"newConsignment.broker\" required /> <button type=\"submit\">Add Consignment</button> </form> </div> </div> </template> <script> import axios from 'axios'; export default { name: 'Consignments', data() { return { consignments: [], sortBy: 'date_sold', searchTerm: '', newConsignment: { date_sold: '', num: '', cost: 0, prepayment: false, broker: 0, }, }; }, computed: { sortedConsignments() { return this.consignments.slice().sort((a, b) => { if (this.sortBy === 'date_sold') { return new Date(b.date_sold) - new Date(a.date_sold); } else if (this.sortBy === 'cost') { return b.cost - a.cost; } return 0; }); }, filteredConsignments() { const search = this.searchTerm.toLowerCase(); return this.sortedConsignments.filter( consignment => consignment.date_sold.toLowerCase().includes(search) ); }, }, methods: { async fetchConsignments() { try { const response = await axios.get('http://127.0.0.1:8000/main/consignments/', { headers: { Authorization: `Token ${localStorage.getItem('access_token')}`, }, }); this.consignments = response.data; } catch (error) { console.error('Error fetching consignment data:', error); } }, sortConsignments() { // Triggered when sorting option changes }, filterConsignments() { // Triggered when search term changes }, async addConsignment() { try { const response = await axios.post('http://127.0.0.1:8000/main/consignments/', this.newConsignment, { headers: { Authorization: `Token ${localStorage.getItem('access_token')}`, }, }); console.log('Consignment added successfully:', response.data); } catch (error) { console.error('Error adding consignment:', error.response.data); } }, }, created() { this.fetchConsignments(); }, }; </script> <style scoped> .consignments-page { max-width: 800px; margin: 0 auto; } .consignments-table { margin-bottom: 20px; } table { width: 100%; border-collapse: collapse; } th, td { border: 1px solid #ddd; padding: 8px; text-align: left; } th { background-color: #8b00b8; } </style> Home.vue <template> <div> <h1 class=\"title\">Set goals.<br>Have a ten-year plan.<br>Invest.<br>Wake up early.<br>CEO mindset</h1> </div> </template> <script> export default { name: 'Home', }; </script> <style scoped> .title { color: #f8ff39; text-align: center; margin-top: 50vh; transform: translateY(-100%); animation: flicker 0.5s steps(1) infinite; } @keyframes flicker { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } } @keyframes colorShift { 0% { background-color: #f500ff; } 50% { background-color: #f500ff; } 100% { background-color: #f500ff; } } </style> Producers.vue <template> <div class=\"producers-table\"> <h1>Producers Companies Page</h1> <!-- Search input --> <label>Search by Name:</label> <input v-model=\"searchTerm\" @input=\"filterProducers\" /> <!-- Table of producers --> <table> <thead> <tr> <th>Name</th> </tr> </thead> <tbody> <tr v-for=\"producer in filteredProducers\" :key=\"producer.id\"> <td>{{ producer.name }}</td> </tr> </tbody> </table> </div> </template> <script> import axios from 'axios'; export default { name: 'Producers', data() { return { producers: [], searchTerm: '', }; }, computed: { filteredProducers() { const search = this.searchTerm.toLowerCase(); return this.producers.filter( producer => producer.name.toLowerCase().includes(search) ); }, }, methods: { async fetchProducers() { try { const response = await axios.get('http://127.0.0.1:8000/main/companies/', { headers: { Authorization: `Token ${localStorage.getItem('access_token')}`, }, }); this.producers = response.data; } catch (error) { console.error('Error fetching producer data:', error); } }, filterProducers() { // Triggered when search term changes }, }, created() { this.fetchProducers(); }, }; </script> <style scoped> .producers-table { margin: 0 auto; /* \u0426\u0435\u043d\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0438 */ max-width: 600px; /* \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0448\u0438\u0440\u0438\u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u044b */ } table { width: 100%; border-collapse: collapse; /* \u0421\u0432\u043e\u0434\u0438\u0442 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u044f\u0447\u0435\u0435\u043a \u0432\u043c\u0435\u0441\u0442\u0435 */ } th, td { border: 1px solid #ddd; /* \u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u044f\u0447\u0435\u0435\u043a */ padding: 8px; text-align: left; } th { background-color: #b80000; /* \u0426\u0432\u0435\u0442 \u0444\u043e\u043d\u0430 \u0434\u043b\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 */ } </style> Products <template> <div class=\"products-table\"> <h1>Products Page</h1> <!-- Sorting options --> <label>Sort By:</label> <select v-model=\"sortBy\" @change=\"sortProducts\"> <option value=\"code\">Code</option> <option value=\"name\">Name</option> <option value=\"unit\">Unit</option> <option value=\"shelf_life\">Shelf Life</option> </select> <!-- Search input --> <label>Search by Code:</label> <input v-model=\"searchTerm\" @input=\"filterProducts\" /> <!-- Table of products --> <table> <thead> <tr> <th>Code</th> <th>Name</th> <th>Unit</th> <th>Shelf Life</th> </tr> </thead> <tbody> <tr v-for=\"product in filteredProducts\" :key=\"product.id\"> <td>{{ product.code }}</td> <td>{{ product.name }}</td> <td>{{ product.unit }}</td> <td>{{ product.shelf_life }}</td> </tr> </tbody> </table> </div> </template> <script> import axios from 'axios'; export default { name: 'Products', data() { return { products: [], sortBy: 'code', searchTerm: '', }; }, computed: { sortedProducts() { return this.products.slice().sort((a, b) => { if (this.sortBy === 'code') { return a.code.localeCompare(b.code); } else if (this.sortBy === 'name') { return a.name.localeCompare(b.name); } else if (this.sortBy === 'unit') { return a.unit.localeCompare(b.unit); } else if (this.sortBy === 'shelf_life') { return a.shelf_life - b.shelf_life; } return 0; }); }, filteredProducts() { const search = this.searchTerm.toLowerCase(); return this.sortedProducts.filter( product => product.code.toLowerCase().includes(search) ); }, }, methods: { async fetchProducts() { try { const response = await axios.get('http://127.0.0.1:8000/main/products/', { headers: { Authorization: `Token ${localStorage.getItem('access_token')}`, }, }); this.products = response.data; } catch (error) { console.error('Error fetching product data:', error); } }, sortProducts() { // Triggered when sorting option changes }, filterProducts() { // Triggered when search term changes }, }, created() { this.fetchProducts(); }, }; </script> <style scoped> .products-table { margin: 0 auto; /* \u0426\u0435\u043d\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0438 */ max-width: 800px; /* \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0448\u0438\u0440\u0438\u043d\u0430 \u0442\u0430\u0431\u043b\u0438\u0446\u044b */ } table { width: 100%; border-collapse: collapse; /* \u0421\u0432\u043e\u0434\u0438\u0442 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u044f\u0447\u0435\u0435\u043a \u0432\u043c\u0435\u0441\u0442\u0435 */ } th, td { border: 1px solid #ddd; /* \u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u044f\u0447\u0435\u0435\u043a */ padding: 8px; text-align: left; } th { background-color: #b100b8; /* \u0426\u0432\u0435\u0442 \u0444\u043e\u043d\u0430 \u0434\u043b\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 */ } </style> App.vue: <template> <div id=\"app\" class=\"web-1-0\"> <Navbar /> <router-view></router-view> </div> </template> <script> import Navbar from './components/Navbar.vue'; export default { name: 'App', components: { Navbar, }, }; </script> <style> #app { background-color: #001b68; min-height: 768px; margin: 0 auto; padding: 2rem; font-weight: normal; } .web-1-0 { background-color: #001b68; /* Bright yellow */ font-family: Comic Sans MS, cursive, sans-serif; color: #00ffcc; /* Bright red */ } </style> main.js import { createApp } from 'vue'; import { createRouter, createWebHistory } from 'vue-router'; import 'bootstrap/dist/css/bootstrap.min.css'; import axios from 'axios'; import App from './App.vue'; import Login from './components/Login.vue'; import Register from './components/Register.vue'; import Profile from './components/Profile.vue'; import Home from './views/Home.vue'; import Brokers from './views/Brokers.vue'; import Producers from './views/Producers.vue'; import Products from './views/Products.vue'; import Cosignments from './views/Cosignments.vue' axios.defaults.baseURL = 'http://127.0.0.1:8000/'; const app = createApp(App); app.config.globalProperties.isAuthenticated = false; const router = createRouter({ history: createWebHistory(), routes: [ { path: '/login', component: Login }, { path: '/register', component: Register }, { path: '/profile', component: Profile, meta: { requiresAuth: true } }, { path: '/', component: Home }, { path: '/brokers', component: Brokers, meta: { requiresAuth: true } }, { path: '/producers', component: Producers, meta: { requiresAuth: true } }, { path: '/products', component: Products, meta: { requiresAuth: true } }, { path: '/cosignments', component: Cosignments, meta: { requiresAuth: true } }, ], }); router.beforeEach((to, from, next) => { if (to.matched.some(record => record.meta.requiresAuth)) { if (!localStorage.getItem('access_token')) { next({ path: '/login', query: { redirect: to.fullPath }, }); } else { next(); } } else { next(); } }); app.use(router); app.mount('#app');","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab4/#_2","text":"","title":"\u0414\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0441\u0430\u0439\u0442\u0430"}]}
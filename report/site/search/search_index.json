{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0441\u043e\u0431\u0440\u0430\u043d\u044b \u0432\u0441\u0435 \u043e\u0442\u0447\u0435\u0442\u044b \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u043c \u0438 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0440\u0430\u0431\u043e\u0442\u0430\u043c \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\". \u041e\u0442\u0447\u0435\u0442\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0441\u0442\u0443\u0434\u0435\u043d\u0442 \u0433\u0440\u0443\u043f\u043f\u044b K33422 \u041d\u0438\u043a\u043e\u043d\u043e\u0440\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c","title":"Home"},{"location":"lab1/","text":"\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u041c\u0438\u043d\u0438\u0441\u0442\u0435\u0440\u0441\u0442\u0432\u043e \u043d\u0430\u0443\u043a\u0438 \u0438 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0443\u0447\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u00ab\u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e\u00bb \u041e\u0422\u0427\u0415\u0422 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u00ab\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438\u00bb \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u00abWeb-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u00bb \u041e\u0442\u0447\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0421\u0442\u0443\u0434\u0435\u043d\u0442: \u041d\u0438\u043a\u043e\u043d\u043e\u0440\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a33422 \u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u0418\u041a\u0422 \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023 \u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b \u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u043a\u0435\u0442\u043e\u0432.","title":"Intro"},{"location":"lab1/#_1","text":"\u041c\u0438\u043d\u0438\u0441\u0442\u0435\u0440\u0441\u0442\u0432\u043e \u043d\u0430\u0443\u043a\u0438 \u0438 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0443\u0447\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u00ab\u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e\u00bb \u041e\u0422\u0427\u0415\u0422 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u00ab\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u043e\u043a\u0435\u0442\u0430\u043c\u0438\u00bb \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u00abWeb-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u00bb \u041e\u0442\u0447\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0421\u0442\u0443\u0434\u0435\u043d\u0442: \u041d\u0438\u043a\u043e\u043d\u043e\u0440\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a33422 \u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u0418\u041a\u0422 \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023","title":"\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435"},{"location":"lab1/#_2","text":"\u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u043e\u043a\u0435\u0442\u043e\u0432.","title":"\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab1/task1/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1 \u0422\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP \u041a\u043e\u0434 server.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_DGRAM ) sock . bind (( '127.0.0.1' , 49001 )) data , adr = sock . recvfrom ( 1024 ) print ( data . decode ( \"utf-8\" )) response = b \"Message received. Hello client!\" sock . sendto ( response , adr ) sock . close () client.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_DGRAM ) server_address = ( '127.0.0.1' , 49001 ) message = b \"Hello, server!\" sock . sendto ( message , server_address ) data , server = sock . recvfrom ( 1024 ) print ( data . decode ( \"utf-8\" )) sock . close () \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b","title":"Task 1"},{"location":"lab1/task1/#1","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"lab1/task1/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP","title":"\u0422\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f"},{"location":"lab1/task1/#_2","text":"server.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_DGRAM ) sock . bind (( '127.0.0.1' , 49001 )) data , adr = sock . recvfrom ( 1024 ) print ( data . decode ( \"utf-8\" )) response = b \"Message received. Hello client!\" sock . sendto ( response , adr ) sock . close () client.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_DGRAM ) server_address = ( '127.0.0.1' , 49001 ) message = b \"Hello, server!\" sock . sendto ( message , server_address ) data , server = sock . recvfrom ( 1024 ) print ( data . decode ( \"utf-8\" )) sock . close ()","title":"\u041a\u043e\u0434"},{"location":"lab1/task1/#_3","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab1/task2/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 \u0422\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041c\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442: \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP \u041a\u043e\u0434 server.py import socket from numpy import polynomial sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( '127.0.0.1' , 49001 )) sock . listen ( 1 ) conn , adr = sock . accept () while True : try : data = conn . recv ( 1024 ) . decode ( \"utf-8\" ) data = data . split () a , b , c = int ( data [ 0 ]), int ( data [ 1 ]), int ( data [ 2 ]) if ( b * b - 4 * a * c ) >= 0 : pol = polynomial . Polynomial ([ a , b , c ]) pol = pol . roots () roots = str ( pol [ 0 ]) + ' ' + str ( pol [ 1 ]) print ( '\u041a\u043e\u0440\u043d\u0438 \u043d\u0430\u0439\u0434\u0435\u043d\u044b' ) else : roots = \"\u041d\u0435\u0442 \u043a\u043e\u0440\u043d\u0435\u0439\" print ( '\u041a\u043e\u0440\u043d\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b' ) conn . send ( roots . encode ()) except : conn . close () client.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( '127.0.0.1' , 49001 )) print ( '\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u044d\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b a, b, c \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u043b\u0435\u043b:' ) try : a , b , c = map ( str , input () . split ()) coef = a + ' ' + b + ' ' + c sock . send ( coef . encode ()) data = sock . recv ( 1024 ) . decode ( \"utf-8\" ) print ( data ) except : print ( '\u041a\u0430\u043a\u0430\u044f-\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430' ) sock . close () \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b","title":"Task 2"},{"location":"lab1/task2/#2","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"lab1/task2/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u041c\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442: \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP","title":"\u0422\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f"},{"location":"lab1/task2/#_2","text":"server.py import socket from numpy import polynomial sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( '127.0.0.1' , 49001 )) sock . listen ( 1 ) conn , adr = sock . accept () while True : try : data = conn . recv ( 1024 ) . decode ( \"utf-8\" ) data = data . split () a , b , c = int ( data [ 0 ]), int ( data [ 1 ]), int ( data [ 2 ]) if ( b * b - 4 * a * c ) >= 0 : pol = polynomial . Polynomial ([ a , b , c ]) pol = pol . roots () roots = str ( pol [ 0 ]) + ' ' + str ( pol [ 1 ]) print ( '\u041a\u043e\u0440\u043d\u0438 \u043d\u0430\u0439\u0434\u0435\u043d\u044b' ) else : roots = \"\u041d\u0435\u0442 \u043a\u043e\u0440\u043d\u0435\u0439\" print ( '\u041a\u043e\u0440\u043d\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b' ) conn . send ( roots . encode ()) except : conn . close () client.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( '127.0.0.1' , 49001 )) print ( '\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u044d\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b a, b, c \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u043b\u0435\u043b:' ) try : a , b , c = map ( str , input () . split ()) coef = a + ' ' + b + ' ' + c sock . send ( coef . encode ()) data = sock . recv ( 1024 ) . decode ( \"utf-8\" ) print ( data ) except : print ( '\u041a\u0430\u043a\u0430\u044f-\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430' ) sock . close ()","title":"\u041a\u043e\u0434"},{"location":"lab1/task2/#_3","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab1/task3/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3 \u0422\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html . \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket \u041a\u043e\u0434 server.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( '127.0.0.1' , 49001 )) sock . listen ( 1 ) while True : conn , adr = sock . accept () data = conn . recv ( 1024 ) . decode ( \"utf-8\" ) if not data : print ( '\u041a\u0430\u043a\u0430\u044f-\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430' ) break with open ( 'C:/Users/nic03/5sem/WebProgramming/lab_1/task3/index.html' , 'r' ) as file : html_page = file . read () resp = f \"HTTP/1.1 200 OK \\r\\n Content-Type: text/html \\r\\n\\r\\n { html_page } \\r\\n \" conn . send ( resp . encode ( \"utf-8\" )) conn . close () client.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( '127.0.0.1' , 49001 )) req = \"GET / HTTP/1.1 \\r\\n Host: 127.0.0.1 \\r\\n\\r\\n \" sock . send ( req . encode ( \"utf-8\" )) data = sock . recv ( 1024 ) . decode ( \"utf-8\" ) print ( data ) sock . close () \u0422\u0443\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f index.html index.html <!DOCTYPE html> < html > < head > < title > Task3 </ title > < style > body { font-family : Arial , sans-serif ; background-color : #f0f0f0 ; margin : 0 ; padding : 0 ; } header { background-color : #333 ; color : #fff ; text-align : center ; padding : 20 px ; } h1 { font-size : 36 px ; } main { padding : 20 px ; } </ style > </ head > < body > < header > < h1 > Music genres </ h1 > </ header > < main > < section id = \"rock\" > < h2 > Rock </ h2 > < p > Rock is a broad genre of popular music that originated as \"rock and roll\" in the United States in the late 1940s and early 1950s, developing into a range of different styles from the mid-1960s, particularly in the U.S. and the United Kingdom. </ p > </ section > < section id = \"jazz\" > < h2 > Jazz </ h2 > < p > Jazz is a music genre that originated in the African-American communities of New Orleans, Louisiana, in the late 19th and early 20th centuries, with its roots in blues and ragtime. </ p > </ section > < section id = \"classical\" > < h2 > Classical </ h2 > < p > Classical music generally refers to the art music of the Western world, considered to be distinct from Western folk music or popular music traditions. It is sometimes distinguished as Western classical music, as the term \"classical music\" also applies to non-Western art music. </ p > </ section > </ main > </ body > </ html > \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b","title":"Task 3"},{"location":"lab1/task3/#3","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3"},{"location":"lab1/task3/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html . \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket","title":"\u0422\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f"},{"location":"lab1/task3/#_2","text":"server.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( '127.0.0.1' , 49001 )) sock . listen ( 1 ) while True : conn , adr = sock . accept () data = conn . recv ( 1024 ) . decode ( \"utf-8\" ) if not data : print ( '\u041a\u0430\u043a\u0430\u044f-\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430' ) break with open ( 'C:/Users/nic03/5sem/WebProgramming/lab_1/task3/index.html' , 'r' ) as file : html_page = file . read () resp = f \"HTTP/1.1 200 OK \\r\\n Content-Type: text/html \\r\\n\\r\\n { html_page } \\r\\n \" conn . send ( resp . encode ( \"utf-8\" )) conn . close () client.py import socket sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( '127.0.0.1' , 49001 )) req = \"GET / HTTP/1.1 \\r\\n Host: 127.0.0.1 \\r\\n\\r\\n \" sock . send ( req . encode ( \"utf-8\" )) data = sock . recv ( 1024 ) . decode ( \"utf-8\" ) print ( data ) sock . close () \u0422\u0443\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f index.html index.html <!DOCTYPE html> < html > < head > < title > Task3 </ title > < style > body { font-family : Arial , sans-serif ; background-color : #f0f0f0 ; margin : 0 ; padding : 0 ; } header { background-color : #333 ; color : #fff ; text-align : center ; padding : 20 px ; } h1 { font-size : 36 px ; } main { padding : 20 px ; } </ style > </ head > < body > < header > < h1 > Music genres </ h1 > </ header > < main > < section id = \"rock\" > < h2 > Rock </ h2 > < p > Rock is a broad genre of popular music that originated as \"rock and roll\" in the United States in the late 1940s and early 1950s, developing into a range of different styles from the mid-1960s, particularly in the U.S. and the United Kingdom. </ p > </ section > < section id = \"jazz\" > < h2 > Jazz </ h2 > < p > Jazz is a music genre that originated in the African-American communities of New Orleans, Louisiana, in the late 19th and early 20th centuries, with its roots in blues and ragtime. </ p > </ section > < section id = \"classical\" > < h2 > Classical </ h2 > < p > Classical music generally refers to the art music of the Western world, considered to be distinct from Western folk music or popular music traditions. It is sometimes distinguished as Western classical music, as the term \"classical music\" also applies to non-Western art music. </ p > </ section > </ main > </ body > </ html >","title":"\u041a\u043e\u0434"},{"location":"lab1/task3/#_3","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab1/task4/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4 \u0422\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading . \u041a\u043e\u0434 server.py import socket import threading sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( '127.0.0.1' , 49001 )) sock . listen () clients = [] nicknames = [] def broadcast ( message ): for client in clients : client . send ( message ) def handel_client ( client ): while True : try : message = client . recv ( 1024 ) broadcast ( message ) except : index = clients . index ( client ) clients . remove ( client ) client . close () nickname = nicknames [ index ] broadcast ( f \" { nickname } \u043f\u043e\u043a\u0438\u043d\u0443\u043b_\u0430 \u043a\u043e\u043c\u043d\u0430\u0442\u0443\" . encode ( 'utf-8' )) nicknames . remove ( nickname ) break def recieve (): print ( \"\u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u0433\u043e\u0442\u043e\u0432\u0430 \u043a \u0447\u0430\u0442\u0443\" ) while True : client , adress = sock . accept () print ( f '\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c { str ( adress ) } ' ) client . send ( 'nickname?' . encode ( 'utf-8' )) nickname = client . recv ( 1024 ) . decode ( 'utf-8' ) nicknames . append ( nickname ) clients . append ( client ) broadcast ( f ' { nickname } \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b_\u0430\u0441\u044c \u043a \u043a\u043e\u043c\u043d\u0430\u0442\u0435' . encode ( 'utf-8' )) client . send ( f ' { nickname } , \u043c\u043e\u0436\u0435\u0448\u044c \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c \u0434\u0438\u0430\u043b\u043e\u0433' . encode ( 'utf-8' )) thread = threading . Thread ( target = handel_client , args = ( client ,)) thread . start () if __name__ == \"__main__\" : recieve () client.py import socket import threading nickname = input ( '\u0412\u0432\u0435\u0434\u0438 \u0441\u0432\u043e\u0439 \u043d\u0438\u043a\u043d\u0435\u0439\u043c: ' ) sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( '127.0.0.1' , 49001 )) def client_recieve (): while True : try : message = sock . recv ( 1024 ) . decode ( 'utf-8' ) if message == \"nickname?\" : sock . send ( nickname . encode ( 'utf-8' )) else : print ( message ) except : print ( \"Error\" ) sock . close () break def client_send (): while True : message = f ' { nickname } : { input () } ' sock . send ( message . encode ( 'utf-8' )) recieve_thread = threading . Thread ( target = client_recieve ) recieve_thread . start () send_thread = threading . Thread ( target = client_send ) send_thread . start () \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b","title":"Task 4"},{"location":"lab1/task4/#4","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4"},{"location":"lab1/task4/#_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading .","title":"\u0422\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f"},{"location":"lab1/task4/#_2","text":"server.py import socket import threading sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . bind (( '127.0.0.1' , 49001 )) sock . listen () clients = [] nicknames = [] def broadcast ( message ): for client in clients : client . send ( message ) def handel_client ( client ): while True : try : message = client . recv ( 1024 ) broadcast ( message ) except : index = clients . index ( client ) clients . remove ( client ) client . close () nickname = nicknames [ index ] broadcast ( f \" { nickname } \u043f\u043e\u043a\u0438\u043d\u0443\u043b_\u0430 \u043a\u043e\u043c\u043d\u0430\u0442\u0443\" . encode ( 'utf-8' )) nicknames . remove ( nickname ) break def recieve (): print ( \"\u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u0433\u043e\u0442\u043e\u0432\u0430 \u043a \u0447\u0430\u0442\u0443\" ) while True : client , adress = sock . accept () print ( f '\u0421\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c { str ( adress ) } ' ) client . send ( 'nickname?' . encode ( 'utf-8' )) nickname = client . recv ( 1024 ) . decode ( 'utf-8' ) nicknames . append ( nickname ) clients . append ( client ) broadcast ( f ' { nickname } \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b_\u0430\u0441\u044c \u043a \u043a\u043e\u043c\u043d\u0430\u0442\u0435' . encode ( 'utf-8' )) client . send ( f ' { nickname } , \u043c\u043e\u0436\u0435\u0448\u044c \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c \u0434\u0438\u0430\u043b\u043e\u0433' . encode ( 'utf-8' )) thread = threading . Thread ( target = handel_client , args = ( client ,)) thread . start () if __name__ == \"__main__\" : recieve () client.py import socket import threading nickname = input ( '\u0412\u0432\u0435\u0434\u0438 \u0441\u0432\u043e\u0439 \u043d\u0438\u043a\u043d\u0435\u0439\u043c: ' ) sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) sock . connect (( '127.0.0.1' , 49001 )) def client_recieve (): while True : try : message = sock . recv ( 1024 ) . decode ( 'utf-8' ) if message == \"nickname?\" : sock . send ( nickname . encode ( 'utf-8' )) else : print ( message ) except : print ( \"Error\" ) sock . close () break def client_send (): while True : message = f ' { nickname } : { input () } ' sock . send ( message . encode ( 'utf-8' )) recieve_thread = threading . Thread ( target = client_recieve ) recieve_thread . start () send_thread = threading . Thread ( target = client_send ) send_thread . start ()","title":"\u041a\u043e\u0434"},{"location":"lab1/task4/#_3","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab1/task5/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5 \u0422\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket . \u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0443\u043c\u0435\u0442\u044c: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0441\u0438\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. \u041a\u043e\u0434 server.py import socket class MyHTTPServer : def __init__ ( self , host , port ): self . host = host self . port = port self . grades = {} def serve_forever ( self ): server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) server_socket . bind (( self . host , self . port )) server_socket . listen ( 1 ) print ( f \"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 { self . host } : { self . port } \" ) while True : client_socket , _ = server_socket . accept () self . serve_client ( client_socket ) def serve_client ( self , client_socket ): grades = client_socket . recv ( 1024 ) . decode ( 'utf-8' ) method , url , _ = self . parse_request ( grades ) if method == 'GET' : response = self . handle_get_request ( url ) elif method == 'POST' : response = self . handle_post_request ( url , grades ) client_socket . sendall ( response . encode ( 'utf-8' )) client_socket . close () def parse_request ( self , request_data ): lines = request_data . split ( ' \\n ' ) method , url , version = lines [ 0 ] . split () return method , url , version def parse_headers ( self , request_data ): lines = request_data . split ( ' \\n ' ) headers = {} for line in lines [ 1 :]: if line . strip (): parts = line . split ( ':' , 1 ) key = parts [ 0 ] . strip () value = parts [ 1 ] . strip () if len ( parts ) > 1 else '' headers [ key ] = value return headers def handle_get_request ( self , url ): if url == '/' : return self . subject_html () else : return \"HTTP/1.1 404 Not Found \\n Content-Type: text/plain \\n\\n Not Found\" def handle_post_request ( self , url , grades ): if url == '/add_grade' : parameters = grades . split ( ' \\n ' )[ - 1 ] subject , grade = self . post_parse ( parameters ) if int ( grade ) in [ 1 , 2 , 3 , 4 , 5 ]: try : self . grades [ subject ] . append ( grade ) except KeyError : self . grades [ subject ] = [ grade ] return self . subject_html () else : return \"HTTP/1.1 404 Not Found \\n Content-Type: text/plain \\n\\n Not Found\" def post_parse ( self , parameters ): parameters = parameters . split ( '&' ) subject = None grade = None for param in parameters : key , value = param . split ( '=' ) if key == 'subject' : subject = value elif key == 'grade' : grade = value return subject , grade def subject_html ( self ): html = \"\"\" \\ <!DOCTYPE html> <html> <head> <meta charset=\"UTF-8\"> <title>\u041e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435</title> <style> body { font-family: 'Trebuchet MS', Helvetica, sans-serif; background-color: #f2f2f2; text-align: center; margin: 0; padding: 0; } h1 { background-color: #333; color: white; padding: 20px 0; margin: 0; } table { width: 80%; margin: 20px auto; border-collapse: collapse; border: 1px solid #ddd; background-color: #fff; } th, td { padding: 10px; text-align: left; border: 1px solid #ddd; } th { background-color: #555; color: white; } tr:nth-child(even) { background-color: #f2f2f2; } form { width: 80%; margin: 20px auto; padding: 20px; background-color: #fff; border: 1px solid #ddd; display: flex; flex-wrap: wrap; justify-content: center; align-items: center; } input[type=\"text\"] { width: 70%; padding: 10px; margin-bottom: 10px; border: 1px solid #ccc; border-radius: 3px; } input[type=\"submit\"] { background-color: #555; color: white; padding: 10px 15px; border: none; border-radius: 3px; cursor: pointer; width: 100%; } </style> </head> <body> <h1>\u041e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435</h1> <table> <tr> <th>\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430</th> <th>\u041e\u0446\u0435\u043d\u043a\u0430</th> <th>\u0421\u0440\u0435\u0434\u043d\u0438\u0439 \u0431\u0430\u043b\u043b</th> </tr> \"\"\" for subject , grades in self . grades . items (): numeric_grades = [ float ( grade ) for grade in grades if grade . isdigit ()] # \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043e\u043a \u0432 \u0447\u0438\u0441\u043b\u0430 if numeric_grades : average_grade = sum ( numeric_grades ) / len ( numeric_grades ) else : average_grade = 0 html += f \"<tr><td> { subject } </td><td> { ', ' . join ( grades ) } </td><td> { average_grade : .2f } </td></tr>\" html += \"\"\" \\ </table> <h2>\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443</h2> <form method=\"post\" action=\"/add_grade\"> <input type=\"text\" id=\"subject\" name=\"subject\", placeholder=\"\u041f\u0440\u0435\u0434\u043c\u0435\u0442\"><br> <input type=\"text\" id=\"grade\" name=\"grade\", placeholder=\"\u041e\u0446\u0435\u043d\u043a\u0430\"><br> <input type=\"submit\" value=\"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\"> </form> </body> </html> \"\"\" return f \"HTTP/1.1 200 OK \\n Content-Type: text/html; charset=UTF-8 \\n\\n { html } \" if __name__ == '__main__' : host = '127.0.0.1' port = 49001 serv = MyHTTPServer ( host , port ) try : serv . serve_forever () except KeyboardInterrupt : pass \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b","title":"Task 5"},{"location":"lab1/task5/#5","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5"},{"location":"lab1/task5/#_1","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket . \u0421\u0435\u0440\u0432\u0435\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0443\u043c\u0435\u0442\u044c: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0441\u0438\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b.","title":"\u0422\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f"},{"location":"lab1/task5/#_2","text":"server.py import socket class MyHTTPServer : def __init__ ( self , host , port ): self . host = host self . port = port self . grades = {} def serve_forever ( self ): server_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) server_socket . bind (( self . host , self . port )) server_socket . listen ( 1 ) print ( f \"\u0421\u0435\u0440\u0432\u0435\u0440 \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430 { self . host } : { self . port } \" ) while True : client_socket , _ = server_socket . accept () self . serve_client ( client_socket ) def serve_client ( self , client_socket ): grades = client_socket . recv ( 1024 ) . decode ( 'utf-8' ) method , url , _ = self . parse_request ( grades ) if method == 'GET' : response = self . handle_get_request ( url ) elif method == 'POST' : response = self . handle_post_request ( url , grades ) client_socket . sendall ( response . encode ( 'utf-8' )) client_socket . close () def parse_request ( self , request_data ): lines = request_data . split ( ' \\n ' ) method , url , version = lines [ 0 ] . split () return method , url , version def parse_headers ( self , request_data ): lines = request_data . split ( ' \\n ' ) headers = {} for line in lines [ 1 :]: if line . strip (): parts = line . split ( ':' , 1 ) key = parts [ 0 ] . strip () value = parts [ 1 ] . strip () if len ( parts ) > 1 else '' headers [ key ] = value return headers def handle_get_request ( self , url ): if url == '/' : return self . subject_html () else : return \"HTTP/1.1 404 Not Found \\n Content-Type: text/plain \\n\\n Not Found\" def handle_post_request ( self , url , grades ): if url == '/add_grade' : parameters = grades . split ( ' \\n ' )[ - 1 ] subject , grade = self . post_parse ( parameters ) if int ( grade ) in [ 1 , 2 , 3 , 4 , 5 ]: try : self . grades [ subject ] . append ( grade ) except KeyError : self . grades [ subject ] = [ grade ] return self . subject_html () else : return \"HTTP/1.1 404 Not Found \\n Content-Type: text/plain \\n\\n Not Found\" def post_parse ( self , parameters ): parameters = parameters . split ( '&' ) subject = None grade = None for param in parameters : key , value = param . split ( '=' ) if key == 'subject' : subject = value elif key == 'grade' : grade = value return subject , grade def subject_html ( self ): html = \"\"\" \\ <!DOCTYPE html> <html> <head> <meta charset=\"UTF-8\"> <title>\u041e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435</title> <style> body { font-family: 'Trebuchet MS', Helvetica, sans-serif; background-color: #f2f2f2; text-align: center; margin: 0; padding: 0; } h1 { background-color: #333; color: white; padding: 20px 0; margin: 0; } table { width: 80%; margin: 20px auto; border-collapse: collapse; border: 1px solid #ddd; background-color: #fff; } th, td { padding: 10px; text-align: left; border: 1px solid #ddd; } th { background-color: #555; color: white; } tr:nth-child(even) { background-color: #f2f2f2; } form { width: 80%; margin: 20px auto; padding: 20px; background-color: #fff; border: 1px solid #ddd; display: flex; flex-wrap: wrap; justify-content: center; align-items: center; } input[type=\"text\"] { width: 70%; padding: 10px; margin-bottom: 10px; border: 1px solid #ccc; border-radius: 3px; } input[type=\"submit\"] { background-color: #555; color: white; padding: 10px 15px; border: none; border-radius: 3px; cursor: pointer; width: 100%; } </style> </head> <body> <h1>\u041e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435</h1> <table> <tr> <th>\u0414\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430</th> <th>\u041e\u0446\u0435\u043d\u043a\u0430</th> <th>\u0421\u0440\u0435\u0434\u043d\u0438\u0439 \u0431\u0430\u043b\u043b</th> </tr> \"\"\" for subject , grades in self . grades . items (): numeric_grades = [ float ( grade ) for grade in grades if grade . isdigit ()] # \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043e\u043a \u0432 \u0447\u0438\u0441\u043b\u0430 if numeric_grades : average_grade = sum ( numeric_grades ) / len ( numeric_grades ) else : average_grade = 0 html += f \"<tr><td> { subject } </td><td> { ', ' . join ( grades ) } </td><td> { average_grade : .2f } </td></tr>\" html += \"\"\" \\ </table> <h2>\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443</h2> <form method=\"post\" action=\"/add_grade\"> <input type=\"text\" id=\"subject\" name=\"subject\", placeholder=\"\u041f\u0440\u0435\u0434\u043c\u0435\u0442\"><br> <input type=\"text\" id=\"grade\" name=\"grade\", placeholder=\"\u041e\u0446\u0435\u043d\u043a\u0430\"><br> <input type=\"submit\" value=\"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c\"> </form> </body> </html> \"\"\" return f \"HTTP/1.1 200 OK \\n Content-Type: text/html; charset=UTF-8 \\n\\n { html } \" if __name__ == '__main__' : host = '127.0.0.1' port = 49001 serv = MyHTTPServer ( host , port ) try : serv . serve_forever () except KeyboardInterrupt : pass","title":"\u041a\u043e\u0434"},{"location":"lab1/task5/#_3","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/","text":"\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u041c\u0438\u043d\u0438\u0441\u0442\u0435\u0440\u0441\u0442\u0432\u043e \u043d\u0430\u0443\u043a\u0438 \u0438 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0443\u0447\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u00ab\u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e\u00bb \u041e\u0422\u0427\u0415\u0422 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u00ab\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django\u00bb \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u00abWeb-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u00bb \u041e\u0442\u0447\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0421\u0442\u0443\u0434\u0435\u043d\u0442: \u041d\u0438\u043a\u043e\u043d\u043e\u0440\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a33422 \u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u0418\u041a\u0422 \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023 \u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b \u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django 2.2.","title":"Intro"},{"location":"lab2/#_1","text":"\u041c\u0438\u043d\u0438\u0441\u0442\u0435\u0440\u0441\u0442\u0432\u043e \u043d\u0430\u0443\u043a\u0438 \u0438 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0443\u0447\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u00ab\u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e\u00bb \u041e\u0422\u0427\u0415\u0422 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u00ab\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u0430\u0439\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django\u00bb \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u00abWeb-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u00bb \u041e\u0442\u0447\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0421\u0442\u0443\u0434\u0435\u043d\u0442: \u041d\u0438\u043a\u043e\u043d\u043e\u0440\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a33422 \u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u0418\u041a\u0422 \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023","title":"\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435"},{"location":"lab2/#_2","text":"\u041e\u0432\u043b\u0430\u0434\u0435\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u043d\u0430\u0432\u044b\u043a\u0430\u043c\u0438 \u0438 \u0443\u043c\u0435\u043d\u0438\u044f\u043c\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 web-\u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django 2.2.","title":"\u0426\u0435\u043b\u044c \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/forms/","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 urls.py \u0438 \u0444\u043e\u0440\u043c \u0422\u0443\u0442 \u044f \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u043a\u043e\u0434 \u043a urls.py \u0438 \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0436\u0443 \u043e \u0444\u043e\u0440\u043c\u0430\u0445. Urls urls.py \u0443 \u043c\u0435\u043d\u044f \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0434\u0432\u0430\u0436\u0434\u044b - \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u0445 Users \u0438 Journal . \u041e\u043d\u0438 \u0442\u0435\u0441\u043d\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u044b \u0441 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438, \u0442\u0430\u043a \u0447\u0442\u043e \u043e\u0441\u0442\u0430\u0432\u043b\u044e \u044d\u0442\u0443 \u0447\u0430\u0441\u0442\u044c \u0431\u0435\u0437 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0439. users/urls.py from django.urls import path , include from .views import UserRegister , UserEditing from django.contrib.auth import views as auth_views urlpatterns = [ path ( 'register/' , UserRegister . as_view (), name = 'register' ), path ( 'edit_profile/' , UserEditing . as_view (), name = 'edit' ), path ( 'password/' , auth_views . PasswordChangeView . as_view ()), ] journal/urls.py from django.urls import path , include from django.contrib.auth.views import LoginView from .views import HomePage , HomeworkPage , AddHomework , EditHomework , DeleteHomework , SubmitHomework , GradeHomework , StudentGrades , GradeStudentHomework from django.contrib.auth.decorators import login_required urlpatterns = [ path ( 'login/' , LoginView . as_view (), name = 'login' ), path ( '' , login_required ( HomePage . as_view ()), name = 'home' ), path ( 'homework/<int:pk>' , login_required ( HomeworkPage . as_view ()), name = 'homework-page' ), path ( 'add_homework/' , login_required ( AddHomework . as_view ()), name = 'new-homework' ), path ( 'homework/edit/<int:pk>' , login_required ( EditHomework . as_view ()), name = 'edit-homework' ), path ( 'homework/<int:pk>/delete/' , login_required ( DeleteHomework . as_view ()), name = 'delete-homework' ), path ( 'homework/<int:pk>/submit/' , login_required ( SubmitHomework . as_view ()), name = 'submit-homework' ), path ( 'grade_homework/' , login_required ( GradeHomework . as_view ()), name = 'grade-homework' ), path ( 'student_grades/<int:student_id>/' , login_required ( StudentGrades . as_view ()), name = 'student-grades' ), path ( 'student_homework/<int:student_id>/<int:submission_id>/' , login_required ( GradeStudentHomework . as_view ()), name = 'grade-student-homework' ), ] Forms users/forms.py from django.contrib.auth.forms import UserCreationForm , UserChangeForm from django.contrib.auth.models import User from django import forms class SignUpForm ( UserCreationForm ): username = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' })) email = forms . EmailField ( widget = forms . EmailInput ( attrs = { 'class' : 'form-control' })) first_name = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' })) last_name = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' })) class Meta : model = User fields = ( 'username' , 'first_name' , 'last_name' , 'email' , 'password1' , 'password2' ) def __init__ ( self , * args , ** kwargs ): super ( SignUpForm , self ) . __init__ ( * args , ** kwargs ) self . fields [ 'username' ] . widget . attrs [ 'class' ] = 'form-control' self . fields [ 'password1' ] . widget . attrs [ 'class' ] = 'form-control' self . fields [ 'password2' ] . widget . attrs [ 'class' ] = 'form-control' class EditForm ( UserChangeForm ): username = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' })) email = forms . EmailField ( widget = forms . EmailInput ( attrs = { 'class' : 'form-control' })) first_name = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' , 'readonly' : 'readonly' })) last_name = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' , 'readonly' : 'readonly' })) class Meta : model = User fields = ( 'username' , 'first_name' , 'last_name' , 'email' ) \u0424\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435. \u0415\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 - \u044d\u0442\u043e \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0441\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u043c\u044f \u0438 \u0444\u0430\u043c\u0438\u043b\u0438\u044e. \u0418\u0445 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d. journal/forms.py from django import forms from .models import Profile , Homework , SubmittedHomework from bootstrap_datepicker_plus.widgets import DateTimePickerInput from django.utils import timezone class PostHomework ( forms . ModelForm ): class Meta : model = Homework fields = ( 'subject' , 'body' , 'end_date' , 'student_class' , 'subject' ) widgets = { 'subject' : forms . Select ( attrs = { 'class' : 'form-control' }), 'body' : forms . Textarea ( attrs = { 'class' : 'form-control' }), 'end_date' : DateTimePickerInput ( attrs = { 'class' : 'form-control' }, options = { 'format' : 'DD-MM-YYYY HH:mm' , 'showTodayButton' : True , 'minDate' : timezone . now () . strftime ( '%Y-%m- %d %H:%M' ), } ), 'student_class' : forms . Select ( attrs = { 'class' : 'form-control' }), } def __init__ ( self , * args , ** kwargs ): user = kwargs . pop ( 'user' , None ) # Remove 'user' from kwargs super () . __init__ ( * args , ** kwargs ) student_classes = Profile . objects . filter ( role = 'student' ) . values_list ( 'student_class' , flat = True ) . distinct () class_choices = [( cls , cls ) for cls in student_classes ] class_choices . insert ( 0 , ( '' , 'Choose a class' )) self . fields [ 'student_class' ] . widget . choices = class_choices if user and user . profile . role == 'teacher' : allowed_subjects = user . profile . subjects . all () . distinct () allowed_subjects = [( cls . name , cls . name ) for cls in allowed_subjects ] allowed_subjects . insert ( 0 , ( '' , 'Choose a subject' )) self . fields [ 'subject' ] . widget . choices = allowed_subjects class EditHomework ( forms . ModelForm ): class Meta : model = Homework fields = ( 'body' , 'end_date' , 'student_class' ) widgets = { 'body' : forms . Textarea ( attrs = { 'class' : 'form-control' }), 'end_date' : DateTimePickerInput ( attrs = { 'class' : 'form-control' }, options = { 'format' : 'DD-MM-YYYY HH:mm' , 'showTodayButton' : True , 'minDate' : timezone . now () . strftime ( '%Y-%m- %d %H:%M' ), } ), 'student_class' : forms . Select ( attrs = { 'class' : 'form-control' }), } def __init__ ( self , * args , ** kwargs ): super () . __init__ ( * args , ** kwargs ) student_classes = Profile . objects . filter ( role = 'student' ) . values_list ( 'student_class' , flat = True ) . distinct () class_choices = [( cls , cls ) for cls in student_classes ] self . fields [ 'student_class' ] . widget . choices = class_choices class SubmissionForm ( forms . ModelForm ): class Meta : model = SubmittedHomework fields = ( 'homework_body' ,) widgets = { 'homework_body' : forms . Textarea ( attrs = { 'class' : 'form-control' , 'rows' : 4 }), } \u0424\u043e\u0440\u043c\u044b PostHomework \u0438 EditHomework \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u0437\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u043c. \u0415\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439 - \u043d\u0435\u043b\u044c\u0437\u044f \u0432\u044b\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0434\u0430\u0442\u0443 \u043c\u0435\u043d\u044c\u0448\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439, \u0435\u0441\u0442\u044c \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u044b\u0439 \u0432\u044b\u0431\u043e\u0440 \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043e\u0432. \u0424\u043e\u0440\u043c\u0430 SubmissionForm \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430.","title":"Forms and URLs"},{"location":"lab2/forms/#urlspy","text":"\u0422\u0443\u0442 \u044f \u043f\u0440\u0438\u0432\u0435\u0434\u0443 \u043a\u043e\u0434 \u043a urls.py \u0438 \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0436\u0443 \u043e \u0444\u043e\u0440\u043c\u0430\u0445.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 urls.py \u0438 \u0444\u043e\u0440\u043c"},{"location":"lab2/forms/#urls","text":"urls.py \u0443 \u043c\u0435\u043d\u044f \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0434\u0432\u0430\u0436\u0434\u044b - \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u0445 Users \u0438 Journal . \u041e\u043d\u0438 \u0442\u0435\u0441\u043d\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u044b \u0441 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438, \u0442\u0430\u043a \u0447\u0442\u043e \u043e\u0441\u0442\u0430\u0432\u043b\u044e \u044d\u0442\u0443 \u0447\u0430\u0441\u0442\u044c \u0431\u0435\u0437 \u043e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0439. users/urls.py from django.urls import path , include from .views import UserRegister , UserEditing from django.contrib.auth import views as auth_views urlpatterns = [ path ( 'register/' , UserRegister . as_view (), name = 'register' ), path ( 'edit_profile/' , UserEditing . as_view (), name = 'edit' ), path ( 'password/' , auth_views . PasswordChangeView . as_view ()), ] journal/urls.py from django.urls import path , include from django.contrib.auth.views import LoginView from .views import HomePage , HomeworkPage , AddHomework , EditHomework , DeleteHomework , SubmitHomework , GradeHomework , StudentGrades , GradeStudentHomework from django.contrib.auth.decorators import login_required urlpatterns = [ path ( 'login/' , LoginView . as_view (), name = 'login' ), path ( '' , login_required ( HomePage . as_view ()), name = 'home' ), path ( 'homework/<int:pk>' , login_required ( HomeworkPage . as_view ()), name = 'homework-page' ), path ( 'add_homework/' , login_required ( AddHomework . as_view ()), name = 'new-homework' ), path ( 'homework/edit/<int:pk>' , login_required ( EditHomework . as_view ()), name = 'edit-homework' ), path ( 'homework/<int:pk>/delete/' , login_required ( DeleteHomework . as_view ()), name = 'delete-homework' ), path ( 'homework/<int:pk>/submit/' , login_required ( SubmitHomework . as_view ()), name = 'submit-homework' ), path ( 'grade_homework/' , login_required ( GradeHomework . as_view ()), name = 'grade-homework' ), path ( 'student_grades/<int:student_id>/' , login_required ( StudentGrades . as_view ()), name = 'student-grades' ), path ( 'student_homework/<int:student_id>/<int:submission_id>/' , login_required ( GradeStudentHomework . as_view ()), name = 'grade-student-homework' ), ]","title":"Urls"},{"location":"lab2/forms/#forms","text":"users/forms.py from django.contrib.auth.forms import UserCreationForm , UserChangeForm from django.contrib.auth.models import User from django import forms class SignUpForm ( UserCreationForm ): username = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' })) email = forms . EmailField ( widget = forms . EmailInput ( attrs = { 'class' : 'form-control' })) first_name = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' })) last_name = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' })) class Meta : model = User fields = ( 'username' , 'first_name' , 'last_name' , 'email' , 'password1' , 'password2' ) def __init__ ( self , * args , ** kwargs ): super ( SignUpForm , self ) . __init__ ( * args , ** kwargs ) self . fields [ 'username' ] . widget . attrs [ 'class' ] = 'form-control' self . fields [ 'password1' ] . widget . attrs [ 'class' ] = 'form-control' self . fields [ 'password2' ] . widget . attrs [ 'class' ] = 'form-control' class EditForm ( UserChangeForm ): username = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' })) email = forms . EmailField ( widget = forms . EmailInput ( attrs = { 'class' : 'form-control' })) first_name = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' , 'readonly' : 'readonly' })) last_name = forms . CharField ( max_length = 30 , widget = forms . TextInput ( attrs = { 'class' : 'form-control' , 'readonly' : 'readonly' })) class Meta : model = User fields = ( 'username' , 'first_name' , 'last_name' , 'email' ) \u0424\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435. \u0415\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 - \u044d\u0442\u043e \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0441\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u043c\u044f \u0438 \u0444\u0430\u043c\u0438\u043b\u0438\u044e. \u0418\u0445 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d. journal/forms.py from django import forms from .models import Profile , Homework , SubmittedHomework from bootstrap_datepicker_plus.widgets import DateTimePickerInput from django.utils import timezone class PostHomework ( forms . ModelForm ): class Meta : model = Homework fields = ( 'subject' , 'body' , 'end_date' , 'student_class' , 'subject' ) widgets = { 'subject' : forms . Select ( attrs = { 'class' : 'form-control' }), 'body' : forms . Textarea ( attrs = { 'class' : 'form-control' }), 'end_date' : DateTimePickerInput ( attrs = { 'class' : 'form-control' }, options = { 'format' : 'DD-MM-YYYY HH:mm' , 'showTodayButton' : True , 'minDate' : timezone . now () . strftime ( '%Y-%m- %d %H:%M' ), } ), 'student_class' : forms . Select ( attrs = { 'class' : 'form-control' }), } def __init__ ( self , * args , ** kwargs ): user = kwargs . pop ( 'user' , None ) # Remove 'user' from kwargs super () . __init__ ( * args , ** kwargs ) student_classes = Profile . objects . filter ( role = 'student' ) . values_list ( 'student_class' , flat = True ) . distinct () class_choices = [( cls , cls ) for cls in student_classes ] class_choices . insert ( 0 , ( '' , 'Choose a class' )) self . fields [ 'student_class' ] . widget . choices = class_choices if user and user . profile . role == 'teacher' : allowed_subjects = user . profile . subjects . all () . distinct () allowed_subjects = [( cls . name , cls . name ) for cls in allowed_subjects ] allowed_subjects . insert ( 0 , ( '' , 'Choose a subject' )) self . fields [ 'subject' ] . widget . choices = allowed_subjects class EditHomework ( forms . ModelForm ): class Meta : model = Homework fields = ( 'body' , 'end_date' , 'student_class' ) widgets = { 'body' : forms . Textarea ( attrs = { 'class' : 'form-control' }), 'end_date' : DateTimePickerInput ( attrs = { 'class' : 'form-control' }, options = { 'format' : 'DD-MM-YYYY HH:mm' , 'showTodayButton' : True , 'minDate' : timezone . now () . strftime ( '%Y-%m- %d %H:%M' ), } ), 'student_class' : forms . Select ( attrs = { 'class' : 'form-control' }), } def __init__ ( self , * args , ** kwargs ): super () . __init__ ( * args , ** kwargs ) student_classes = Profile . objects . filter ( role = 'student' ) . values_list ( 'student_class' , flat = True ) . distinct () class_choices = [( cls , cls ) for cls in student_classes ] self . fields [ 'student_class' ] . widget . choices = class_choices class SubmissionForm ( forms . ModelForm ): class Meta : model = SubmittedHomework fields = ( 'homework_body' ,) widgets = { 'homework_body' : forms . Textarea ( attrs = { 'class' : 'form-control' , 'rows' : 4 }), } \u0424\u043e\u0440\u043c\u044b PostHomework \u0438 EditHomework \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u0437\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u043c. \u0415\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439 - \u043d\u0435\u043b\u044c\u0437\u044f \u0432\u044b\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0434\u0430\u0442\u0443 \u043c\u0435\u043d\u044c\u0448\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439, \u0435\u0441\u0442\u044c \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u044b\u0439 \u0432\u044b\u0431\u043e\u0440 \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043e\u0432. \u0424\u043e\u0440\u043c\u0430 SubmissionForm \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0443\u0447\u0435\u043d\u0438\u043a\u0430.","title":"Forms"},{"location":"lab2/models/","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u041c\u043e\u0434\u0435\u043b\u0438 \u044f \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u043b \u0432 \u043e\u0434\u043d\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 - Journal . \u041c\u043e\u0434\u0435\u043b\u0438 \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u0437\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u043c\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u044f\u043c\u0438 \u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043c \u043e\u0431\u044f\u0437\u0430\u043d\u043d\u043e\u0441\u0442\u0435\u0439 \u0438 \u043f\u0440\u0430\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435: Journal \u0412\u0441\u0435\u0433\u043e \u0443 \u043c\u0435\u043d\u044f \u043f\u044f\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u0437\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0432\u0441\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043e\u0434 \u0446\u0435\u043b\u0438\u043a\u043e\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0432\u043d\u0438\u0437\u0443: journal/models.py from django.db import models from django.contrib.auth.models import User from django.urls import reverse from django.utils import timezone from django.dispatch import receiver from django.db.models.signals import post_save from ckeditor.fields import RichTextField class Homework ( models . Model ): subject = models . CharField ( max_length = 50 ) tutor = models . ForeignKey ( User , on_delete = models . CASCADE ) body = RichTextField ( blank = True , null = True ) start_date = models . DateTimeField ( default = timezone . now ) end_date = models . DateTimeField ( default = timezone . now ) student_class = models . CharField ( max_length = 3 ) def __str__ ( self ): return self . subject + ' | ' + str ( self . tutor ) def get_absolute_url ( self ): return reverse ( 'homework-page' , args = ( self . pk ,)) class Profile ( models . Model ): user = models . OneToOneField ( User , null = True , on_delete = models . CASCADE ) role = models . CharField ( blank = True , max_length = 10 , choices = [( 'teacher' , 'Teacher' ), ( 'student' , 'Student' )]) student_class = models . CharField ( max_length = 3 , blank = True , null = True ) subjects = models . ManyToManyField ( 'Subject' , blank = True , related_name = 'teachers' ) def __str__ ( self ): return str ( self . user ) @receiver ( post_save , sender = User ) def create_user_profile ( sender , instance , created , ** kwargs ): if created : Profile . objects . create ( user = instance ) class Subject ( models . Model ): name = models . CharField ( max_length = 100 , unique = True ) def __str__ ( self ): return self . name class SubmittedHomework ( models . Model ): student = models . ForeignKey ( User , on_delete = models . CASCADE ) homework = models . ForeignKey ( Homework , on_delete = models . CASCADE ) submitted_at = models . DateTimeField ( default = timezone . now ) homework_body = RichTextField ( blank = True , null = True ) grade = models . PositiveIntegerField ( default = 0 , null = True , blank = True ) status = models . CharField ( max_length = 20 , choices = [( 'issued' , 'Issued' ), ( 'pending_review' , 'Pending Review' ), ( 'graded' , 'Graded' )]) submitted = models . BooleanField ( default = False ) def __str__ ( self ): return f \" { self . student . username } 's submission for { self . homework . subject } \" class GradeJournal ( models . Model ): student = models . ForeignKey ( User , on_delete = models . CASCADE ) subject = models . CharField ( max_length = 50 ) grade = models . PositiveIntegerField ( null = True , blank = True ) homework = models . ForeignKey ( SubmittedHomework , on_delete = models . CASCADE ) def __str__ ( self ): return f \" { self . student . username } 's grade for { self . subject } \" \u041d\u0435\u043c\u043d\u043e\u0433\u043e \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u0422\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u0433\u043b\u0443\u0431\u0436\u0435, \u0447\u0442\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0447\u0442\u043e. \u041e\u0431\u044a\u0435\u043a\u0442 Profile \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u044e\u0437\u0435\u0440\u0435 \u0447\u0435\u0440\u0435\u0437 \u0441\u0432\u044f\u0437\u044c \u0441 User . \u0422\u0430\u043a, \u043c\u043e\u0436\u043d\u043e \u0443\u0437\u043d\u0430\u0442\u044c \u0438\u043c\u044f, \u0444\u0430\u043c\u0438\u043b\u0438\u044e, \u043d\u0438\u043a \u0438 \u043f\u043e\u0447\u0442\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u0445\u0440\u0430\u043d\u044f\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0438\u043f\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u0443\u0447\u0435\u043d\u0438\u043a \u0438\u043b\u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u044c), \u0443\u0447\u0435\u0431\u043d\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435 (\u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c - \u0443\u0447\u0435\u043d\u0438\u043a) \u0438 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0435\u0434\u0435\u0442 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c (\u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c - \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c). \u041a \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u0434\u043e\u0441\u0442\u0443\u043f \u0438\u043c\u0435\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0440\u043e\u043b\u0438 \u043c\u0435\u0436\u0434\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438. \u041a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0441\u044f \u043d\u0430 \u0441\u0430\u0439\u0442\u0435, \u0443 \u043d\u0435\u0433\u043e \u043f\u043e\u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0432\u043e\u0439 Profile . \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u041e\u0431\u044a\u0435\u043a\u0442 Subject \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0441\u0435\u0445 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0442\u043e\u043c \u0430\u0434\u043c\u0438\u043d\u043e\u043c \u0440\u0430\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0443\u0447\u0438\u0442\u0435\u043b\u044f\u043c. \u041e\u0431\u044a\u0435\u043a\u0442 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0441\u0432\u044f\u0437\u0430\u043d \u0441 Profile . \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u041e\u0431\u044a\u0435\u043a\u0442 Homework \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u044b\u0434\u0430\u043d\u043d\u043e\u043c \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438. \u0422\u0430\u043c \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u0440\u043e \u0434\u0435\u0434\u043b\u0430\u0439\u043d\u044b, \u0443\u0447\u0435\u0431\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043f\u043e\u043b\u0435 \u0441 \u0441\u0430\u043c\u0438\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e\u0431 \u0443\u0447\u0438\u0442\u0435\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0434\u0430\u043b \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u041e\u0431\u044a\u0435\u043a\u0442 SubmittedHomework \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u044b\u0434\u0430\u043d\u043d\u043e\u043c \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0443 \u0443\u0447\u0435\u043d\u0438\u043a\u0430. \u041f\u043e\u0441\u043b\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u043c \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u043e\u0431\u044a\u0435\u043a\u0442 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0443\u0447\u0435\u043d\u0438\u043a\u0430, \u043a\u043e\u043c\u0443 \u044d\u0442\u043e \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043e. \u0422\u0430\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0441\u0442\u0430\u0442\u0443\u0441 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f: \"\u0412\u044b\u0434\u0430\u043d\u043e\", \"\u041d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0435\" \u0438 \"\u041e\u0446\u0435\u043d\u0435\u043d\u043e\", \u0441\u0430\u043c\u0430 \u043e\u0446\u0435\u043d\u043a\u0430 \u0438 \u0442\u0435\u043a\u0441\u0442 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0443\u0447\u0435\u043d\u0438\u043a. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u041e\u0431\u044a\u0435\u043a\u0442 GradeJournal \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u0437\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b, \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0436\u0443\u0440\u043d\u0430\u043b \u0443\u0447\u0435\u043d\u0438\u043a\u0430. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b","title":"Models"},{"location":"lab2/models/#_1","text":"\u041c\u043e\u0434\u0435\u043b\u0438 \u044f \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u043b \u0432 \u043e\u0434\u043d\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438 - Journal . \u041c\u043e\u0434\u0435\u043b\u0438 \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u0437\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0441 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u043c\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u044f\u043c\u0438 \u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043c \u043e\u0431\u044f\u0437\u0430\u043d\u043d\u043e\u0441\u0442\u0435\u0439 \u0438 \u043f\u0440\u0430\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435:","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439"},{"location":"lab2/models/#journal","text":"\u0412\u0441\u0435\u0433\u043e \u0443 \u043c\u0435\u043d\u044f \u043f\u044f\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u0437\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0432\u0441\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043e\u0434 \u0446\u0435\u043b\u0438\u043a\u043e\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0432\u043d\u0438\u0437\u0443: journal/models.py from django.db import models from django.contrib.auth.models import User from django.urls import reverse from django.utils import timezone from django.dispatch import receiver from django.db.models.signals import post_save from ckeditor.fields import RichTextField class Homework ( models . Model ): subject = models . CharField ( max_length = 50 ) tutor = models . ForeignKey ( User , on_delete = models . CASCADE ) body = RichTextField ( blank = True , null = True ) start_date = models . DateTimeField ( default = timezone . now ) end_date = models . DateTimeField ( default = timezone . now ) student_class = models . CharField ( max_length = 3 ) def __str__ ( self ): return self . subject + ' | ' + str ( self . tutor ) def get_absolute_url ( self ): return reverse ( 'homework-page' , args = ( self . pk ,)) class Profile ( models . Model ): user = models . OneToOneField ( User , null = True , on_delete = models . CASCADE ) role = models . CharField ( blank = True , max_length = 10 , choices = [( 'teacher' , 'Teacher' ), ( 'student' , 'Student' )]) student_class = models . CharField ( max_length = 3 , blank = True , null = True ) subjects = models . ManyToManyField ( 'Subject' , blank = True , related_name = 'teachers' ) def __str__ ( self ): return str ( self . user ) @receiver ( post_save , sender = User ) def create_user_profile ( sender , instance , created , ** kwargs ): if created : Profile . objects . create ( user = instance ) class Subject ( models . Model ): name = models . CharField ( max_length = 100 , unique = True ) def __str__ ( self ): return self . name class SubmittedHomework ( models . Model ): student = models . ForeignKey ( User , on_delete = models . CASCADE ) homework = models . ForeignKey ( Homework , on_delete = models . CASCADE ) submitted_at = models . DateTimeField ( default = timezone . now ) homework_body = RichTextField ( blank = True , null = True ) grade = models . PositiveIntegerField ( default = 0 , null = True , blank = True ) status = models . CharField ( max_length = 20 , choices = [( 'issued' , 'Issued' ), ( 'pending_review' , 'Pending Review' ), ( 'graded' , 'Graded' )]) submitted = models . BooleanField ( default = False ) def __str__ ( self ): return f \" { self . student . username } 's submission for { self . homework . subject } \" class GradeJournal ( models . Model ): student = models . ForeignKey ( User , on_delete = models . CASCADE ) subject = models . CharField ( max_length = 50 ) grade = models . PositiveIntegerField ( null = True , blank = True ) homework = models . ForeignKey ( SubmittedHomework , on_delete = models . CASCADE ) def __str__ ( self ): return f \" { self . student . username } 's grade for { self . subject } \"","title":"Journal"},{"location":"lab2/models/#_2","text":"\u0422\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u0433\u043b\u0443\u0431\u0436\u0435, \u0447\u0442\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0447\u0442\u043e. \u041e\u0431\u044a\u0435\u043a\u0442 Profile \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u044e\u0437\u0435\u0440\u0435 \u0447\u0435\u0440\u0435\u0437 \u0441\u0432\u044f\u0437\u044c \u0441 User . \u0422\u0430\u043a, \u043c\u043e\u0436\u043d\u043e \u0443\u0437\u043d\u0430\u0442\u044c \u0438\u043c\u044f, \u0444\u0430\u043c\u0438\u043b\u0438\u044e, \u043d\u0438\u043a \u0438 \u043f\u043e\u0447\u0442\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u0445\u0440\u0430\u043d\u044f\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0442\u0438\u043f\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f (\u0443\u0447\u0435\u043d\u0438\u043a \u0438\u043b\u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u044c), \u0443\u0447\u0435\u0431\u043d\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435 (\u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c - \u0443\u0447\u0435\u043d\u0438\u043a) \u0438 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0435\u0434\u0435\u0442 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c (\u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c - \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c). \u041a \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u0434\u043e\u0441\u0442\u0443\u043f \u0438\u043c\u0435\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0434\u043c\u0438\u043d, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0440\u043e\u043b\u0438 \u043c\u0435\u0436\u0434\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438. \u041a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043b\u0441\u044f \u043d\u0430 \u0441\u0430\u0439\u0442\u0435, \u0443 \u043d\u0435\u0433\u043e \u043f\u043e\u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0432\u043e\u0439 Profile .","title":"\u041d\u0435\u043c\u043d\u043e\u0433\u043e \u0434\u0435\u0442\u0430\u043b\u0435\u0439"},{"location":"lab2/models/#_3","text":"\u041e\u0431\u044a\u0435\u043a\u0442 Subject \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0441\u0435\u0445 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0442\u043e\u043c \u0430\u0434\u043c\u0438\u043d\u043e\u043c \u0440\u0430\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0443\u0447\u0438\u0442\u0435\u043b\u044f\u043c. \u041e\u0431\u044a\u0435\u043a\u0442 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0441\u0432\u044f\u0437\u0430\u043d \u0441 Profile .","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/models/#_4","text":"\u041e\u0431\u044a\u0435\u043a\u0442 Homework \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u044b\u0434\u0430\u043d\u043d\u043e\u043c \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438. \u0422\u0430\u043c \u0435\u0441\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043f\u0440\u043e \u0434\u0435\u0434\u043b\u0430\u0439\u043d\u044b, \u0443\u0447\u0435\u0431\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043f\u043e\u043b\u0435 \u0441 \u0441\u0430\u043c\u0438\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e\u0431 \u0443\u0447\u0438\u0442\u0435\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u0434\u0430\u043b \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435.","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/models/#_5","text":"\u041e\u0431\u044a\u0435\u043a\u0442 SubmittedHomework \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u044b\u0434\u0430\u043d\u043d\u043e\u043c \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0443 \u0443\u0447\u0435\u043d\u0438\u043a\u0430. \u041f\u043e\u0441\u043b\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0447\u0438\u0442\u0435\u043b\u0435\u043c \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u043e\u0431\u044a\u0435\u043a\u0442 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0443\u0447\u0435\u043d\u0438\u043a\u0430, \u043a\u043e\u043c\u0443 \u044d\u0442\u043e \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043e. \u0422\u0430\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0441\u0442\u0430\u0442\u0443\u0441 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f: \"\u0412\u044b\u0434\u0430\u043d\u043e\", \"\u041d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0435\" \u0438 \"\u041e\u0446\u0435\u043d\u0435\u043d\u043e\", \u0441\u0430\u043c\u0430 \u043e\u0446\u0435\u043d\u043a\u0430 \u0438 \u0442\u0435\u043a\u0441\u0442 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0443\u0447\u0435\u043d\u0438\u043a.","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/models/#_6","text":"\u041e\u0431\u044a\u0435\u043a\u0442 GradeJournal \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043e\u0446\u0435\u043d\u043a\u0430\u0445 \u0437\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b, \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0436\u0443\u0440\u043d\u0430\u043b \u0443\u0447\u0435\u043d\u0438\u043a\u0430.","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/models/#_7","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/variant/","text":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0423 \u043c\u0435\u043d\u044f \u0432\u0442\u043e\u0440\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b. \u0421\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043c\u043d\u0435 \u0431\u044b\u043b\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u0441\u043a\u0443 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439. \u0422\u0435\u043a\u0441\u0442 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 \u041e \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043f\u0440\u0435\u0434\u043c\u0435\u0442, \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c, \u0434\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438, \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u0442\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0448\u0442\u0440\u0430\u0444\u0430\u0445. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c (\u0441\u0440\u043e\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f). \u0421\u0434\u0430\u0447\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0432\u0438\u0434\u0435. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 (\u0443\u0447\u0438\u0442\u0435\u043b\u044c) \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443 \u0437\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u0432\u0441\u0435\u0445 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430.","title":"Assessment"},{"location":"lab2/variant/#_1","text":"\u0423 \u043c\u0435\u043d\u044f \u0432\u0442\u043e\u0440\u043e\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b. \u0421\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043c\u043d\u0435 \u0431\u044b\u043b\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u0441\u043a\u0443 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439.","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f"},{"location":"lab2/variant/#_2","text":"\u041e \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043f\u0440\u0435\u0434\u043c\u0435\u0442, \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c, \u0434\u0430\u0442\u0430 \u0432\u044b\u0434\u0430\u0447\u0438, \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u0442\u0435\u043a\u0441\u0442 \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0448\u0442\u0440\u0430\u0444\u0430\u0445. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u043f\u043e \u0432\u0441\u0435\u043c \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0430\u043c (\u0441\u0440\u043e\u043a\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f). \u0421\u0434\u0430\u0447\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439 \u0432 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u043c \u0432\u0438\u0434\u0435. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 (\u0443\u0447\u0438\u0442\u0435\u043b\u044c) \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443 \u0437\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u0432\u0441\u0435\u0445 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430.","title":"\u0422\u0435\u043a\u0441\u0442 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430"},{"location":"lab2/views/","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 views.py views.py \u0443 \u043c\u0435\u043d\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0432 \u0434\u0432\u0443\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u0445 - Users \u0438 Journal . \u0412 Users \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u043b\u043e\u0433\u0438\u043a\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0430 \u0432 Journal - \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u043c. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435: Journal journal/views.py from django.shortcuts import render , redirect from django.views.generic import ListView , DetailView , CreateView , UpdateView , DeleteView , View from .models import SubmittedHomework , Homework , GradeJournal , Profile from django.contrib.auth.models import User from .forms import PostHomework , EditHomework , GradeForm , SubmissionForm from django.urls import reverse_lazy from django.utils import timezone from django.http import Http404 def custom_404 ( request , exception ): return render ( request , '404.html' , status = 404 ) class HomePage ( ListView ): model = Homework template_name = 'home.html' context_object_name = 'homework_list' def get_queryset ( self ): if self . request . user : user = self . request . user homework_list = Homework . objects . all () if user . profile . role == 'student' : homework_list = [ ( homework , SubmittedHomework . objects . filter ( student = user , homework = homework ) . first ()) for homework in homework_list ] return homework_list if user . profile . role == 'teacher' : homework_list = Homework . objects . filter ( tutor = user ) return homework_list else : pass class HomeworkPage ( DetailView ): model = Homework template_name = 'homework_page.html' context_object_name = 'homework' def get_context_data ( self , ** kwargs ): context = super () . get_context_data ( ** kwargs ) submission = SubmittedHomework . objects . filter ( student = self . request . user , homework = context [ 'homework' ]) . first () context [ 'submission' ] = submission return context class AddHomework ( CreateView ): model = Homework form_class = PostHomework template_name = 'new_hw.html' def get_form_kwargs ( self ): kwargs = super () . get_form_kwargs () kwargs [ 'user' ] = self . request . user return kwargs def form_valid ( self , form ): form . instance . tutor = self . request . user form . instance . save () students = User . objects . filter ( profile__role = 'student' ) for student in students : SubmittedHomework . objects . create ( student = student , homework = form . instance , status = 'issued' ) return super () . form_valid ( form ) class EditHomework ( UpdateView ): model = Homework form_class = EditHomework template_name = 'upd_hw.html' def form_valid ( self , form ): form . instance . status = 'issued' return super () . form_valid ( form ) class DeleteHomework ( DeleteView ): model = Homework template_name = 'del_hw.html' success_url = reverse_lazy ( 'home' ) class SubmitHomework ( View ): template_name = 'homework_page.html' def get ( self , request , pk ): homework = Homework . objects . get ( pk = pk ) submission = SubmittedHomework . objects . filter ( student = request . user , homework = homework ) . first () if not submission : SubmittedHomework . objects . create ( student = request . user , homework = homework , status = 'issued' ) if request . user . profile . role != 'student' or homework . tutor == request . user or submission . submitted == True : return render ( request , 'error_page.html' , { 'message' : 'You are not allowed to submit this homework.' }) return render ( request , self . template_name , { 'homework' : homework , 'submission' : submission }) def post ( self , request , pk ): homework = Homework . objects . get ( pk = pk ) submission = SubmittedHomework . objects . filter ( student = request . user , homework = homework ) . first () if not submission : SubmittedHomework . objects . create ( student = request . user , homework = homework , status = 'issued' ) submission = SubmittedHomework . objects . filter ( student = request . user , homework = homework ) . first () if request . user . profile . role != 'student' or homework . tutor == request . user or submission . submitted == True : return render ( request , 'error_page.html' , { 'message' : 'You are not allowed to submit this homework.' , 'homework' : homework , 'submission' : submission }) if request . method == 'POST' : form = SubmissionForm ( request . POST ) if form . is_valid (): homework_body = form . cleaned_data [ 'homework_body' ] submission . homework_body = homework_body submission . status = 'pending_review' submission . submitted_at = timezone . now () submission . submitted = True submission . save () return render ( request , 'success_page.html' , { 'message' : 'Homework submitted successfully' , 'homework' : homework , 'submission' : submission }) return render ( request , self . template_name , { 'homework' : homework , 'submission' : submission }) class GradeHomework ( View ): template_name = 'grade_homework.html' def get ( self , request ): if request . user . is_authenticated and request . user . profile . role == 'teacher' : class_students = {} for student in User . objects . filter ( profile__role = 'student' ): clas = student . profile . student_class if clas not in class_students : class_students [ clas ] = [ student ] else : class_students [ clas ] . append ( student ) ungraded_homework = SubmittedHomework . objects . filter ( grade = 0 ) graded_homework = GradeJournal . objects . all () return render ( request , self . template_name , { 'ungraded_homework' : ungraded_homework , 'graded_homework' : graded_homework , 'class_students' : class_students , }) else : return render ( request , 'error_page.html' , { 'message' : 'You are not allowed to grade homework.' }) class StudentGrades ( View ): template_name = 'student_grades.html' def get ( self , request , student_id ): student = User . objects . get ( id = student_id ) student_grades = GradeJournal . objects . filter ( student_id = student_id ) grades_by_subject = {} for grade in student_grades : subject = grade . subject if subject not in grades_by_subject : grades_by_subject [ subject ] = [] grades_by_subject [ subject ] . append ( grade ) return render ( request , self . template_name , { 'student' : student , 'grades_by_subject' : grades_by_subject }) class GradeStudentHomework ( View ): template_name = 'student_homework.html' def get ( self , request , student_id , submission_id ): try : student = User . objects . get ( pk = student_id ) submission = SubmittedHomework . objects . get ( pk = submission_id ) if request . user . profile . role != 'teacher' or submission . homework . tutor != request . user : return render ( request , 'error_page.html' , { 'message' : 'You are not allowed to grade this submission.' }) except User . DoesNotExist : raise Http404 ( \"Student not found\" ) except SubmittedHomework . DoesNotExist : raise Http404 ( \"Submission not found\" ) return render ( request , self . template_name , { 'student' : student , 'submission' : submission }) def post ( self , request , student_id , submission_id ): try : student = User . objects . get ( pk = student_id ) submission = SubmittedHomework . objects . get ( pk = submission_id ) if request . user . profile . role != 'teacher' or submission . homework . tutor != request . user : return render ( request , 'error_page.html' , { 'message' : 'You are not allowed to grade this submission.' }) if 'grade' in request . POST : grade = request . POST [ 'grade' ] submission . grade = grade submission . status = 'graded' submission . save () GradeJournal . objects . create ( student = student , subject = submission . homework . subject , grade = grade , homework = submission ) except User . DoesNotExist : raise Http404 ( \"Student not found\" ) except SubmittedHomework . DoesNotExist : raise Http404 ( \"Submission not found\" ) return redirect ( 'grade-homework' ) \u0417\u0434\u0435\u0441\u044c HomePage - \u044d\u0442\u043e \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430, \u043a\u0443\u0434\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441\u0440\u0430\u0437\u0443 \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u0437\u0430\u043b\u043e\u0433\u0438\u043d\u0438\u0442\u0441\u044f. \u0421 \u043d\u0435\u0435 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b HomeworkPage , AddHomework , EditHomework \u0438 DeleteHomework \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u0437\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435, \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0441\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u0443\u0447\u0438\u0442\u0435\u043b\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b SubmitHomework \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0447\u0435\u043d\u0438\u043a\u0443 \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u0438\u0442\u044c \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435. \u041f\u0440\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u043c \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0443\u0447\u0435\u043d\u0438\u043a \u043c\u043e\u0436\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0442\u0435\u043a\u0441\u0442 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043d \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u0438\u043b. \u0418\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u043d\u0435\u043b\u044c\u0437\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b GradeHomework \u0438 GradeStudentHomework \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0447\u0438\u0442\u0435\u043b\u044e \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0435\u043c\u0443 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043c \u043e\u0446\u0435\u043d\u043a\u0443. \u041e\u0446\u0435\u043d\u043a\u0443 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0443\u0436\u0435 \u043d\u0435\u043b\u044c\u0437\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b StudentGrades \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0439 \u0434\u043d\u0435\u0432\u043d\u0438\u043a. \u0423\u0447\u0438\u0442\u0435\u043b\u044f \u043c\u043e\u0433\u0443\u0442 \u0443\u0437\u043d\u0430\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u0441\u0432\u043e\u0438\u043c \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u043c, \u0430 \u0443\u0447\u0435\u043d\u0438\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u0441\u0432\u043e\u0438 \u043e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u043c. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u0435\u0440\u0435\u0431\u0440\u043e\u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0448\u0438\u0431\u043a\u0438 \u0447\u0435\u0440\u0435\u0437 custom_404 \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b User users/views.py from django.views import generic from django.urls import reverse_lazy from .forms import SignUpForm , EditForm class UserRegister ( generic . CreateView ): form_class = SignUpForm template_name = 'registration/register.html' success_url = reverse_lazy ( 'login' ) class UserEditing ( generic . UpdateView ): form_class = EditForm template_name = 'registration/edit.html' success_url = reverse_lazy ( 'home' ) def get_object ( self ): return self . request . user \u0417\u0434\u0435\u0441\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u0432 Django \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u043b\u0438\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b","title":"Views"},{"location":"lab2/views/#viewspy","text":"views.py \u0443 \u043c\u0435\u043d\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0432 \u0434\u0432\u0443\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u0445 - Users \u0438 Journal . \u0412 Users \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u0430 \u043b\u043e\u0433\u0438\u043a\u0430 \u0441 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0430 \u0432 Journal - \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u043c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u043c. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c\u0441\u044f \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435:","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 views.py"},{"location":"lab2/views/#journal","text":"journal/views.py from django.shortcuts import render , redirect from django.views.generic import ListView , DetailView , CreateView , UpdateView , DeleteView , View from .models import SubmittedHomework , Homework , GradeJournal , Profile from django.contrib.auth.models import User from .forms import PostHomework , EditHomework , GradeForm , SubmissionForm from django.urls import reverse_lazy from django.utils import timezone from django.http import Http404 def custom_404 ( request , exception ): return render ( request , '404.html' , status = 404 ) class HomePage ( ListView ): model = Homework template_name = 'home.html' context_object_name = 'homework_list' def get_queryset ( self ): if self . request . user : user = self . request . user homework_list = Homework . objects . all () if user . profile . role == 'student' : homework_list = [ ( homework , SubmittedHomework . objects . filter ( student = user , homework = homework ) . first ()) for homework in homework_list ] return homework_list if user . profile . role == 'teacher' : homework_list = Homework . objects . filter ( tutor = user ) return homework_list else : pass class HomeworkPage ( DetailView ): model = Homework template_name = 'homework_page.html' context_object_name = 'homework' def get_context_data ( self , ** kwargs ): context = super () . get_context_data ( ** kwargs ) submission = SubmittedHomework . objects . filter ( student = self . request . user , homework = context [ 'homework' ]) . first () context [ 'submission' ] = submission return context class AddHomework ( CreateView ): model = Homework form_class = PostHomework template_name = 'new_hw.html' def get_form_kwargs ( self ): kwargs = super () . get_form_kwargs () kwargs [ 'user' ] = self . request . user return kwargs def form_valid ( self , form ): form . instance . tutor = self . request . user form . instance . save () students = User . objects . filter ( profile__role = 'student' ) for student in students : SubmittedHomework . objects . create ( student = student , homework = form . instance , status = 'issued' ) return super () . form_valid ( form ) class EditHomework ( UpdateView ): model = Homework form_class = EditHomework template_name = 'upd_hw.html' def form_valid ( self , form ): form . instance . status = 'issued' return super () . form_valid ( form ) class DeleteHomework ( DeleteView ): model = Homework template_name = 'del_hw.html' success_url = reverse_lazy ( 'home' ) class SubmitHomework ( View ): template_name = 'homework_page.html' def get ( self , request , pk ): homework = Homework . objects . get ( pk = pk ) submission = SubmittedHomework . objects . filter ( student = request . user , homework = homework ) . first () if not submission : SubmittedHomework . objects . create ( student = request . user , homework = homework , status = 'issued' ) if request . user . profile . role != 'student' or homework . tutor == request . user or submission . submitted == True : return render ( request , 'error_page.html' , { 'message' : 'You are not allowed to submit this homework.' }) return render ( request , self . template_name , { 'homework' : homework , 'submission' : submission }) def post ( self , request , pk ): homework = Homework . objects . get ( pk = pk ) submission = SubmittedHomework . objects . filter ( student = request . user , homework = homework ) . first () if not submission : SubmittedHomework . objects . create ( student = request . user , homework = homework , status = 'issued' ) submission = SubmittedHomework . objects . filter ( student = request . user , homework = homework ) . first () if request . user . profile . role != 'student' or homework . tutor == request . user or submission . submitted == True : return render ( request , 'error_page.html' , { 'message' : 'You are not allowed to submit this homework.' , 'homework' : homework , 'submission' : submission }) if request . method == 'POST' : form = SubmissionForm ( request . POST ) if form . is_valid (): homework_body = form . cleaned_data [ 'homework_body' ] submission . homework_body = homework_body submission . status = 'pending_review' submission . submitted_at = timezone . now () submission . submitted = True submission . save () return render ( request , 'success_page.html' , { 'message' : 'Homework submitted successfully' , 'homework' : homework , 'submission' : submission }) return render ( request , self . template_name , { 'homework' : homework , 'submission' : submission }) class GradeHomework ( View ): template_name = 'grade_homework.html' def get ( self , request ): if request . user . is_authenticated and request . user . profile . role == 'teacher' : class_students = {} for student in User . objects . filter ( profile__role = 'student' ): clas = student . profile . student_class if clas not in class_students : class_students [ clas ] = [ student ] else : class_students [ clas ] . append ( student ) ungraded_homework = SubmittedHomework . objects . filter ( grade = 0 ) graded_homework = GradeJournal . objects . all () return render ( request , self . template_name , { 'ungraded_homework' : ungraded_homework , 'graded_homework' : graded_homework , 'class_students' : class_students , }) else : return render ( request , 'error_page.html' , { 'message' : 'You are not allowed to grade homework.' }) class StudentGrades ( View ): template_name = 'student_grades.html' def get ( self , request , student_id ): student = User . objects . get ( id = student_id ) student_grades = GradeJournal . objects . filter ( student_id = student_id ) grades_by_subject = {} for grade in student_grades : subject = grade . subject if subject not in grades_by_subject : grades_by_subject [ subject ] = [] grades_by_subject [ subject ] . append ( grade ) return render ( request , self . template_name , { 'student' : student , 'grades_by_subject' : grades_by_subject }) class GradeStudentHomework ( View ): template_name = 'student_homework.html' def get ( self , request , student_id , submission_id ): try : student = User . objects . get ( pk = student_id ) submission = SubmittedHomework . objects . get ( pk = submission_id ) if request . user . profile . role != 'teacher' or submission . homework . tutor != request . user : return render ( request , 'error_page.html' , { 'message' : 'You are not allowed to grade this submission.' }) except User . DoesNotExist : raise Http404 ( \"Student not found\" ) except SubmittedHomework . DoesNotExist : raise Http404 ( \"Submission not found\" ) return render ( request , self . template_name , { 'student' : student , 'submission' : submission }) def post ( self , request , student_id , submission_id ): try : student = User . objects . get ( pk = student_id ) submission = SubmittedHomework . objects . get ( pk = submission_id ) if request . user . profile . role != 'teacher' or submission . homework . tutor != request . user : return render ( request , 'error_page.html' , { 'message' : 'You are not allowed to grade this submission.' }) if 'grade' in request . POST : grade = request . POST [ 'grade' ] submission . grade = grade submission . status = 'graded' submission . save () GradeJournal . objects . create ( student = student , subject = submission . homework . subject , grade = grade , homework = submission ) except User . DoesNotExist : raise Http404 ( \"Student not found\" ) except SubmittedHomework . DoesNotExist : raise Http404 ( \"Submission not found\" ) return redirect ( 'grade-homework' ) \u0417\u0434\u0435\u0441\u044c HomePage - \u044d\u0442\u043e \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430, \u043a\u0443\u0434\u0430 \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441\u0440\u0430\u0437\u0443 \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u0437\u0430\u043b\u043e\u0433\u0438\u043d\u0438\u0442\u0441\u044f. \u0421 \u043d\u0435\u0435 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0445 \u0437\u0430\u0434\u0430\u043d\u0438\u0439.","title":"Journal"},{"location":"lab2/views/#_1","text":"HomeworkPage , AddHomework , EditHomework \u0438 DeleteHomework \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u0437\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435, \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440, \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0441\u043e \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u0443\u0447\u0438\u0442\u0435\u043b\u044f.","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/views/#_2","text":"SubmitHomework \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0447\u0435\u043d\u0438\u043a\u0443 \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u0438\u0442\u044c \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435. \u041f\u0440\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u043c \u043f\u043e\u0441\u0435\u0449\u0435\u043d\u0438\u0438 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0443\u0447\u0435\u043d\u0438\u043a \u043c\u043e\u0436\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0442\u0435\u043a\u0441\u0442 \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043d \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u0438\u043b. \u0418\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0434\u043e\u043c\u0430\u0448\u043d\u0435\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u043d\u0435\u043b\u044c\u0437\u044f.","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/views/#_3","text":"GradeHomework \u0438 GradeStudentHomework \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0447\u0438\u0442\u0435\u043b\u044e \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0435 \u0435\u043c\u0443 \u0434\u043e\u043c\u0430\u0448\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0438\u043c \u043e\u0446\u0435\u043d\u043a\u0443. \u041e\u0446\u0435\u043d\u043a\u0443 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0443\u0436\u0435 \u043d\u0435\u043b\u044c\u0437\u044f.","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/views/#_4","text":"StudentGrades \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u044b\u0439 \u0434\u043d\u0435\u0432\u043d\u0438\u043a. \u0423\u0447\u0438\u0442\u0435\u043b\u044f \u043c\u043e\u0433\u0443\u0442 \u0443\u0437\u043d\u0430\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u0441\u0432\u043e\u0438\u043c \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u043c, \u0430 \u0443\u0447\u0435\u043d\u0438\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0441\u0435 \u0441\u0432\u043e\u0438 \u043e\u0446\u0435\u043d\u043a\u0438 \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u043c.","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/views/#_5","text":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043f\u0435\u0440\u0435\u0431\u0440\u043e\u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043e\u0448\u0438\u0431\u043a\u0438 \u0447\u0435\u0440\u0435\u0437 custom_404","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/views/#_6","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab2/views/#user","text":"users/views.py from django.views import generic from django.urls import reverse_lazy from .forms import SignUpForm , EditForm class UserRegister ( generic . CreateView ): form_class = SignUpForm template_name = 'registration/register.html' success_url = reverse_lazy ( 'login' ) class UserEditing ( generic . UpdateView ): form_class = EditForm template_name = 'registration/edit.html' success_url = reverse_lazy ( 'home' ) def get_object ( self ): return self . request . user \u0417\u0434\u0435\u0441\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u0432 Django \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u043b\u0438\u0447\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","title":"User"},{"location":"lab2/views/#_7","text":"","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab3/","text":"\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u041c\u0438\u043d\u0438\u0441\u0442\u0435\u0440\u0441\u0442\u0432\u043e \u043d\u0430\u0443\u043a\u0438 \u0438 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0443\u0447\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u00ab\u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e\u00bb \u041e\u0422\u0427\u0415\u0422 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u00ab\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API\u00bb \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u00abWeb-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u00bb \u041e\u0442\u0447\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0421\u0442\u0443\u0434\u0435\u043d\u0442: \u041d\u0438\u043a\u043e\u043d\u043e\u0440\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a33422 \u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u0418\u041a\u0422 \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023","title":"Intro"},{"location":"lab3/#_1","text":"\u041c\u0438\u043d\u0438\u0441\u0442\u0435\u0440\u0441\u0442\u0432\u043e \u043d\u0430\u0443\u043a\u0438 \u0438 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0443\u0447\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u00ab\u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e\u00bb \u041e\u0422\u0427\u0415\u0422 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u00ab\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API\u00bb \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u00abWeb-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u00bb \u041e\u0442\u0447\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0421\u0442\u0443\u0434\u0435\u043d\u0442: \u041d\u0438\u043a\u043e\u043d\u043e\u0440\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a33422 \u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u0418\u041a\u0422 \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023","title":"\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435"},{"location":"lab3/models/","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0423 \u043c\u0435\u043d\u044f \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044f \u0440\u0435\u0448\u0438\u043b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u043c \u043a\u043b\u0430\u0441\u0441\u043e\u043c ( EventsUser ), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0432\u044f\u0437\u0430\u043d \u0441\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User. \u0422\u0430\u043a\u0436\u0435 \u043f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u043e\u0447\u0442\u0443, \u0442\u0435\u043b\u0435\u0444\u043e\u043d \u0438 \u0441\u0432\u043e\u0439 \u0432\u043e\u0437\u0440\u0430\u0441\u0442. \u0412\u0441\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f ( EventCard ) \u0441\u043e\u0431\u0440\u0430\u043d\u044b \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0438 \u0438\u043c\u0435\u044e\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0442\u0438\u043f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043b\u0435\u043a\u0446\u0438\u044f \u0438\u043b\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442), \u0434\u0430\u0442\u0443 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u043e\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0435\u0441\u0442. \u0421\u043f\u0438\u0441\u043e\u043a \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e ( EventTypeList ). \u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0442 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\u0430\u0445 ( Place ), \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0435\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u0430\u0434\u0440\u0435\u0441 \u0438 \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c. \u041d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u043b\u044e\u0434\u0435\u0439, \u0447\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u0432\u043c\u0435\u0449\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0430. \u0422\u0430\u043a\u0436\u0435 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0443\u044e\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f. \u041e\u043d \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435, \u0435\u0441\u043b\u0438 \u043d\u0435 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0443, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0435\u0441\u043b\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u043e\u0442\u043c\u0435\u043d\u0435\u043d\u043e \u0438\u043b\u0438 \u0443\u0436\u0435 \u043f\u0440\u043e\u0448\u043b\u043e. \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432 \u043b\u043a \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0433\u0430\u043b\u043e\u0447\u043a\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043f\u043e\u0447\u0442\u0443. \u041f\u043e\u0447\u0442\u044b \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 ( SubscribedEmail ). \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432 django \u0412 \u0444\u0430\u0439\u043b\u0435 models.py \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438, \u043e\u043f\u0441\u0438\u0430\u043d\u043d\u044b\u0435 \u0432\u044b\u0448\u0435: models.py class EventsUser ( AbstractUser ): # \u041a\u043b\u0430\u0441\u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f LastName = models . CharField ( null = False , max_length = 30 ) FirstName = models . CharField ( null = False , max_length = 30 ) DateOfBirth = models . DateField ( null = True , blank = True ) PhoneNumber = models . CharField ( null = True , max_length = 30 , blank = True ) IsSubscribed = models . BooleanField ( default = False ) def __str__ ( self ): return f \"user { self . LastName } { self . FirstName } \" class EventCard ( models . Model ): # \u041a\u043b\u0430\u0441\u0441 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f PostTitle = models . CharField ( null = False , max_length = 70 ) EventType = models . ForeignKey ( 'EventTypeList' , null = False , on_delete = models . CASCADE ) Description = RichTextField ( null = False ) DateOfEvent = models . DateField ( null = False , default = timezone . now ) EventPlace = models . ForeignKey ( 'Place' , null = False , on_delete = models . CASCADE ) NumberOfParticipants = models . PositiveIntegerField ( null = False ) restictions = ( ( '18' , '18+' ), ( '16' , '16+' ), ( '12' , '12+' ), ( '0' , 'no age restriction' ), ) AgeRestriction = models . CharField ( max_length = 20 , choices = restictions ) statuses = ( ( 'OPENED' , 'opened' ), ( 'CANCELED' , 'canceled' ), ( 'CLOSED' , 'closed' ), ) Status = models . CharField ( max_length = 20 , choices = statuses ) def __str__ ( self ): return self . PostTitle def clean ( self ): if self . NumberOfParticipants > self . EventPlace . PlaceCapacity : raise ValidationError ( \"Number of participants can't exceed place capacity.\" ) class EventTypeList ( models . Model ): # \u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0438\u043f\u043e\u0432 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439 TypeTitle = models . CharField ( null = False , max_length = 20 ) Description = models . CharField ( null = False , max_length = 150 ) Colour = models . CharField ( null = False , max_length = 7 ) def __str__ ( self ): return self . TypeTitle class Place ( models . Model ): # \u0421\u043f\u0438\u0441\u043e\u043a \u043c\u0435\u0441\u0442 \u0434\u043b\u044f \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439 PlaceTitle = models . CharField ( null = False , max_length = 30 ) PlaceAddress = models . CharField ( null = False , max_length = 70 ) PlaceCapacity = models . PositiveIntegerField ( null = False ) def __str__ ( self ): return self . PlaceTitle class UsersEventsList ( models . Model ): # \u0421\u0432\u044f\u0437\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c-\u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 EventUser = models . ForeignKey ( 'EventsUser' , null = False , on_delete = models . CASCADE ) EventCard = models . ForeignKey ( 'EventCard' , null = False , on_delete = models . CASCADE , related_name = 'events_users_list' ) TimeOfRegistration = models . DateField ( null = False , default = timezone . now ) class Meta : unique_together = ( 'EventUser' , 'EventCard' ) def __str__ ( self ): return f \" { self . EventUser } { self . EventCard } \" def clean ( self ): if self . EventCard . NumberOfParticipants <= self . EventCard . events_users_list . count (): raise ValidationError ( \"Registration is closed due to lack of available places\" ) def save ( self , * args , ** kwargs ): self . clean () super () . save ( * args , ** kwargs ) class SubscribedEmail ( models . Model ): # \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043b\u0438\u0441\u044c \u043d\u0430 \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0443 User = models . OneToOneField ( 'EventsUser' , on_delete = models . CASCADE ) Email = models . EmailField ( unique = True ) def __str__ ( self ): return self . Email \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u044f \u0437\u0430\u0434\u0430\u043b \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439: \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435, \u043a\u043e\u0433\u0434\u0430 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0435 \u043b\u044e\u0434\u0435\u0439, \u0447\u0435\u043c \u0432\u043c\u0435\u0449\u0430\u0435\u0442 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0430 \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0438\u0441\u044c \u043c\u0435\u0441\u0442\u0430 \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u0435 \u0438\u0437 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439","title":"Models"},{"location":"lab3/models/#_1","text":"\u0423 \u043c\u0435\u043d\u044f \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044f \u0440\u0435\u0448\u0438\u043b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u043c \u043a\u043b\u0430\u0441\u0441\u043e\u043c ( EventsUser ), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0432\u044f\u0437\u0430\u043d \u0441\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User. \u0422\u0430\u043a\u0436\u0435 \u043f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u043e\u0447\u0442\u0443, \u0442\u0435\u043b\u0435\u0444\u043e\u043d \u0438 \u0441\u0432\u043e\u0439 \u0432\u043e\u0437\u0440\u0430\u0441\u0442. \u0412\u0441\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f ( EventCard ) \u0441\u043e\u0431\u0440\u0430\u043d\u044b \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0438 \u0438\u043c\u0435\u044e\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0442\u0438\u043f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043b\u0435\u043a\u0446\u0438\u044f \u0438\u043b\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442), \u0434\u0430\u0442\u0443 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u043e\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0435\u0441\u0442. \u0421\u043f\u0438\u0441\u043e\u043a \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e ( EventTypeList ). \u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0442 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\u0430\u0445 ( Place ), \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0435\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u0430\u0434\u0440\u0435\u0441 \u0438 \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c. \u041d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u043b\u044e\u0434\u0435\u0439, \u0447\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u0432\u043c\u0435\u0449\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0430. \u0422\u0430\u043a\u0436\u0435 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0443\u044e\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f. \u041e\u043d \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435, \u0435\u0441\u043b\u0438 \u043d\u0435 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0443, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0435\u0441\u043b\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u043e\u0442\u043c\u0435\u043d\u0435\u043d\u043e \u0438\u043b\u0438 \u0443\u0436\u0435 \u043f\u0440\u043e\u0448\u043b\u043e. \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432 \u043b\u043a \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0433\u0430\u043b\u043e\u0447\u043a\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043f\u043e\u0447\u0442\u0443. \u041f\u043e\u0447\u0442\u044b \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 ( SubscribedEmail ).","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438"},{"location":"lab3/models/#django","text":"\u0412 \u0444\u0430\u0439\u043b\u0435 models.py \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438, \u043e\u043f\u0441\u0438\u0430\u043d\u043d\u044b\u0435 \u0432\u044b\u0448\u0435: models.py class EventsUser ( AbstractUser ): # \u041a\u043b\u0430\u0441\u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f LastName = models . CharField ( null = False , max_length = 30 ) FirstName = models . CharField ( null = False , max_length = 30 ) DateOfBirth = models . DateField ( null = True , blank = True ) PhoneNumber = models . CharField ( null = True , max_length = 30 , blank = True ) IsSubscribed = models . BooleanField ( default = False ) def __str__ ( self ): return f \"user { self . LastName } { self . FirstName } \" class EventCard ( models . Model ): # \u041a\u043b\u0430\u0441\u0441 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f PostTitle = models . CharField ( null = False , max_length = 70 ) EventType = models . ForeignKey ( 'EventTypeList' , null = False , on_delete = models . CASCADE ) Description = RichTextField ( null = False ) DateOfEvent = models . DateField ( null = False , default = timezone . now ) EventPlace = models . ForeignKey ( 'Place' , null = False , on_delete = models . CASCADE ) NumberOfParticipants = models . PositiveIntegerField ( null = False ) restictions = ( ( '18' , '18+' ), ( '16' , '16+' ), ( '12' , '12+' ), ( '0' , 'no age restriction' ), ) AgeRestriction = models . CharField ( max_length = 20 , choices = restictions ) statuses = ( ( 'OPENED' , 'opened' ), ( 'CANCELED' , 'canceled' ), ( 'CLOSED' , 'closed' ), ) Status = models . CharField ( max_length = 20 , choices = statuses ) def __str__ ( self ): return self . PostTitle def clean ( self ): if self . NumberOfParticipants > self . EventPlace . PlaceCapacity : raise ValidationError ( \"Number of participants can't exceed place capacity.\" ) class EventTypeList ( models . Model ): # \u0421\u043f\u0438\u0441\u043e\u043a \u0442\u0438\u043f\u043e\u0432 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439 TypeTitle = models . CharField ( null = False , max_length = 20 ) Description = models . CharField ( null = False , max_length = 150 ) Colour = models . CharField ( null = False , max_length = 7 ) def __str__ ( self ): return self . TypeTitle class Place ( models . Model ): # \u0421\u043f\u0438\u0441\u043e\u043a \u043c\u0435\u0441\u0442 \u0434\u043b\u044f \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439 PlaceTitle = models . CharField ( null = False , max_length = 30 ) PlaceAddress = models . CharField ( null = False , max_length = 70 ) PlaceCapacity = models . PositiveIntegerField ( null = False ) def __str__ ( self ): return self . PlaceTitle class UsersEventsList ( models . Model ): # \u0421\u0432\u044f\u0437\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c-\u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 EventUser = models . ForeignKey ( 'EventsUser' , null = False , on_delete = models . CASCADE ) EventCard = models . ForeignKey ( 'EventCard' , null = False , on_delete = models . CASCADE , related_name = 'events_users_list' ) TimeOfRegistration = models . DateField ( null = False , default = timezone . now ) class Meta : unique_together = ( 'EventUser' , 'EventCard' ) def __str__ ( self ): return f \" { self . EventUser } { self . EventCard } \" def clean ( self ): if self . EventCard . NumberOfParticipants <= self . EventCard . events_users_list . count (): raise ValidationError ( \"Registration is closed due to lack of available places\" ) def save ( self , * args , ** kwargs ): self . clean () super () . save ( * args , ** kwargs ) class SubscribedEmail ( models . Model ): # \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043b\u0438\u0441\u044c \u043d\u0430 \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0443 User = models . OneToOneField ( 'EventsUser' , on_delete = models . CASCADE ) Email = models . EmailField ( unique = True ) def __str__ ( self ): return self . Email","title":"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432 django"},{"location":"lab3/models/#_2","text":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u044f \u0437\u0430\u0434\u0430\u043b \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439: \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435, \u043a\u043e\u0433\u0434\u0430 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u0442 \u0431\u043e\u043b\u044c\u0448\u0435 \u043b\u044e\u0434\u0435\u0439, \u0447\u0435\u043c \u0432\u043c\u0435\u0449\u0430\u0435\u0442 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0430 \u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0438\u0441\u044c \u043c\u0435\u0441\u0442\u0430 \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437 \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u0435 \u0438\u0437 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f"},{"location":"lab3/signals/","text":"\u0421\u0438\u0433\u043d\u0430\u043b\u044b \u0422\u0430\u043a \u043a\u0430\u043a \u043d\u0430 \u043c\u043e\u0435\u043c \u0441\u0430\u0439\u0442\u0435 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0437\u0430\u0432\u0438\u0441\u044f\u0442 \u043e\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u0445 \u0432 \u0434\u0440\u0443\u0433\u0438\u0445, \u0442\u043e \u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043b \u0441\u0438\u0433\u043d\u0430\u043b\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u043b\u0438 \u044d\u0442\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f. \u0414\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438 \u044f \u0441\u043e\u0437\u0434\u0430\u043b \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b signals.py . \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u0447\u0442 \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0438 \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0447\u0442 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u0433\u0430\u043b\u043e\u0447\u043a\u0443 \u0432 \u043b\u0438\u0447\u043d\u043e\u043c \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435. signals.py @receiver ( post_save , sender = EventsUser ) def add_subscribed_email ( sender , instance , ** kwargs ): if instance . IsSubscribed : subscribed_email , created = SubscribedEmail . objects . get_or_create ( User = instance ) subscribed_email . Email = instance . email subscribed_email . save () print ( 'E-mail added' ) @receiver ( post_save , sender = EventsUser ) def remove_subscribed_email ( sender , instance , ** kwargs ): if not instance . IsSubscribed : try : subscribed_email = SubscribedEmail . objects . get ( User = instance ) subscribed_email . delete () print ( 'E-mail deleted' ) except SubscribedEmail . DoesNotExist : pass \u0417\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u0415\u0441\u043b\u0438 \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043b\u043e\u0441\u044c \u043f\u0440\u0435\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0442\u043e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0430 \u043d\u0435\u0433\u043e \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0435\u0441\u043b\u0438 \u043a\u0442\u043e-\u0442\u043e \u043e\u0442\u043f\u0438\u0448\u0435\u0442\u0441\u044f, \u0442\u043e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0437\u0430\u043d\u043e\u0432\u043e. signals.py @receiver ( post_save , sender = UsersEventsList ) @receiver ( post_delete , sender = UsersEventsList ) def update_event_status ( sender , instance , ** kwargs ): event_card = instance . EventCard if event_card . NumberOfParticipants <= event_card . events_users_list . count () and event_card . Status != 'CANCELED' : event_card . Status = 'CLOSED' event_card . save () print ( 'Registration is closed' ) elif event_card . NumberOfParticipants > event_card . events_users_list . count () and event_card . Status != 'CANCELED' : event_card . Status = 'OPENED' event_card . save () print ( 'Registration is opened' )","title":"Signals"},{"location":"lab3/signals/#_1","text":"\u0422\u0430\u043a \u043a\u0430\u043a \u043d\u0430 \u043c\u043e\u0435\u043c \u0441\u0430\u0439\u0442\u0435 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0437\u0430\u0432\u0438\u0441\u044f\u0442 \u043e\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u0445 \u0432 \u0434\u0440\u0443\u0433\u0438\u0445, \u0442\u043e \u044f \u043d\u0430\u043f\u0438\u0441\u0430\u043b \u0441\u0438\u0433\u043d\u0430\u043b\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u043b\u0438 \u044d\u0442\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f. \u0414\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438 \u044f \u0441\u043e\u0437\u0434\u0430\u043b \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b signals.py .","title":"\u0421\u0438\u0433\u043d\u0430\u043b\u044b"},{"location":"lab3/signals/#_2","text":"\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0447\u0442 \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043d\u0430\u0436\u0438\u043c\u0430\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0443\u044e \u0433\u0430\u043b\u043e\u0447\u043a\u0443 \u0432 \u043b\u0438\u0447\u043d\u043e\u043c \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435. signals.py @receiver ( post_save , sender = EventsUser ) def add_subscribed_email ( sender , instance , ** kwargs ): if instance . IsSubscribed : subscribed_email , created = SubscribedEmail . objects . get_or_create ( User = instance ) subscribed_email . Email = instance . email subscribed_email . save () print ( 'E-mail added' ) @receiver ( post_save , sender = EventsUser ) def remove_subscribed_email ( sender , instance , ** kwargs ): if not instance . IsSubscribed : try : subscribed_email = SubscribedEmail . objects . get ( User = instance ) subscribed_email . delete () print ( 'E-mail deleted' ) except SubscribedEmail . DoesNotExist : pass","title":"\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u0447\u0442 \u0434\u043b\u044f \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0438"},{"location":"lab3/signals/#_3","text":"\u0415\u0441\u043b\u0438 \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043b\u043e\u0441\u044c \u043f\u0440\u0435\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u0442\u043e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0430 \u043d\u0435\u0433\u043e \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c, \u0435\u0441\u043b\u0438 \u043a\u0442\u043e-\u0442\u043e \u043e\u0442\u043f\u0438\u0448\u0435\u0442\u0441\u044f, \u0442\u043e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0437\u0430\u043d\u043e\u0432\u043e. signals.py @receiver ( post_save , sender = UsersEventsList ) @receiver ( post_delete , sender = UsersEventsList ) def update_event_status ( sender , instance , ** kwargs ): event_card = instance . EventCard if event_card . NumberOfParticipants <= event_card . events_users_list . count () and event_card . Status != 'CANCELED' : event_card . Status = 'CLOSED' event_card . save () print ( 'Registration is closed' ) elif event_card . NumberOfParticipants > event_card . events_users_list . count () and event_card . Status != 'CANCELED' : event_card . Status = 'OPENED' event_card . save () print ( 'Registration is opened' )","title":"\u0417\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435"},{"location":"lab3/views/","text":"\u0421\u0435\u0440\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440\u044b \u0412\u0442\u043e\u0440\u044b\u043c \u0448\u0430\u0433\u043e\u043c \u0441\u0442\u0430\u043b\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0435\u0440\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u043b\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0443\u0434\u043e\u0431\u043d\u043e\u0435 \u043d\u0430\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u044f \u0441\u043e\u0437\u0434\u0430\u043b \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b, \u0433\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043b \u0432\u0441\u0435 \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0435\u0440\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440\u044b, \u043a \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043c\u043e\u0436\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c. serializers.py class EventsUserSerializer ( serializers . ModelSerializer ): class Meta : model = EventsUser fields = [ 'id' , 'username' , 'LastName' , 'FirstName' , 'DateOfBirth' , 'PhoneNumber' , 'IsSubscribed' ] class EventCardSerializer ( serializers . ModelSerializer ): class Meta : model = EventCard fields = [ 'id' , 'PostTitle' , 'EventType' , 'Description' , 'DateOfEvent' , 'EventPlace' , 'NumberOfParticipants' , 'AgeRestriction' , 'Status' ] class EventTypeListSerializer ( serializers . ModelSerializer ): class Meta : model = EventTypeList fields = [ 'id' , 'TypeTitle' , 'Description' , 'Colour' ] class PlaceSerializer ( serializers . ModelSerializer ): class Meta : model = Place fields = [ 'id' , 'PlaceTitle' , 'PlaceAddress' , 'PlaceCapacity' ] class UsersEventsListSerializer ( serializers . ModelSerializer ): class Meta : model = UsersEventsList fields = [ 'id' , 'EventUser' , 'EventCard' , 'TimeOfRegistration' ] class SubscribedEmailSerializer ( serializers . ModelSerializer ): class Meta : model = SubscribedEmail fields = [ 'id' , 'User' , 'Email' ] \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0441\u0435\u0440\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u043c\u044b \u043c\u043e\u0433\u043b\u0438 \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u0432\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0438\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u0438. views.py class EventsUserListView ( generics . ListCreateAPIView ): queryset = EventsUser . objects . all () serializer_class = EventsUserSerializer class EventsUserDetailView ( generics . RetrieveUpdateDestroyAPIView ): queryset = EventsUser . objects . all () serializer_class = EventsUserSerializer class EventCardListView ( generics . ListCreateAPIView ): queryset = EventCard . objects . all () serializer_class = EventCardSerializer class EventCardDetailView ( generics . RetrieveUpdateDestroyAPIView ): queryset = EventCard . objects . all () serializer_class = EventCardSerializer class EventTypeListView ( generics . ListCreateAPIView ): queryset = EventTypeList . objects . all () serializer_class = EventTypeListSerializer class PlaceListView ( generics . ListCreateAPIView ): queryset = Place . objects . all () serializer_class = PlaceSerializer class PlaceDetailView ( generics . RetrieveUpdateDestroyAPIView ): queryset = Place . objects . all () serializer_class = PlaceSerializer class UsersEventsListView ( generics . ListAPIView ): queryset = UsersEventsList . objects . all () serializer_class = UsersEventsListSerializer def get ( self , request , * args , ** kwargs ): event_registrations = UsersEventsList . objects . values ( 'EventCard' ) . annotate ( registrations_count = Count ( 'EventCard' )) for registration in event_registrations : event_card_id = registration [ 'EventCard' ] registrations_count = registration [ 'registrations_count' ] print ( f \"Event { event_card_id } : registered { registrations_count } user(s)\" ) return super () . get ( request , * args , ** kwargs ) class SubscribedEmailListView ( generics . ListAPIView ): queryset = SubscribedEmail . objects . all () serializer_class = SubscribedEmailSerializer \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u041f\u043e\u0441\u043b\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0445 url \u0432 \u0444\u0430\u0439\u043b\u0435 urls.py \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u0434\u0430.","title":"Views and serializers"},{"location":"lab3/views/#_1","text":"\u0412\u0442\u043e\u0440\u044b\u043c \u0448\u0430\u0433\u043e\u043c \u0441\u0442\u0430\u043b\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0435\u0440\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u043b\u0438 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0443\u0434\u043e\u0431\u043d\u043e\u0435 \u043d\u0430\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u044f \u0441\u043e\u0437\u0434\u0430\u043b \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u0439\u043b, \u0433\u0434\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043b \u0432\u0441\u0435 \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0435\u0440\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440\u044b, \u043a \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043c\u043e\u0436\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c. serializers.py class EventsUserSerializer ( serializers . ModelSerializer ): class Meta : model = EventsUser fields = [ 'id' , 'username' , 'LastName' , 'FirstName' , 'DateOfBirth' , 'PhoneNumber' , 'IsSubscribed' ] class EventCardSerializer ( serializers . ModelSerializer ): class Meta : model = EventCard fields = [ 'id' , 'PostTitle' , 'EventType' , 'Description' , 'DateOfEvent' , 'EventPlace' , 'NumberOfParticipants' , 'AgeRestriction' , 'Status' ] class EventTypeListSerializer ( serializers . ModelSerializer ): class Meta : model = EventTypeList fields = [ 'id' , 'TypeTitle' , 'Description' , 'Colour' ] class PlaceSerializer ( serializers . ModelSerializer ): class Meta : model = Place fields = [ 'id' , 'PlaceTitle' , 'PlaceAddress' , 'PlaceCapacity' ] class UsersEventsListSerializer ( serializers . ModelSerializer ): class Meta : model = UsersEventsList fields = [ 'id' , 'EventUser' , 'EventCard' , 'TimeOfRegistration' ] class SubscribedEmailSerializer ( serializers . ModelSerializer ): class Meta : model = SubscribedEmail fields = [ 'id' , 'User' , 'Email' ]","title":"\u0421\u0435\u0440\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440\u044b"},{"location":"lab3/views/#_2","text":"\u041f\u043e\u0441\u043b\u0435 \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0441\u0435\u0440\u0438\u0430\u043b\u0430\u0439\u0437\u0435\u0440\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u043c\u044b \u043c\u043e\u0433\u043b\u0438 \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u0432\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0438\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u0438. views.py class EventsUserListView ( generics . ListCreateAPIView ): queryset = EventsUser . objects . all () serializer_class = EventsUserSerializer class EventsUserDetailView ( generics . RetrieveUpdateDestroyAPIView ): queryset = EventsUser . objects . all () serializer_class = EventsUserSerializer class EventCardListView ( generics . ListCreateAPIView ): queryset = EventCard . objects . all () serializer_class = EventCardSerializer class EventCardDetailView ( generics . RetrieveUpdateDestroyAPIView ): queryset = EventCard . objects . all () serializer_class = EventCardSerializer class EventTypeListView ( generics . ListCreateAPIView ): queryset = EventTypeList . objects . all () serializer_class = EventTypeListSerializer class PlaceListView ( generics . ListCreateAPIView ): queryset = Place . objects . all () serializer_class = PlaceSerializer class PlaceDetailView ( generics . RetrieveUpdateDestroyAPIView ): queryset = Place . objects . all () serializer_class = PlaceSerializer class UsersEventsListView ( generics . ListAPIView ): queryset = UsersEventsList . objects . all () serializer_class = UsersEventsListSerializer def get ( self , request , * args , ** kwargs ): event_registrations = UsersEventsList . objects . values ( 'EventCard' ) . annotate ( registrations_count = Count ( 'EventCard' )) for registration in event_registrations : event_card_id = registration [ 'EventCard' ] registrations_count = registration [ 'registrations_count' ] print ( f \"Event { event_card_id } : registered { registrations_count } user(s)\" ) return super () . get ( request , * args , ** kwargs ) class SubscribedEmailListView ( generics . ListAPIView ): queryset = SubscribedEmail . objects . all () serializer_class = SubscribedEmailSerializer","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f"},{"location":"lab3/views/#_3","text":"\u041f\u043e\u0441\u043b\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0445 url \u0432 \u0444\u0430\u0439\u043b\u0435 urls.py \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u043e\u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u0434\u0430.","title":"\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab4/","text":"\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u041c\u0438\u043d\u0438\u0441\u0442\u0435\u0440\u0441\u0442\u0432\u043e \u043d\u0430\u0443\u043a\u0438 \u0438 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0443\u0447\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u00ab\u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e\u00bb \u041e\u0422\u0427\u0415\u0422 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u00ab\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js.\u00bb \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u00abWeb-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u00bb \u041e\u0442\u0447\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0421\u0442\u0443\u0434\u0435\u043d\u0442: \u041d\u0438\u043a\u043e\u043d\u043e\u0440\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a33422 \u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u0418\u041a\u0422 \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023","title":"Intro"},{"location":"lab4/#_1","text":"\u041c\u0438\u043d\u0438\u0441\u0442\u0435\u0440\u0441\u0442\u0432\u043e \u043d\u0430\u0443\u043a\u0438 \u0438 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0443\u0447\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u00ab\u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e\u00bb \u041e\u0422\u0427\u0415\u0422 \u043f\u043e \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u00ab\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js.\u00bb \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u00abWeb-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u00bb \u041e\u0442\u0447\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0421\u0442\u0443\u0434\u0435\u043d\u0442: \u041d\u0438\u043a\u043e\u043d\u043e\u0440\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a33422 \u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u0418\u041a\u0422 \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023","title":"\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435"},{"location":"lab4/app/","text":"App.vue \u0412 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0443 \u043c\u0435\u043d\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d navbar, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438/\u0432\u044b\u0445\u043e\u0434\u0435 \u0438\u0437 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430. \u0414\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 vuex. App.vue < template > < div id = \"app\" > < CNavbar expand = \"lg\" color - scheme = \"dark\" class = \"bg-dark\" > < CContainer fluid > < router - link : to = \"{ name: 'EventHome' }\" >< CNavbarBrand > \u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f < /CNavbarBrand></router-link> < CNavbarToggler aria - label = \"Toggle navigation\" aria - expanded = { visible } @ click = \"visible = !visible\" /> < CCollapse class = \"navbar-collapse\" : visible = \"visible\" > < CNavbarNav > < div v - if = \"$store.state.isAuthenticated\" > < CNavItem > < router - link : to = \"{ name: 'UserPage' }\" >< CNavLink > \u041c\u043e\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442 < /CNavLink></router-link> < /CNavItem> < CNavItem > < CNavLink @ click = \"logout\" > \u0412\u044b\u0439\u0442\u0438 < /CNavLink> < /CNavItem> < /div> < div v - else > < CDropdown variant = \"nav-item\" : popper = \"false\" > < CDropdownToggle color = \"secondary\" > \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f < /CDropdownToggle> < CDropdownMenu > < router - link : to = \"{ name: 'login' }\" >< CDropdownItem class = \"dropdown-item\" > \u0412\u0445\u043e\u0434 < /CDropdownItem></router-link> < router - link : to = \"{ name: 'registration' }\" >< CDropdownItem class = \"dropdown-item\" > \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f < /CDropdownItem></router-link> < /CDropdownMenu> < /CDropdown> < /div> < /CNavbarNav> < /CCollapse> < /CContainer> < /CNavbar> < router - view /> < /div> < /template> < script > import { reactive } from 'vue' ; import { CNavbar , CContainer , CNavbarBrand , CNavbarToggler , CCollapse , CNavbarNav , CNavItem , CNavLink , CDropdown , CDropdownToggle , CDropdownMenu , CDropdownItem } from '@coreui/vue' ; export default { name : 'App' , setup () { const authState = reactive ({ isAuthenticated : !! sessionStorage . getItem ( 'token' ), }); return { authState }; }, components : { CNavbar , CContainer , CNavbarBrand , CNavbarToggler , CCollapse , CNavbarNav , CNavItem , CNavLink , CDropdown , CDropdownToggle , CDropdownMenu , CDropdownItem }, methods : { logout () { sessionStorage . removeItem ( 'token' ); sessionStorage . removeItem ( 'username' ); sessionStorage . removeItem ( 'password' ); sessionStorage . removeItem ( 'user_id' ); this . $store . commit ( 'setAuthenticated' , false ); this . $router . push ({ name : 'login' }); }, }, }; < /script> < style > < /style>","title":"App"},{"location":"lab4/app/#appvue","text":"\u0412 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0443 \u043c\u0435\u043d\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d navbar, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438/\u0432\u044b\u0445\u043e\u0434\u0435 \u0438\u0437 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430. \u0414\u043b\u044f \u043e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 vuex. App.vue < template > < div id = \"app\" > < CNavbar expand = \"lg\" color - scheme = \"dark\" class = \"bg-dark\" > < CContainer fluid > < router - link : to = \"{ name: 'EventHome' }\" >< CNavbarBrand > \u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f < /CNavbarBrand></router-link> < CNavbarToggler aria - label = \"Toggle navigation\" aria - expanded = { visible } @ click = \"visible = !visible\" /> < CCollapse class = \"navbar-collapse\" : visible = \"visible\" > < CNavbarNav > < div v - if = \"$store.state.isAuthenticated\" > < CNavItem > < router - link : to = \"{ name: 'UserPage' }\" >< CNavLink > \u041c\u043e\u0439 \u043a\u0430\u0431\u0438\u043d\u0435\u0442 < /CNavLink></router-link> < /CNavItem> < CNavItem > < CNavLink @ click = \"logout\" > \u0412\u044b\u0439\u0442\u0438 < /CNavLink> < /CNavItem> < /div> < div v - else > < CDropdown variant = \"nav-item\" : popper = \"false\" > < CDropdownToggle color = \"secondary\" > \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f < /CDropdownToggle> < CDropdownMenu > < router - link : to = \"{ name: 'login' }\" >< CDropdownItem class = \"dropdown-item\" > \u0412\u0445\u043e\u0434 < /CDropdownItem></router-link> < router - link : to = \"{ name: 'registration' }\" >< CDropdownItem class = \"dropdown-item\" > \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f < /CDropdownItem></router-link> < /CDropdownMenu> < /CDropdown> < /div> < /CNavbarNav> < /CCollapse> < /CContainer> < /CNavbar> < router - view /> < /div> < /template> < script > import { reactive } from 'vue' ; import { CNavbar , CContainer , CNavbarBrand , CNavbarToggler , CCollapse , CNavbarNav , CNavItem , CNavLink , CDropdown , CDropdownToggle , CDropdownMenu , CDropdownItem } from '@coreui/vue' ; export default { name : 'App' , setup () { const authState = reactive ({ isAuthenticated : !! sessionStorage . getItem ( 'token' ), }); return { authState }; }, components : { CNavbar , CContainer , CNavbarBrand , CNavbarToggler , CCollapse , CNavbarNav , CNavItem , CNavLink , CDropdown , CDropdownToggle , CDropdownMenu , CDropdownItem }, methods : { logout () { sessionStorage . removeItem ( 'token' ); sessionStorage . removeItem ( 'username' ); sessionStorage . removeItem ( 'password' ); sessionStorage . removeItem ( 'user_id' ); this . $store . commit ( 'setAuthenticated' , false ); this . $router . push ({ name : 'login' }); }, }, }; < /script> < style > < /style>","title":"App.vue"},{"location":"lab4/component/","text":"\u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0423 \u043c\u0435\u043d\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043e\u0434\u0438\u043d \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0441 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f\u043c\u0438 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a. EventList.vue < template > < div class = \"event-list\" > < h1 > \u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f < /h1> < div class = \"row\" > < div v - for = \"event in events\" : key = \"event.id\" class = \"col-md-4 mb-4\" > < CCard style = \"width: 24rem\" > < CCardBody > < CCardTitle > {{ event . PostTitle }} < /CCardTitle> < CCardSubtitle class = \"mb-2 text-muted\" > {{ event . EventType . TypeTitle }} < /CCardSubtitle> < CCardText > < p > \u0414\u0430\u0442\u0430 : {{ event . DateOfEvent }} < /p> < p > \u041c\u0435\u0441\u0442\u043e : {{ event . EventPlace ? event . EventPlace . PlaceTitle : '\u041c\u0435\u0441\u0442\u043e \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e' }} < /p> < /CCardText> < router - link : to = \"{ name: 'event-detail', params: { id: event.id } }\" > < CButton color = \"dark\" > \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 < /CButton> < /router-link> < /CCardBody> < /CCard> < /div> < /div> < /div> < /template> < script > import { CCard , CCardBody , CCardTitle , CCardSubtitle , CCardText , CButton , } from '@coreui/vue' ; export default { components : { CCard , CCardBody , CCardTitle , CCardSubtitle , CCardText , CButton , }, data () { return { events : [], }; }, mounted () { this . $axios . get ( 'http://127.0.0.1:8000/api/events/' ) . then (( response ) => { this . events = response . data ; }) . catch (( error ) => { console . error ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439:' , error ); }); }, }; < /script>","title":"Component"},{"location":"lab4/component/#_1","text":"\u0423 \u043c\u0435\u043d\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u043e\u0434\u0438\u043d \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0438 \u0441 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f\u043c\u0438 \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438 \u043e\u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043b\u044f\u0435\u0442 \u043f\u0435\u0440\u0435\u0445\u043e\u0434 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043a\u0430\u0440\u0442\u043e\u0447\u0435\u043a. EventList.vue < template > < div class = \"event-list\" > < h1 > \u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f < /h1> < div class = \"row\" > < div v - for = \"event in events\" : key = \"event.id\" class = \"col-md-4 mb-4\" > < CCard style = \"width: 24rem\" > < CCardBody > < CCardTitle > {{ event . PostTitle }} < /CCardTitle> < CCardSubtitle class = \"mb-2 text-muted\" > {{ event . EventType . TypeTitle }} < /CCardSubtitle> < CCardText > < p > \u0414\u0430\u0442\u0430 : {{ event . DateOfEvent }} < /p> < p > \u041c\u0435\u0441\u0442\u043e : {{ event . EventPlace ? event . EventPlace . PlaceTitle : '\u041c\u0435\u0441\u0442\u043e \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e' }} < /p> < /CCardText> < router - link : to = \"{ name: 'event-detail', params: { id: event.id } }\" > < CButton color = \"dark\" > \u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435 < /CButton> < /router-link> < /CCardBody> < /CCard> < /div> < /div> < /div> < /template> < script > import { CCard , CCardBody , CCardTitle , CCardSubtitle , CCardText , CButton , } from '@coreui/vue' ; export default { components : { CCard , CCardBody , CCardTitle , CCardSubtitle , CCardText , CButton , }, data () { return { events : [], }; }, mounted () { this . $axios . get ( 'http://127.0.0.1:8000/api/events/' ) . then (( response ) => { this . events = response . data ; }) . catch (( error ) => { console . error ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439:' , error ); }); }, }; < /script>","title":"\u041a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442"},{"location":"lab4/views/","text":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0423 \u043c\u0435\u043d\u044f \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044f \u0440\u0435\u0448\u0438\u043b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u043c \u043a\u043b\u0430\u0441\u0441\u043e\u043c ( EventsUser ), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0432\u044f\u0437\u0430\u043d \u0441\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User. \u0422\u0430\u043a\u0436\u0435 \u043f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u043e\u0447\u0442\u0443, \u0442\u0435\u043b\u0435\u0444\u043e\u043d \u0438 \u0441\u0432\u043e\u0439 \u0432\u043e\u0437\u0440\u0430\u0441\u0442. \u0412\u0441\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f ( EventCard ) \u0441\u043e\u0431\u0440\u0430\u043d\u044b \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0438 \u0438\u043c\u0435\u044e\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0442\u0438\u043f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043b\u0435\u043a\u0446\u0438\u044f \u0438\u043b\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442), \u0434\u0430\u0442\u0443 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u043e\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0435\u0441\u0442. \u0421\u043f\u0438\u0441\u043e\u043a \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e ( EventTypeList ). \u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0442 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\u0430\u0445 ( Place ), \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0435\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u0430\u0434\u0440\u0435\u0441 \u0438 \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c. \u041d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u043b\u044e\u0434\u0435\u0439, \u0447\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u0432\u043c\u0435\u0449\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0430. \u0422\u0430\u043a\u0436\u0435 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0443\u044e\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f. \u041e\u043d \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435, \u0435\u0441\u043b\u0438 \u043d\u0435 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0443, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0435\u0441\u043b\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u043e\u0442\u043c\u0435\u043d\u0435\u043d\u043e \u0438\u043b\u0438 \u0443\u0436\u0435 \u043f\u0440\u043e\u0448\u043b\u043e. \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u0412 \u043f\u0430\u043f\u043a\u0435 views \u0443 \u043c\u0435\u043d\u044f \u043b\u0435\u0436\u0430\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u043d\u0430, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0438 \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0447\u0435\u0440\u0435\u0437 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 djoser. \u0422\u0430\u043a\u0436\u0435 \u0432\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u043f\u0440\u0438 \u043b\u043e\u0433\u0438\u043d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0442\u043e\u043a\u0435\u043d\u0435, id \u0438 \u044e\u0437\u0435\u0440\u043d\u0435\u0439\u043c\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. UserRegistration.vue < template > < div class = \"card\" style = \"max-width: 50%; margin: 50px auto;\" > < h1 class = \"text-dark\" style = \"text-align: center;\" > \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f < /h1> < form @ submit . prevent = \"register\" class = \"card-body\" > < div class = \"form-group\" > < label for = \"username\" class = \"text-secondary\" > \u041b\u043e\u0433\u0438\u043d :< /label> < input type = \"text\" id = \"username\" v - model = \"username\" required class = \"form-control\" placeholder = \"\u041b\u043e\u0433\u0438\u043d\" > < /div> < div class = \"form-group\" > < label for = \"FirstName\" class = \"text-secondary\" > \u0418\u043c\u044f :< /label> < input type = \"text\" id = \"FirstName\" v - model = \"FirstName\" required class = \"form-control\" placeholder = \"\u0418\u043c\u044f\" > < /div> < div class = \"form-group\" > < label for = \"LastName\" class = \"text-secondary\" > \u0424\u0430\u043c\u0438\u043b\u0438\u044f :< /label> < input type = \"text\" id = \"LastName\" v - model = \"LastName\" required class = \"form-control\" placeholder = \"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\" > < /div> < div class = \"form-group\" > < label for = \"email\" class = \"text-secondary\" > Email :< /label> < input type = \"email\" id = \"email\" v - model = \"email\" required class = \"form-control\" placeholder = \"\u041f\u043e\u0447\u0442\u0430\" > < /div> < div class = \"form-group\" > < label for = \"password\" class = \"text-secondary\" > \u041f\u0430\u0440\u043e\u043b\u044c :< /label> < input type = \"password\" id = \"password\" v - model = \"password\" required class = \"form-control\" placeholder = \"\u041f\u0430\u0440\u043e\u043b\u044c\" > < /div> < br > < button type = \"submit\" class = \"btn btn-dark\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f < /button> < br > < p v - if = \"err\" class = \"text-danger\" > {{ err }} < /p> < /form> < /div> < /template> < script > import axios from 'axios' ; export default { name : 'UserRegistration' , data () { return { username : '' , email : '' , password : '' , LastName : '' , FirstName : '' , err : null }; }, methods : { register () { axios . post ( 'http://127.0.0.1:8000/event/auth/users/' , { username : this . username , email : this . email , password : this . password , LastName : this . LastName , FirstName : this . FirstName , }, ) . then ( response => { console . log ( '\u0423\u0441\u043f\u0435\u0448\u043d\u0430\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f:' , response . data ); this . $router . push ({ name : 'login' }); }) . catch ( error => { console . error ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438:' , error . response . data ); this . err = error . response . data ; }); }, } } < /script> UserLogin.vue < template > < div class = \"card\" style = \"max-width: 50%; margin: 50px auto;\" > < h1 class = \"text-dark\" style = \"text-align: center;\" > \u0412\u0445\u043e\u0434 < /h1> < form @ submit . prevent = \"login\" class = \"card-body\" > < div class = \"form-group\" > < label for = \"username\" class = \"text-secondary\" > \u041b\u043e\u0433\u0438\u043d :< /label> < input type = \"text\" id = \"username\" v - model = \"username\" required class = \"form-control\" placeholder = \"\u041b\u043e\u0433\u0438\u043d\" > < /div> < div class = \"form-group\" > < label for = \"password\" class = \"text-secondary\" > \u041f\u0430\u0440\u043e\u043b\u044c :< /label> < input type = \"password\" id = \"password\" v - model = \"password\" required class = \"form-control\" placeholder = \"\u041f\u0430\u0440\u043e\u043b\u044c\" > < /div> < br > < button type = \"submit\" class = \"btn btn-dark\" > \u0412\u043e\u0439\u0442\u0438 < /button> < br > < p v - if = \"err\" class = \"text-danger\" > {{ err }} < /p> < /form> < /div> < /template> < script > import axios from 'axios' ; export default { name : 'UserLogin' , data () { return { username : '' , password : '' , err : null , }; }, methods : { login () { axios . post ( 'http://127.0.0.1:8000/auth/token/login/' , { username : this . username , password : this . password , }) . then ( response => { console . log ( '\u0423\u0441\u043f\u0435\u0448\u043d\u044b\u0439 \u0432\u0445\u043e\u0434:' , response . data ); sessionStorage . setItem ( 'token' , response . data . auth_token ) sessionStorage . setItem ( 'username' , this . username ) sessionStorage . setItem ( 'password' , this . password ) this . getUserData (); this . $router . push ({ name : 'EventHome' }); }) . catch ( error => { console . error ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u0432\u0445\u043e\u0434\u0430:' , error . response . data ); this . err = '\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u043b\u043e\u0433\u0438\u043d \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c' ; }); }, async getUserData () { try { const response = await axios . get ( 'http://127.0.0.1:8000/event/auth/users/me' , { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }); this . user = response . data ; sessionStorage . setItem ( 'user_id' , this . user . id ); this . $store . commit ( 'setAuthenticated' , true ); console . log ( 'hi' ) } catch ( error ) { console . log ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:' , error ); } }, }, }; < /script> < style scoped > < /style> \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435. \u0422\u0430\u043a\u0436\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0432\u0430\u0440\u0438\u0430\u0440\u0442\u044b \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0438 \u043d\u0435 \u0434\u0430\u0435\u0442 \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u044c \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 \u043c\u0435\u0441\u0442 \u0438\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0436\u0435 \u0432\u0437\u044f\u043b \u0431\u0438\u043b\u0435\u0442. EventDetail.vue < template > < div class = \"event-detail card\" > < router - link to = \"/\" class = \"btn btn-dark mb-3\" >& lt ; \u041d\u0430\u0437\u0430\u0434 < /router-link> < div v - if = \"event\" class = \"card-body\" > < h1 class = \"card-title text-dark\" > {{ event . PostTitle || '\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e' }} < /h1> < div class = \"alert alert-dark\" role = \"alert\" v - html = \"event.Description || '\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e'\" >< /div> < p class = \"card-text\" > \u0414\u0430\u0442\u0430 : {{ event . DateOfEvent || '\u0414\u0430\u0442\u0430 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0430' }} < /p> < p class = \"card-text\" > \u041c\u0435\u0441\u0442\u043e : {{ event . EventPlace ? event . EventPlace . PlaceTitle || '\u041c\u0435\u0441\u0442\u043e \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e' : '\u041c\u0435\u0441\u0442\u043e \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e' }} < /p> <!-- Registration Form --> < div v - if = \"user && event.Status === 'OPENED' && !registrationError\" > < button class = \"btn btn-dark\" @ click = \"registerForEvent\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f < /button> < /div> < div v - else - if = \"registrationError\" > < button class = \"btn btn-danger\" > \u0412\u044b \u0443\u0436\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043d\u0430 \u044d\u0442\u043e \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 . < /button> < /div> < div v - else - if = \"event.Status !== 'OPENED'\" > < p : class = \"statusClass(event.Status)\" > \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 : {{ event . Status }} < /p> < /div> < div v - else > < b >< p > \u0412\u043e\u0439\u0434\u0438\u0442\u0435 , \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 . < /p></b> < /div> < /div> < /div> < /template> < script > import axios from 'axios' ; import { reactive } from 'vue' ; export default { setup () { const authState = reactive ({ isAuthenticated : !! sessionStorage . getItem ( 'token' ), }); return { authState }; }, data () { return { event : null , user : null , registrationError : false , }; }, watch : { '$route.params.id' : 'fetchEventData' , }, mounted () { this . fetchEventData (); this . getUserData (); }, methods : { statusClass ( status ) { switch ( status ) { case 'OPENED' : return 'status-opened' ; case 'CANCELED' : return 'status-canceled' ; case 'CLOSED' : return 'status-closed' ; default : return '' ; } }, fetchEventData () { const eventId = this . $route . params . id ; this . $axios . get ( `http://127.0.0.1:8000/events/ ${ eventId } /` ) . then (( response ) => { this . event = response . data ; }) . catch (( error ) => { console . error ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439:' , error ); }); }, async getUserData () { try { const response = await axios . get ( 'http://127.0.0.1:8000/event/auth/users/me' , { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }); this . user = response . data ; } catch ( error ) { console . log ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:' , error ); } }, async registerForEvent () { try { const eventId = this . $route . params . id ; const userId = this . user . id ; const response = await axios . post ( 'http://127.0.0.1:8000/users-events/' , { EventUser : userId , EventCard : eventId , }, { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }); console . log ( 'Successfully registered for the event:' , response . data ); this . $router . push ({ name : 'EventHome' }); } catch ( error ) { if ( error . response && error . response . data . non_field_errors && error . response . data . non_field_errors . includes ( 'The fields EventUser, EventCard must make a unique set.' )) { this . registrationError = true ; } else { console . log ( 'Error while registering:' , error ); } } }, }, }; < /script> < style scoped > . event - detail { max - width : 600 px ; margin : 0 auto ; padding : 20 px ; position : relative ; } h1 { font - family : 'Poppins' , sans - serif ; color : # 00 80 ff ; } p { font - family : 'Poppins' , sans - serif ; color : # 333 ; margin - bottom : 10 px ; } . back - button { font - size : 24 px ; width : 40 px ; height : 40 px ; border - radius : 50 % ; background - color : # 00 80 ff ; color : white ; display : flex ; align - items : center ; justify - content : center ; text - decoration : none ; position : absolute ; top : 20 px ; left : 20 px ; } . back - button : hover { background - color : # 005 88 e ; } . status - opened { color : green ; } . status - canceled { color : orange ; } . status - closed { color : red ; } < /style> \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0441\u0432\u043e\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u043e\u0442\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u044f. UserPage.vue < template > < div class = \"container mt-5\" > < div class = \"card\" > < div class = \"card-body\" > < h2 > \u0410\u043a\u043a\u0430\u0443\u043d\u0442 < /h2> < div class = \"alert alert-dark\" role = \"alert\" > \u041f\u0440\u0438\u0432\u0435\u0442 , {{ user . username }} < /div> < /div> < /div> < div class = \"card mt-5\" > < div class = \"card-header\" > < h2 > \u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f , \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b < /h2> < /div> < div class = \"card-body\" > < ul class = \"list-group\" > < li class = \"list-group-item\" v - for = \"event in events\" : key = \"event.id\" > < h5 >< strong > \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f :< /strong> {{ event.EventCard.PostTitle }}</h5> < p >< strong > \u0414\u0430\u0442\u0430 :< /strong> {{ event.EventCard.DateOfEvent }}</p> < p >< strong > \u0410\u0434\u0440\u0435\u0441 :< /strong> {{ event.EventCard.EventPlace.PlaceAddress }}</p> < CButton color = \"danger\" @ click = \"openModal(event.id)\" > \u0423\u0434\u0430\u043b\u0438\u0442\u044c < /CButton> < /li> < /ul> < /div> < CModal v - model : visible = \"visible\" @ close = \"closeModal\" > < CModalHeader : on - close = \"closeModal\" > < CModalTitle > \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 < /CModalTitle> < /CModalHeader> < CModalBody > \u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b , \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0442\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u044d\u0442\u043e\u0433\u043e \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f ? < /CModalBody> < CModalFooter > < CButton color = \"secondary\" @ click = \"closeModal\" > \u041e\u0442\u043c\u0435\u043d\u0430 < /CButton> < CButton color = \"primary\" @ click = \"deleteEvent\" > \u0423\u0434\u0430\u043b\u0438\u0442\u044c < /CButton> < /CModalFooter> < /CModal> < /div> < /div> < /template> < script > import { CButton , CModal , CModalHeader , CModalTitle , CModalBody , CModalFooter } from '@coreui/vue' ; import axios from 'axios' ; export default { components : { CButton , CModal , CModalHeader , CModalTitle , CModalBody , CModalFooter }, data () { return { events : [], user : '' , visible : false , eventToDelete : null }; }, mounted () { this . getUserData (); this . getEvents (); }, methods : { async getUserData () { try { const user_id = sessionStorage . getItem ( 'user_id' ); const response = await axios . get ( `http://127.0.0.1:8000/users/ ${ user_id } ` , { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }); this . user = response . data ; } catch ( error ) { console . log ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:' , error ); } }, async getEvents () { try { const response = await axios . get ( 'http://127.0.0.1:8000/users-wide-events/' , { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }); this . events = response . data . filter ( event => event . EventUser . id === this . user . id ); } catch ( error ) { console . log ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439:' , error ); } }, openModal ( eventId ) { this . visible = true ; this . eventToDelete = eventId ; }, closeModal () { this . visible = false ; }, deleteEvent () { axios . delete ( `http://127.0.0.1:8000/users-events/ ${ this . eventToDelete } /` , { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }) . then (() => { console . log ( 'Registration deleted' ); this . getEvents (); this . closeModal (); }) . catch ( error => { console . error ( 'Error deleting registration:' , error ); }); } }, }; < /script> < style scoped > < /style>","title":"Views"},{"location":"lab4/views/#_1","text":"\u0423 \u043c\u0435\u043d\u044f \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044f \u0440\u0435\u0448\u0438\u043b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u043c\u043e\u0433\u0443\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0440\u0430\u0437\u043d\u044b\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u043c \u043a\u043b\u0430\u0441\u0441\u043e\u043c ( EventsUser ), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0432\u044f\u0437\u0430\u043d \u0441\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e User. \u0422\u0430\u043a\u0436\u0435 \u043f\u0440\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u043e\u0447\u0442\u0443, \u0442\u0435\u043b\u0435\u0444\u043e\u043d \u0438 \u0441\u0432\u043e\u0439 \u0432\u043e\u0437\u0440\u0430\u0441\u0442. \u0412\u0441\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f ( EventCard ) \u0441\u043e\u0431\u0440\u0430\u043d\u044b \u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0438 \u0438\u043c\u0435\u044e\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0442\u0438\u043f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043b\u0435\u043a\u0446\u0438\u044f \u0438\u043b\u0438 \u043a\u043e\u043d\u0446\u0435\u0440\u0442), \u0434\u0430\u0442\u0443 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u043d\u043e\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0435\u0441\u0442. \u0421\u043f\u0438\u0441\u043e\u043a \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e ( EventTypeList ). \u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0442 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u043c\u0435\u0441\u0442\u0430\u0445 ( Place ), \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0435\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u0430\u0434\u0440\u0435\u0441 \u0438 \u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c. \u041d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u043b\u044e\u0434\u0435\u0439, \u0447\u0435\u043c \u043c\u043e\u0436\u0435\u0442 \u0432\u043c\u0435\u0449\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u044f \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0430. \u0422\u0430\u043a\u0436\u0435 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0443\u044e\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f. \u041e\u043d \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435, \u0435\u0441\u043b\u0438 \u043d\u0435 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0443, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0435\u0441\u043b\u0438 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 \u043e\u0442\u043c\u0435\u043d\u0435\u043d\u043e \u0438\u043b\u0438 \u0443\u0436\u0435 \u043f\u0440\u043e\u0448\u043b\u043e.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438"},{"location":"lab4/views/#_2","text":"\u0412 \u043f\u0430\u043f\u043a\u0435 views \u0443 \u043c\u0435\u043d\u044f \u043b\u0435\u0436\u0430\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043b\u043e\u0433\u0438\u043d\u0430, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0433\u043b\u0430\u0432\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0438 \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0447\u0435\u0440\u0435\u0437 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 djoser. \u0422\u0430\u043a\u0436\u0435 \u0432\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 \u043f\u0440\u0438 \u043b\u043e\u0433\u0438\u043d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u044e\u0442\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u043e \u0442\u043e\u043a\u0435\u043d\u0435, id \u0438 \u044e\u0437\u0435\u0440\u043d\u0435\u0439\u043c\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. UserRegistration.vue < template > < div class = \"card\" style = \"max-width: 50%; margin: 50px auto;\" > < h1 class = \"text-dark\" style = \"text-align: center;\" > \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f < /h1> < form @ submit . prevent = \"register\" class = \"card-body\" > < div class = \"form-group\" > < label for = \"username\" class = \"text-secondary\" > \u041b\u043e\u0433\u0438\u043d :< /label> < input type = \"text\" id = \"username\" v - model = \"username\" required class = \"form-control\" placeholder = \"\u041b\u043e\u0433\u0438\u043d\" > < /div> < div class = \"form-group\" > < label for = \"FirstName\" class = \"text-secondary\" > \u0418\u043c\u044f :< /label> < input type = \"text\" id = \"FirstName\" v - model = \"FirstName\" required class = \"form-control\" placeholder = \"\u0418\u043c\u044f\" > < /div> < div class = \"form-group\" > < label for = \"LastName\" class = \"text-secondary\" > \u0424\u0430\u043c\u0438\u043b\u0438\u044f :< /label> < input type = \"text\" id = \"LastName\" v - model = \"LastName\" required class = \"form-control\" placeholder = \"\u0424\u0430\u043c\u0438\u043b\u0438\u044f\" > < /div> < div class = \"form-group\" > < label for = \"email\" class = \"text-secondary\" > Email :< /label> < input type = \"email\" id = \"email\" v - model = \"email\" required class = \"form-control\" placeholder = \"\u041f\u043e\u0447\u0442\u0430\" > < /div> < div class = \"form-group\" > < label for = \"password\" class = \"text-secondary\" > \u041f\u0430\u0440\u043e\u043b\u044c :< /label> < input type = \"password\" id = \"password\" v - model = \"password\" required class = \"form-control\" placeholder = \"\u041f\u0430\u0440\u043e\u043b\u044c\" > < /div> < br > < button type = \"submit\" class = \"btn btn-dark\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f < /button> < br > < p v - if = \"err\" class = \"text-danger\" > {{ err }} < /p> < /form> < /div> < /template> < script > import axios from 'axios' ; export default { name : 'UserRegistration' , data () { return { username : '' , email : '' , password : '' , LastName : '' , FirstName : '' , err : null }; }, methods : { register () { axios . post ( 'http://127.0.0.1:8000/event/auth/users/' , { username : this . username , email : this . email , password : this . password , LastName : this . LastName , FirstName : this . FirstName , }, ) . then ( response => { console . log ( '\u0423\u0441\u043f\u0435\u0448\u043d\u0430\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f:' , response . data ); this . $router . push ({ name : 'login' }); }) . catch ( error => { console . error ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438:' , error . response . data ); this . err = error . response . data ; }); }, } } < /script> UserLogin.vue < template > < div class = \"card\" style = \"max-width: 50%; margin: 50px auto;\" > < h1 class = \"text-dark\" style = \"text-align: center;\" > \u0412\u0445\u043e\u0434 < /h1> < form @ submit . prevent = \"login\" class = \"card-body\" > < div class = \"form-group\" > < label for = \"username\" class = \"text-secondary\" > \u041b\u043e\u0433\u0438\u043d :< /label> < input type = \"text\" id = \"username\" v - model = \"username\" required class = \"form-control\" placeholder = \"\u041b\u043e\u0433\u0438\u043d\" > < /div> < div class = \"form-group\" > < label for = \"password\" class = \"text-secondary\" > \u041f\u0430\u0440\u043e\u043b\u044c :< /label> < input type = \"password\" id = \"password\" v - model = \"password\" required class = \"form-control\" placeholder = \"\u041f\u0430\u0440\u043e\u043b\u044c\" > < /div> < br > < button type = \"submit\" class = \"btn btn-dark\" > \u0412\u043e\u0439\u0442\u0438 < /button> < br > < p v - if = \"err\" class = \"text-danger\" > {{ err }} < /p> < /form> < /div> < /template> < script > import axios from 'axios' ; export default { name : 'UserLogin' , data () { return { username : '' , password : '' , err : null , }; }, methods : { login () { axios . post ( 'http://127.0.0.1:8000/auth/token/login/' , { username : this . username , password : this . password , }) . then ( response => { console . log ( '\u0423\u0441\u043f\u0435\u0448\u043d\u044b\u0439 \u0432\u0445\u043e\u0434:' , response . data ); sessionStorage . setItem ( 'token' , response . data . auth_token ) sessionStorage . setItem ( 'username' , this . username ) sessionStorage . setItem ( 'password' , this . password ) this . getUserData (); this . $router . push ({ name : 'EventHome' }); }) . catch ( error => { console . error ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u0432\u0445\u043e\u0434\u0430:' , error . response . data ); this . err = '\u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u043b\u043e\u0433\u0438\u043d \u0438\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c' ; }); }, async getUserData () { try { const response = await axios . get ( 'http://127.0.0.1:8000/event/auth/users/me' , { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }); this . user = response . data ; sessionStorage . setItem ( 'user_id' , this . user . id ); this . $store . commit ( 'setAuthenticated' , true ); console . log ( 'hi' ) } catch ( error ) { console . log ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:' , error ); } }, }, }; < /script> < style scoped > < /style>","title":"\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f"},{"location":"lab4/views/#_3","text":"\u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435. \u0422\u0430\u043a\u0436\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0432\u0430\u0440\u0438\u0430\u0440\u0442\u044b \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0438 \u043d\u0435 \u0434\u0430\u0435\u0442 \u043f\u043e\u0441\u0435\u0442\u0438\u0442\u044c \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 \u043c\u0435\u0441\u0442 \u0438\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0436\u0435 \u0432\u0437\u044f\u043b \u0431\u0438\u043b\u0435\u0442. EventDetail.vue < template > < div class = \"event-detail card\" > < router - link to = \"/\" class = \"btn btn-dark mb-3\" >& lt ; \u041d\u0430\u0437\u0430\u0434 < /router-link> < div v - if = \"event\" class = \"card-body\" > < h1 class = \"card-title text-dark\" > {{ event . PostTitle || '\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e' }} < /h1> < div class = \"alert alert-dark\" role = \"alert\" v - html = \"event.Description || '\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e'\" >< /div> < p class = \"card-text\" > \u0414\u0430\u0442\u0430 : {{ event . DateOfEvent || '\u0414\u0430\u0442\u0430 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0430' }} < /p> < p class = \"card-text\" > \u041c\u0435\u0441\u0442\u043e : {{ event . EventPlace ? event . EventPlace . PlaceTitle || '\u041c\u0435\u0441\u0442\u043e \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e' : '\u041c\u0435\u0441\u0442\u043e \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e' }} < /p> <!-- Registration Form --> < div v - if = \"user && event.Status === 'OPENED' && !registrationError\" > < button class = \"btn btn-dark\" @ click = \"registerForEvent\" > \u0417\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f < /button> < /div> < div v - else - if = \"registrationError\" > < button class = \"btn btn-danger\" > \u0412\u044b \u0443\u0436\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043d\u0430 \u044d\u0442\u043e \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 . < /button> < /div> < div v - else - if = \"event.Status !== 'OPENED'\" > < p : class = \"statusClass(event.Status)\" > \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 : {{ event . Status }} < /p> < /div> < div v - else > < b >< p > \u0412\u043e\u0439\u0434\u0438\u0442\u0435 , \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 . < /p></b> < /div> < /div> < /div> < /template> < script > import axios from 'axios' ; import { reactive } from 'vue' ; export default { setup () { const authState = reactive ({ isAuthenticated : !! sessionStorage . getItem ( 'token' ), }); return { authState }; }, data () { return { event : null , user : null , registrationError : false , }; }, watch : { '$route.params.id' : 'fetchEventData' , }, mounted () { this . fetchEventData (); this . getUserData (); }, methods : { statusClass ( status ) { switch ( status ) { case 'OPENED' : return 'status-opened' ; case 'CANCELED' : return 'status-canceled' ; case 'CLOSED' : return 'status-closed' ; default : return '' ; } }, fetchEventData () { const eventId = this . $route . params . id ; this . $axios . get ( `http://127.0.0.1:8000/events/ ${ eventId } /` ) . then (( response ) => { this . event = response . data ; }) . catch (( error ) => { console . error ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439:' , error ); }); }, async getUserData () { try { const response = await axios . get ( 'http://127.0.0.1:8000/event/auth/users/me' , { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }); this . user = response . data ; } catch ( error ) { console . log ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:' , error ); } }, async registerForEvent () { try { const eventId = this . $route . params . id ; const userId = this . user . id ; const response = await axios . post ( 'http://127.0.0.1:8000/users-events/' , { EventUser : userId , EventCard : eventId , }, { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }); console . log ( 'Successfully registered for the event:' , response . data ); this . $router . push ({ name : 'EventHome' }); } catch ( error ) { if ( error . response && error . response . data . non_field_errors && error . response . data . non_field_errors . includes ( 'The fields EventUser, EventCard must make a unique set.' )) { this . registrationError = true ; } else { console . log ( 'Error while registering:' , error ); } } }, }, }; < /script> < style scoped > . event - detail { max - width : 600 px ; margin : 0 auto ; padding : 20 px ; position : relative ; } h1 { font - family : 'Poppins' , sans - serif ; color : # 00 80 ff ; } p { font - family : 'Poppins' , sans - serif ; color : # 333 ; margin - bottom : 10 px ; } . back - button { font - size : 24 px ; width : 40 px ; height : 40 px ; border - radius : 50 % ; background - color : # 00 80 ff ; color : white ; display : flex ; align - items : center ; justify - content : center ; text - decoration : none ; position : absolute ; top : 20 px ; left : 20 px ; } . back - button : hover { background - color : # 005 88 e ; } . status - opened { color : green ; } . status - canceled { color : orange ; } . status - closed { color : red ; } < /style>","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f"},{"location":"lab4/views/#_4","text":"\u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0441\u0432\u043e\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u043e\u0442\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0441\u043e\u0431\u044b\u0442\u0438\u044f. UserPage.vue < template > < div class = \"container mt-5\" > < div class = \"card\" > < div class = \"card-body\" > < h2 > \u0410\u043a\u043a\u0430\u0443\u043d\u0442 < /h2> < div class = \"alert alert-dark\" role = \"alert\" > \u041f\u0440\u0438\u0432\u0435\u0442 , {{ user . username }} < /div> < /div> < /div> < div class = \"card mt-5\" > < div class = \"card-header\" > < h2 > \u041c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f , \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b < /h2> < /div> < div class = \"card-body\" > < ul class = \"list-group\" > < li class = \"list-group-item\" v - for = \"event in events\" : key = \"event.id\" > < h5 >< strong > \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f :< /strong> {{ event.EventCard.PostTitle }}</h5> < p >< strong > \u0414\u0430\u0442\u0430 :< /strong> {{ event.EventCard.DateOfEvent }}</p> < p >< strong > \u0410\u0434\u0440\u0435\u0441 :< /strong> {{ event.EventCard.EventPlace.PlaceAddress }}</p> < CButton color = \"danger\" @ click = \"openModal(event.id)\" > \u0423\u0434\u0430\u043b\u0438\u0442\u044c < /CButton> < /li> < /ul> < /div> < CModal v - model : visible = \"visible\" @ close = \"closeModal\" > < CModalHeader : on - close = \"closeModal\" > < CModalTitle > \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0435 < /CModalTitle> < /CModalHeader> < CModalBody > \u0412\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b , \u0447\u0442\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u043e\u0442\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u044d\u0442\u043e\u0433\u043e \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u044f ? < /CModalBody> < CModalFooter > < CButton color = \"secondary\" @ click = \"closeModal\" > \u041e\u0442\u043c\u0435\u043d\u0430 < /CButton> < CButton color = \"primary\" @ click = \"deleteEvent\" > \u0423\u0434\u0430\u043b\u0438\u0442\u044c < /CButton> < /CModalFooter> < /CModal> < /div> < /div> < /template> < script > import { CButton , CModal , CModalHeader , CModalTitle , CModalBody , CModalFooter } from '@coreui/vue' ; import axios from 'axios' ; export default { components : { CButton , CModal , CModalHeader , CModalTitle , CModalBody , CModalFooter }, data () { return { events : [], user : '' , visible : false , eventToDelete : null }; }, mounted () { this . getUserData (); this . getEvents (); }, methods : { async getUserData () { try { const user_id = sessionStorage . getItem ( 'user_id' ); const response = await axios . get ( `http://127.0.0.1:8000/users/ ${ user_id } ` , { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }); this . user = response . data ; } catch ( error ) { console . log ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:' , error ); } }, async getEvents () { try { const response = await axios . get ( 'http://127.0.0.1:8000/users-wide-events/' , { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }); this . events = response . data . filter ( event => event . EventUser . id === this . user . id ); } catch ( error ) { console . log ( '\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0439:' , error ); } }, openModal ( eventId ) { this . visible = true ; this . eventToDelete = eventId ; }, closeModal () { this . visible = false ; }, deleteEvent () { axios . delete ( `http://127.0.0.1:8000/users-events/ ${ this . eventToDelete } /` , { headers : { Authorization : 'Token ' + sessionStorage . getItem ( 'token' ) }, }) . then (() => { console . log ( 'Registration deleted' ); this . getEvents (); this . closeModal (); }) . catch ( error => { console . error ( 'Error deleting registration:' , error ); }); } }, }; < /script> < style scoped > < /style>","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f"},{"location":"practice3/","text":"\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435 \u041c\u0438\u043d\u0438\u0441\u0442\u0435\u0440\u0441\u0442\u0432\u043e \u043d\u0430\u0443\u043a\u0438 \u0438 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0443\u0447\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u00ab\u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e\u00bb \u041e\u0422\u0427\u0415\u0422 \u043f\u043e \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u00abDjango Web framework. \u0417\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\u00bb \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u00abWeb-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u00bb \u041e\u0442\u0447\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0421\u0442\u0443\u0434\u0435\u043d\u0442: \u041d\u0438\u043a\u043e\u043d\u043e\u0440\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a33422 \u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u0418\u041a\u0422 \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023","title":"Intro"},{"location":"practice3/#_1","text":"\u041c\u0438\u043d\u0438\u0441\u0442\u0435\u0440\u0441\u0442\u0432\u043e \u043d\u0430\u0443\u043a\u0438 \u0438 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u0424\u0435\u0434\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0430\u0432\u0442\u043e\u043d\u043e\u043c\u043d\u043e\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0443\u0447\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0441\u0448\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u00ab\u041d\u0410\u0426\u0418\u041e\u041d\u0410\u041b\u042c\u041d\u042b\u0419 \u0418\u0421\u0421\u041b\u0415\u0414\u041e\u0412\u0410\u0422\u0415\u041b\u042c\u0421\u041a\u0418\u0419 \u0423\u041d\u0418\u0412\u0415\u0420\u0421\u0418\u0422\u0415\u0422 \u0418\u0422\u041c\u041e\u00bb \u041e\u0422\u0427\u0415\u0422 \u043f\u043e \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u00abDjango Web framework. \u0417\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u0438\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\u00bb \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u00abWeb-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u00bb \u041e\u0442\u0447\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u043b \u0421\u0442\u0443\u0434\u0435\u043d\u0442: \u041d\u0438\u043a\u043e\u043d\u043e\u0440\u043e\u0432 \u041c\u0430\u043a\u0441\u0438\u043c \u0413\u0440\u0443\u043f\u043f\u0430: \u041a33422 \u0424\u0430\u043a\u0443\u043b\u044c\u0442\u0435\u0442: \u0418\u041a\u0422 \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c: \u0413\u043e\u0432\u043e\u0440\u043e\u0432 \u0410\u043d\u0442\u043e\u043d \u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433 2023","title":"\u0412\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435"},{"location":"practice3/part1/","text":"\u041f\u0435\u0440\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u042f \u0432\u043e\u0448\u0435\u043b \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0440\u0435\u0436\u0438\u043c \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430 \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u043f\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u044f\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u041d\u043e\u0432\u044b\u0435 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b: \u041d\u043e\u0432\u044b\u0435 \u0430\u0432\u0442\u043e: \u0414\u0430\u043b\u0435\u0435 \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u0442\u044c \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u043a \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u043c. \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u044f \u0442\u0430\u043a\u0436\u0435 \u0441\u0432\u044f\u0437\u0430\u043b \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438\u0441\u0442\u0430 \u0441 \u0434\u0432\u0443\u043c\u044f \u043c\u0430\u0448\u0438\u043d\u0430\u043c\u0438. \u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f: \u0421\u0432\u044f\u0437\u044c \u0430\u0432\u0442\u043e \u0438 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439: \u041d\u0430 \u044d\u0442\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u0437\u0430\u043a\u043e\u043d\u0447\u0435\u043d\u043e.","title":"Part 1"},{"location":"practice3/part1/#_1","text":"","title":"\u041f\u0435\u0440\u0432\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"practice3/part1/#_2","text":"\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"practice3/part1/#_3","text":"\u042f \u0432\u043e\u0448\u0435\u043b \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0439 \u0440\u0435\u0436\u0438\u043c \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430 \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u043f\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u044f\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439.","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435"},{"location":"practice3/part1/#_4","text":"","title":"\u041d\u043e\u0432\u044b\u0435 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u044b:"},{"location":"practice3/part1/#_5","text":"\u0414\u0430\u043b\u0435\u0435 \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u0442\u044c \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u043a \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u043c. \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u044f \u0442\u0430\u043a\u0436\u0435 \u0441\u0432\u044f\u0437\u0430\u043b \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438\u0441\u0442\u0430 \u0441 \u0434\u0432\u0443\u043c\u044f \u043c\u0430\u0448\u0438\u043d\u0430\u043c\u0438.","title":"\u041d\u043e\u0432\u044b\u0435 \u0430\u0432\u0442\u043e:"},{"location":"practice3/part1/#_6","text":"","title":"\u0412\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f:"},{"location":"practice3/part1/#_7","text":"\u041d\u0430 \u044d\u0442\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u043f\u0443\u043d\u043a\u0442\u0430 \u0437\u0430\u043a\u043e\u043d\u0447\u0435\u043d\u043e.","title":"\u0421\u0432\u044f\u0437\u044c \u0430\u0432\u0442\u043e \u0438 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439:"},{"location":"practice3/part2/","text":"\u0412\u0442\u043e\u0440\u0430\u044f \u0438 \u0442\u0440\u0435\u0442\u044c\u044f \u0447\u0430\u0441\u0442\u0438 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0417\u0430\u0434\u0430\u043d\u0438\u0435 1. \u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e: \u0413\u0434\u0435 \u044d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 related_name \u043a \u043f\u043e\u043b\u044f\u043c \u043c\u043e\u0434\u0435\u043b\u0438 \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c) \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435) \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430) \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442) \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435) \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u042f \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u0430\u0442\u0440\u0438\u0431\u0443\u0442 related_name \u043a \u043f\u043e\u043b\u044f\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0441\u044b\u043b\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0434\u0440\u0443\u0433\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438, \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u043b\u043e \u0443\u0434\u043e\u0431\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043c\u0438. \u0414\u0430\u043b\u0435\u0435 \u044f \u0432\u044b\u0432\u0435\u043b \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 Kia: \u041f\u043e\u0441\u043b\u0435 \u044f \u043d\u0430\u0448\u0435\u043b \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u0410\u043b\u0435\u043a\u0441: \u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u043c \u043f\u0443\u043d\u043a\u0435 \u044f \u0432\u0437\u044f\u043b \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438\u0441\u0442\u0430 \u0441 id=4 \u0438 \u0432\u044b\u0432\u0435\u043b \u0435\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u044f \u0432\u044b\u0432\u0435\u043b \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0431\u0435\u043b\u044b\u0445 \u043c\u0430\u0448\u0438\u043d: \u0418 \u0432 \u043a\u043e\u043d\u0446\u0435 \u044f \u043d\u0430\u0448\u0435\u043b \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010: \u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b c \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435 \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u043f\u043e\u0434\u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u044f \u0432\u044b\u0432\u0435\u043b \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f, \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u044f \u043d\u0443\u0436\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: \u041f\u043e\u0442\u043e\u043c \u044f \u043d\u0430\u0448\u0435\u043b \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0431\u0430\u0437\u0435: \u0414\u0430\u043b\u0435\u0435 \u044f \u0432\u044b\u0432\u0435\u043b \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f: \u0417\u0434\u0435\u0441\u044c \u044f \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u043b \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438: \u0412 \u043a\u043e\u043d\u0446\u0435 \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f: \u041d\u0430 \u044d\u0442\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043e.","title":"Part 2"},{"location":"practice3/part2/#_1","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1. \u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e: \u0413\u0434\u0435 \u044d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 related_name \u043a \u043f\u043e\u043b\u044f\u043c \u043c\u043e\u0434\u0435\u043b\u0438 \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c) \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435) \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430) \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442) \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435)","title":"\u0412\u0442\u043e\u0440\u0430\u044f \u0438 \u0442\u0440\u0435\u0442\u044c\u044f \u0447\u0430\u0441\u0442\u0438 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"practice3/part2/#_2","text":"\u042f \u0434\u043e\u0431\u0430\u0432\u0438\u043b \u0430\u0442\u0440\u0438\u0431\u0443\u0442 related_name \u043a \u043f\u043e\u043b\u044f\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0441\u044b\u043b\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0434\u0440\u0443\u0433\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438, \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u043b\u043e \u0443\u0434\u043e\u0431\u043d\u043e \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\u043c\u0438. \u0414\u0430\u043b\u0435\u0435 \u044f \u0432\u044b\u0432\u0435\u043b \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 Kia: \u041f\u043e\u0441\u043b\u0435 \u044f \u043d\u0430\u0448\u0435\u043b \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u0410\u043b\u0435\u043a\u0441: \u0412 \u0442\u0440\u0435\u0442\u044c\u0435\u043c \u043f\u0443\u043d\u043a\u0435 \u044f \u0432\u0437\u044f\u043b \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0438\u0441\u0442\u0430 \u0441 id=4 \u0438 \u0432\u044b\u0432\u0435\u043b \u0435\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435: \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u044f \u0432\u044b\u0432\u0435\u043b \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0431\u0435\u043b\u044b\u0445 \u043c\u0430\u0448\u0438\u043d: \u0418 \u0432 \u043a\u043e\u043d\u0446\u0435 \u044f \u043d\u0430\u0448\u0435\u043b \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010: \u0417\u0430\u0434\u0430\u043d\u0438\u0435 2.\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b c \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435 \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u043f\u043e\u0434\u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u044f \u0432\u044b\u0432\u0435\u043b \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f, \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u044f \u043d\u0443\u0436\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438: \u041f\u043e\u0442\u043e\u043c \u044f \u043d\u0430\u0448\u0435\u043b \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0431\u0430\u0437\u0435: \u0414\u0430\u043b\u0435\u0435 \u044f \u0432\u044b\u0432\u0435\u043b \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f: \u0417\u0434\u0435\u0441\u044c \u044f \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u043b \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438: \u0412 \u043a\u043e\u043d\u0446\u0435 \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f: \u041d\u0430 \u044d\u0442\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u043e.","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435"}]}